{"version":3,"sources":["../node_modules/hyperapp/src/index.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/process/browser.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js","../node_modules/jstransform/node_modules/esprima-fb/esprima.js","../node_modules/jstransform/src/docblock.js","../node_modules/jstransform/src/utils.js","../node_modules/amdefine/amdefine.js","../node_modules/source-map/lib/source-map/source-map-generator.js","../node_modules/source-map/lib/source-map/source-map-consumer.js","../node_modules/source-map/lib/source-map/source-node.js","../node_modules/source-map/lib/source-map.js","../node_modules/jstransform/src/jstransform.js","../node_modules/esprima-fb/esprima.js","../node_modules/jsx-transform/lib/visitor.js","../node_modules/jsx-transform/lib/trimTrailingSpaces.js","../node_modules/process-nextick-args/index.js","../node_modules/isarray/index.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/events/events.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/base64-js/index.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/ieee754/index.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/isarray/index.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/inherits/inherits_browser.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/transform.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/util/support/isBufferBrowser.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/inherits/inherits_browser.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/util/util.js","../node_modules/xtend/immutable.js","../node_modules/through2/through2.js","../node_modules/jsx-transform/lib/jsx.js","../node_modules/parse5/lib/common/unicode.js","../node_modules/parse5/lib/common/error-codes.js","../node_modules/parse5/lib/tokenizer/preprocessor.js","../node_modules/parse5/lib/tokenizer/named-entity-data.js","../node_modules/parse5/lib/tokenizer/index.js","../node_modules/parse5/lib/common/html.js","../node_modules/parse5/lib/parser/open-element-stack.js","../node_modules/parse5/lib/parser/formatting-element-list.js","../node_modules/parse5/lib/utils/mixin.js","../node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js","../node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js","../node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js","../node_modules/parse5/lib/extensions/location-info/parser-mixin.js","../node_modules/parse5/lib/extensions/error-reporting/mixin-base.js","../node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js","../node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js","../node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js","../node_modules/parse5/lib/tree-adapters/default.js","../node_modules/parse5/lib/utils/merge-options.js","../node_modules/parse5/lib/common/doctype.js","../node_modules/parse5/lib/common/foreign-content.js","../node_modules/parse5/lib/parser/index.js","../node_modules/parse5/lib/serializer/index.js","../node_modules/parse5/lib/index.js","../node_modules/ast-types/lib/types.js","../node_modules/ast-types/lib/equiv.js","../node_modules/ast-types/lib/path.js","../node_modules/ast-types/lib/scope.js","../node_modules/ast-types/lib/node-path.js","../node_modules/ast-types/lib/path-visitor.js","../node_modules/ast-types/fork.js","../node_modules/ast-types/lib/shared.js","../node_modules/ast-types/def/core.js","../node_modules/ast-types/def/es6.js","../node_modules/ast-types/def/es7.js","../node_modules/ast-types/def/mozilla.js","../node_modules/ast-types/def/e4x.js","../node_modules/ast-types/def/jsx.js","../node_modules/ast-types/def/flow.js","../node_modules/ast-types/def/esprima.js","../node_modules/ast-types/def/babel-core.js","../node_modules/ast-types/def/babel.js","../node_modules/ast-types/def/typescript.js","../node_modules/ast-types/def/es-proposals.js","../node_modules/ast-types/main.js","../node_modules/recast/lib/types.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/assert/node_modules/util/support/isBufferBrowser.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/assert/node_modules/inherits/inherits_browser.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/assert/node_modules/util/util.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/assert/assert.js","../node_modules/recast/node_modules/source-map/lib/base64.js","../node_modules/recast/node_modules/source-map/lib/base64-vlq.js","../node_modules/recast/node_modules/source-map/lib/util.js","../node_modules/recast/node_modules/source-map/lib/array-set.js","../node_modules/recast/node_modules/source-map/lib/mapping-list.js","../node_modules/recast/node_modules/source-map/lib/source-map-generator.js","../node_modules/recast/node_modules/source-map/lib/binary-search.js","../node_modules/recast/node_modules/source-map/lib/quick-sort.js","../node_modules/recast/node_modules/source-map/lib/source-map-consumer.js","../node_modules/recast/node_modules/source-map/lib/source-node.js","../node_modules/recast/node_modules/source-map/source-map.js","../node_modules/recast/lib/util.js","../node_modules/recast/node_modules/esprima/dist/esprima.js","../node_modules/recast/parsers/esprima.js","../../../../.nvm/versions/node/v10.4.1/lib/node_modules/parcel-bundler/node_modules/os-browserify/browser.js","../node_modules/recast/lib/options.js","../node_modules/private/private.js","../node_modules/recast/lib/mapping.js","../node_modules/recast/lib/lines.js","../node_modules/recast/lib/fast-path.js","../node_modules/recast/lib/patcher.js","../node_modules/recast/lib/comments.js","../node_modules/recast/lib/parser.js","../node_modules/recast/lib/printer.js","../node_modules/recast/main.js","../src/main.mjs","core/main.mjs","actions.mjs","state.mjs","../node_modules/ijk/index.js","views/main.mjs","view.mjs","main.mjs"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","nodeName","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","setPartialState","concat","scheduleRender","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","insertBefore","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","target","source","out","value","slice","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","style","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","removeElement","done","removeChild","removeChildren","ondestroy","onremove","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","root","factory","define","amd","esprima","Token","TokenName","FnExprTokens","Syntax","PropertyKind","Messages","Regex","SyntaxTreeDelegate","XHTMLEntities","ClassPropertyType","strict","index","lineNumber","lineStart","delegate","lookahead","extra","assert","condition","message","StringMap","$data","isDecimalDigit","ch","isHexDigit","indexOf","isOctalDigit","isWhiteSpace","String","fromCharCode","isLineTerminator","isIdentifierStart","NonAsciiIdentifierStart","test","isIdentifierPart","NonAsciiIdentifierPart","isStrictModeReservedWord","id","isRestrictedWord","addComment","start","end","loc","comment","lastCommentStart","range","comments","attachComment","leadingComments","trailingComments","skipSingleLineComment","charCodeAt","skipMultiLineComment","UnexpectedToken","skipComment","scanHexEscape","prefix","code","scanUnicodeCodePointEscape","cu1","cu2","getEscapedIdentifier","substr","scanIdentifier","getIdentifier","Identifier","isKeyword","Keyword","NullLiteral","BooleanLiteral","scanPunctuator","code2","ch2","ch3","ch4","ch1","inJSXTag","inJSXChild","Punctuator","tokenize","openParenToken","tokens","openCurlyToken","curlyLastIndex","curlyStack","inType","scanNumericLiteral","number","scanHexLiteral","NumericLiteral","parseInt","scanBinaryLiteral","scanOctalLiteral","octal","parseFloat","scanRegExp","body","flags","scanRegExpBody","str","classMarker","terminated","UnterminatedRegExp","scanRegExpFlags","restore","testRegExp","pattern","tmp","replace","$0","$1","InvalidRegExp","RegExp","exception","RegularExpression","literal","isIdentifierName","token","advance","EOF","advanceJSXChild","scanJSXText","scanJSXStringLiteral","innerToken","quote","scanStringLiteral","unescaped","StringLiteral","isJSXIdentifierStart","scanJSXIdentifier","isJSXIdentifierPart","JSXIdentifier","scanTemplate","cooked","head","tail","Template","advanceSlash","prevToken","checkToken","lex","peek","pos","line","lookahead2","adv","rewind","markerCreate","offset","col","markerCreatePreserveWhitespace","markerApply","postProcess","processComment","lastChild","bottomRight","bottomRightStack","last","Program","peekLineTerminator","found","throwError","messageFormat","error","msg","whole","idx","column","description","throwErrorTolerant","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","JSXText","UnexpectedString","UnexpectedIdentifier","isFutureReservedWord","UnexpectedReserved","StrictReservedWord","UnexpectedTemplate","raw","expect","expectKeyword","keyword","contextual","expectContextualKeyword","match","matchKeyword","expectedType","matchContextualKeyword","matchAsync","backtrackToken","matches","consumeSemicolon","oldIndex","oldLineNumber","oldLineStart","oldLookahead","isLeftHandSide","expr","MemberExpression","parseArrayInitialiser","elements","blocks","filter","possiblecomprehension","ComprehensionError","parseForStatement","ignoreBody","of","ForOfStatement","ComprehensionBlock","left","kind","parseExpression","parseSpreadOrAssignmentExpression","SpreadElement","ElementAfterSpreadElement","ComprehensionRequiresBlock","createComprehensionExpression","createArrayExpression","parsePropertyFunction","options","previousStrict","previousYieldAllowed","previousAwaitAllowed","params","defaults","yieldAllowed","generator","awaitAllowed","async","parseConciseBody","StrictParamName","createFunctionExpression","BlockStatement","returnType","typeParameters","parsePropertyMethodFunction","method","parseParams","stricted","parseObjectPropertyKey","StrictOctalLiteral","createLiteral","parseAssignmentExpression","createIdentifier","parseObjectProperty","param","computed","createProperty","parseTypeParameterDeclaration","parseTypeAnnotation","parseTypeAnnotatableIdentifier","parseObjectSpreadProperty","createSpreadProperty","parseObjectInitialiser","properties","property","storedKind","toString","Data","Get","Set","has","get","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","set","createObjectExpression","parseTemplateElement","option","createTemplateElement","parseTemplateLiteral","quasi","quasis","expressions","createTemplateLiteral","matchAsyncFuncExprOrDecl","parsePrimaryExpression","createThisExpression","parseFunctionExpression","parseClassExpression","parseGroupExpression","typeAnnotation","parenthesizedCount","createTypeCast","parseJSXElement","parseArguments","arg","createSpreadElement","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseNewExpression","callee","parseLeftHandSideExpression","createMemberExpression","createTaggedTemplateExpression","createNewExpression","parseLeftHandSideExpressionAllowCall","createCallExpression","parsePostfixExpression","StrictLHSPostfix","InvalidLHSInAssignment","createPostfixExpression","parseUnaryExpression","StrictLHSPrefix","createUnaryExpression","operator","argument","StrictDelete","binaryPrecedence","allowIn","prec","parseConditionalExpression","previousAllowIn","consequent","alternate","parseBinaryExpression","stack","right","markers","createBinaryExpression","createConditionalExpression","reinterpretAsAssignmentBindingPattern","ObjectExpression","ObjectPattern","SpreadProperty","PropertyAfterSpreadProperty","ArrayExpression","ArrayPattern","ObjectPatternAsSpread","CallExpression","NewExpression","reinterpretAsDestructuredParameter","InvalidLHSInFormalsList","reinterpretAsCoverFormalsList","defaultCount","AssignmentExpression","StrictParamDupe","firstRestricted","parseArrowFunctionExpression","createArrowFunctionExpression","oldParenthesizedCount","op","startsWithParen","possiblyAsync","matchYield","parseYieldExpression","delegateFlag","createYieldExpression","matchAwait","parseAwaitExpression","createAwaitExpression","SequenceExpression","StrictLHSAssignment","createAssignmentExpression","sequence","spreadFound","possibleArrow","createSequenceExpression","IllegalSpread","parseBlock","block","parseStatementList","list","statement","parseSourceElement","createBlockStatement","paramTypes","createTypeParameterDeclaration","parseTypeParameterInstantiation","oldInType","parseType","createTypeParameterInstantiation","parseObjectTypeIndexer","isStatic","createObjectTypeIndexer","parseObjectTypeMethodish","parseFunctionTypeParam","createFunctionTypeAnnotation","parseObjectTypeMethod","optional","createObjectTypeProperty","parseObjectTypeCallProperty","valueMarker","createObjectTypeCallProperty","parseObjectType","allowStatic","callProperties","propertyKey","propertyTypeAnnotation","matchStatic","indexers","createObjectTypeAnnotation","parseVariableIdentifier","createFunctionTypeParam","parseFunctionTypeParams","ret","parsePrimaryType","isGroupedType","createAnyTypeAnnotation","createBooleanTypeAnnotation","createNumberTypeAnnotation","createStringTypeAnnotation","parseGenericType","typeIdentifier","createQualifiedTypeIdentifier","createGenericTypeAnnotation","parseTupleType","types","createTupleTypeAnnotation","ConfusedAboutFunctionType","parseVoidType","createVoidTypeAnnotation","parseTypeofType","createTypeofTypeAnnotation","createStringLiteralTypeAnnotation","parsePrefixType","createNullableTypeAnnotation","parsePostfixType","t","createArrayTypeAnnotation","parseIntersectionType","createIntersectionTypeAnnotation","parseUnionType","createUnionTypeAnnotation","createTypeAnnotation","requireTypeAnnotation","canBeOptionalParam","ident","isOptionalParam","parseVariableDeclaration","init","typeAnnotationMarker","allowKeyword","StrictVarName","NoUninitializedConst","createVariableDeclarator","parseVariableDeclarationList","parseModuleSpecifier","InvalidModuleSpecifier","parseExportSpecifier","createExportSpecifier","parseExportDeclaration","declaration","sourceElement","isExportFromIdentifier","src","specifiers","createExportDeclaration","parseExportBatchSpecifier","createExportBatchSpecifier","MissingFromClause","parseImportDeclaration","token2","importKind","createImportDeclaration","parseImportDefaultSpecifier","createImportDefaultSpecifier","parseImportNamespaceSpecifier","NoAsAfterImportNamespace","createImportNamespaceSpecifier","parseNamedImports","createImportSpecifier","opts","update","oldInIteration","EachNotAllowed","parseForVariableDeclaration","declarations","createVariableDeclaration","InvalidLHSInForIn","inIteration","undefined","parseStatement","createForStatement","createForInStatement","createForOfStatement","parseSwitchCase","createSwitchCase","parseTryStatement","handlers","finalizer","parseCatchClause","StrictCatchVariable","createCatchClause","NoCatchOrFinally","createTryStatement","labeledBody","parseEmptyStatement","createEmptyStatement","parseExpressionStatement","createExpressionStatement","parseBreakStatement","label","inSwitch","IllegalBreak","createBreakStatement","labelSet","UnknownLabel","parseContinueStatement","IllegalContinue","createContinueStatement","parseDebuggerStatement","createDebuggerStatement","parseDoWhileStatement","createDoWhileStatement","parseFunctionDeclaration","parseClassDeclaration","implemented","superTypeParameters","superClass","parseClassImplements","createClassDeclaration","parseClassBody","parseIfStatement","createIfStatement","parseReturnStatement","inFunctionBody","IllegalReturn","createReturnStatement","parseSwitchStatement","discriminant","cases","clause","oldInSwitch","defaultFound","createSwitchStatement","MultipleDefaultsInSwitch","parseThrowStatement","NewlineAfterThrow","createThrowStatement","parseVariableStatement","parseWhileStatement","createWhileStatement","parseWithStatement","object","StrictModeWith","createWithStatement","Redeclaration","delete","createLabeledStatement","parseFunctionSourceElements","oldLabelSet","oldInFunctionBody","sourceElements","expression","Literal","validateParam","paramSet","parseParam","def","ObjectPatternAsRestParameter","DefaultRestParameter","ParameterAfterRestParameter","isAsync","StrictFunctionName","createFunctionDeclaration","parseClassElement","possiblyOpenBracketToken","parseMethodDefinition","propType","tokenValue","static","createMethodDefinition","parseClassProperty","createClassProperty","classElement","propName","methodDefinition","classElements","existingProps","MethodDefinition","IllegalClassConstructorProperty","IllegalDuplicateClassProperty","createClassBody","createClassImplements","matchImplements","createClassExpression","parseConstLetDeclaration","IllegalExportDeclaration","IllegalImportDeclaration","parseInterface","parseTypeAlias","createTypeAlias","parseDeclareClass","parseDeclareFunction","parseDeclareVariable","parseDeclareModule","bodyMarker","idMarker","createDeclareModule","parseProgramElement","isModule","sourceType","parseProgram","parseProgramElements","createProgram","getQualifiedJSXName","JSXNamespacedName","namespace","JSXMemberExpression","scanJSXEntity","count","LeadingZeros","isNaN","stopChars","parseJSXIdentifier","createJSXIdentifier","parseJSXNamespacedName","createJSXNamespacedName","parseJSXElementName","parseJSXMemberExpression","createJSXMemberExpression","parseJSXExpressionContainer","origInJSXChild","origInJSXTag","parseJSXEmptyExpression","createJSXEmptyExpression","createJSXExpressionContainer","parseJSXAttribute","parseJSXSpreadAttribute","createJSXSpreadAttribute","parseJSXAttributeName","createJSXAttribute","JSXEmptyExpression","InvalidJSXAttributeValue","openingElement","closingElement","parseJSXOpeningElement","selfClosing","createJSXOpeningElement","parseJSXClosingElement","createJSXClosingElement","ExpectedJSXClosingTag","AdjacentJSXElements","createJSXElement","parseInterfaceExtends","createInterfaceExtends","parseInterfaceish","extended","createInterface","DeclareClass","createDeclareFunction","createDeclareVariable","collectToken","entry","regex","collectRegex","filterTokenLocation","unpatch","Object","hasOwnProperty","LogicalExpression","BinaryExpression","BreakStatement","CatchClause","ConditionalExpression","ContinueStatement","DebuggerStatement","DoWhileStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","funDecl","FunctionDeclaration","funExpr","FunctionExpression","TypeAnnotation","TypeCastExpression","FunctionTypeAnnotation","FunctionTypeParam","NullableTypeAnnotation","elementType","ArrayTypeAnnotation","GenericTypeAnnotation","qualification","QualifiedTypeIdentifier","TypeParameterDeclaration","TypeParameterInstantiation","AnyTypeAnnotation","BooleanTypeAnnotation","NumberTypeAnnotation","StringTypeAnnotation","StringLiteralTypeAnnotation","VoidTypeAnnotation","TypeofTypeAnnotation","TupleTypeAnnotation","ObjectTypeAnnotation","ObjectTypeIndexer","ObjectTypeCallProperty","ObjectTypeProperty","UnionTypeAnnotation","IntersectionTypeAnnotation","TypeAlias","InterfaceDeclaration","InterfaceExtends","DeclareFunction","DeclareVariable","DeclareModule","JSXAttribute","JSXSpreadAttribute","JSXElement","JSXExpressionContainer","JSXOpeningElement","JSXClosingElement","IfStatement","LabeledStatement","accessor","UpdateExpression","shorthand","Property","ReturnStatement","SwitchCase","SwitchStatement","ThisExpression","ThrowStatement","guardedHandlers","TryStatement","UnaryExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","TemplateElement","TemplateLiteral","tag","TaggedTemplateExpression","arrowExpr","ArrowFunctionExpression","propertyType","ClassProperty","ClassBody","ClassImplements","ClassExpression","ClassDeclaration","ExportSpecifier","ExportBatchSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","isDefault","ExportDeclaration","ImportSpecifier","ImportDeclaration","dlg","YieldExpression","AwaitExpression","ComprehensionExpression","tolerant","lexError","parse","program","extend","create","freeze","docblockRe","ltrimRe","extract","contents","commentStartRe","commentEndRe","wsRe","stringStartRe","multilineRe","propertyRe","docblock","prev","trim","exec","parseAsObject","pairs","require","leadingIndentRegexp","nonWhiteRegexp","createState","rootNode","transformOptions","updateState","keys","forEach","updatedKey","catchup","contentTransformer","g","position","substring","transformed","updateIndent","sourceMap","addMapping","bufferLine","bufferColumn","sourceLine","sourceColumn","sourceMapFilename","sourceLines","split","transformedLines","buffer","getNodeSourceText","_replaceNonWhite","_stripNonWhite","getNextSyntacticCharOffset","char","pendingSource","pendingSourceLines","charOffset","withinBlockComment","withinString","shift","lineEndPos","currChar","nextTwoChars","lineLoop","charLoop","catchupWhiteOut","catchupWhiteSpace","reNonNewline","stripNonNewline","catchupNewlines","move","append","indentBy","indentBefore","getDocblock","identWithinLexicalScope","identName","stopBeforeNode","currScope","localScope","identifiers","parentNode","parentScope","identInLocalScope","initScopeMetadata","boundaryNode","declareIdentInLocalScope","metaData","bindingPath","bindingNode","getLexicalBindingMetadata","getLocalBindingMetadata","analyzeAndTraverse","analyzer","traverser","unshift","child","getOrderedChildren","sort","a","b","pair","enqueueNodeWithStartIndex","isArray","ii","containsChildOfType","containsChildMatching","matcher","foundMatchingChild","nodeTypeAnalyzer","nodeTypeTraverser","scopeTypes","getBoundaryNode","JSON","stringify","getTempVar","tempVarIndex","injectTempVar","tempVar","tempVars","injectTempVarDeclarations","join","amdefine","requireFn","defineCache","makeRequire","stringRequire","loaderCache","alreadyCalled","normalize","baseName","baseParts","charAt","trimDots","ary","part","splice","runFactory","deps","r","m","__filename","depName","systemRequire","relId","amdRequire","callback","toUrl","filePath","dirname","filename","plugin","relName","originalId","load","makeLoad","fromText","text","base64VLQ","util","ArraySet","MappingList","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","aSourceMapConsumer","sourceRoot","file","eachMapping","mapping","newMapping","generatedLine","generatedColumn","relative","original","originalLine","originalColumn","sources","sourceFile","content","sourceContentFor","setSourceContent","generated","_validateMapping","add","aSourceFile","aSourceContent","toSetString","applySourceMap","aSourceMapPath","newSources","newNames","unsortedForEach","originalPositionFor","aGenerated","aOriginal","aSource","aName","_serializeMappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","mappings","toArray","compareByGeneratedPositionsInflated","encode","_generateSourcesContent","aSources","aSourceRoot","toJSON","sourcesContent","binarySearch","quickSort","SourceMapConsumer","aSourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","names","fromArray","Mapping","lastOffset","_sections","s","url","offsetLine","offsetColumn","__generatedMappings","defineProperty","_parseMappings","__originalMappings","_charIsMappingSeparator","aStr","c","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","aCallback","aContext","aOrder","context","order","_generatedMappings","_originalMappings","at","allGeneratedPositionsFor","needle","_findMapping","compareByOriginalPositions","consumer","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","cachedSegments","temp","originalMappings","decode","compareByGeneratedPositionsDeflated","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","TypeError","search","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","hasContentsOfAllSources","size","some","sc","nullOnMissing","urlParse","fileUriAbsPath","scheme","generatedPositionFor","constructor","j","sectionIndex","section","cmp","generatedOffset","bias","every","generatedPosition","sectionMappings","adjustedMapping","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","shiftNextLine","lineContents","lastGeneratedLine","lastMapping","nextLine","addMappingWithCode","aChunk","chunk","prepend","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","utils","declareIdentInScope","_nodeIsClosureScopeBoundary","parentIsFunction","parentIsCurlylessArrowFunc","_nodeIsBlockScopeBoundary","traverse","startIndex","scopeIsStrict","metadata","parentNodeslice","walker","collectClosureIdentsAndTraverse","visitLocalClosureIdentifiers","collectBlockIdentsAndTraverse","visitLocalBlockIdentifiers","visitors","_astCache","getAstForSource","disableAstCache","ast","transform","exportKind","EventEmitter","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","n","er","handler","err","listener","newListener","warned","console","trace","fired","listenerCount","evlistener","emitter","formatRegExp","format","f","isString","objects","inspect","x","Number","_","isNull","deprecate","fn","global","noDeprecation","deprecated","throwDeprecation","traceDeprecation","debugEnviron","debugs","obj","ctx","stylizeNoColor","formatValue","depth","colors","isBoolean","showHidden","_extend","customInspect","stylize","stylizeWithColor","styleType","styles","arrayToHash","hash","val","recurseTimes","primitive","formatPrimitive","visibleKeys","isError","getOwnPropertyNames","formatError","isRegExp","isDate","Date","base","output","braces","toUTCString","seen","formatArray","formatProperty","reduceToSingleString","simple","l","desc","getOwnPropertyDescriptor","reduce","cur","numLinesEst","ar","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","o","pad","debuglog","toUpperCase","pid","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","Ap","each","Op","objToStr","funObjStr","strObjStr","hasOwn","Type","check","self","nameObjStr","defineProperties","deep","Tp","shallowStringify","builtInCtorFns","builtInCtorTypes","builtInTypes","defBuiltInType","example","objStr","toType","from","Def","fromObject","bicfIndex","Field","defaultFn","hidden","or","arr","arrayOf","elemType","elem","fields","field","Fp","getValue","typeName","defCache","fromValue","finalized","Dp","isSupertypeOf","that","allSupertypes","getSupertypeNames","supertypeList","computeSupertypeLookupTable","candidates","table","typeNames","typeNameCount","superTypeName","checkAllFields","allFields","checkFieldByName","vDef","bases","baseNames","builders","nodePrototype","defineMethod","func","old","isArrayOfString","getBuilderName","upperCasePrefix","getStatementBuilderName","build","newBuildParams","buildable","addParam","built","isArgAvailable","all","buildParams","builder","argc","ownFields","namedTypes","getFieldNames","fieldNames","getFieldValue","fieldName","into","eachField","someField","finalize","populateSupertypeList","lastSeen","to","lastIndexOf","wrapExpressionBuilderWithStatement","wrapperName","wrapped","expressionStatement","fork","use","astNodesAreEquivalent","problemPath","areEquivalent","subscriptForProperty","arraysAreEquivalent","aLength","problemPathTail","objectsAreEquivalent","aNames","aNameCount","bNames","bNameCount","aChild","bChild","seenNames","multiline","ignoreCase","Path","parentPath","__childCache","Pp","getChildCache","getChildPath","cache","actualChildValue","getValueProperty","childPath","emptyMoves","getMoves","Math","max","min","moves","newIndex","childPaths","insertAt","pp","insertAtArgs","insertAfter","replacement","results","parentValue","parentCache","repairRelationshipWithParent","originalLength","spliceArgs","splicedOut","Node","Expression","Scope","enumerable","Function","ScopeType","isEstablishedBy","Sp","recursiveScanScope","bindings","paramPath","addTypePattern","patternPath","Pattern","addPattern","local","pathHasValue","recursiveScanChild","catchParamName","hadBinding","AssignmentPattern","propertyPath","elementPath","PropertyPattern","SpreadElementPattern","SpreadPropertyPattern","didScan","declares","scan","declaresType","declareTemporary","identifier","injectTemporary","bodyPath","variableDeclaration","variableDeclarator","force","scanScope","getBindings","getTypes","lookup","scope","lookupType","getGlobalScope","isGlobal","NodePath","NPp","isBinary","_computeNode","_computeParent","_computeScope","prune","remainingNodePath","cleanUpNodesAfterPrune","cleanUpIfStatementAfterPrune","ifStatement","testExpression","negatedTestExpression","unaryExpression","testExpressionStatement","needsParens","assumeExpressionContext","po","PRECEDENCE","no","np","containsCallExpression","canBeFirstInStatement","firstInStatement","tier","Printable","function","PathVisitor","_reusableContextStack","_methodNameTable","computeMethodNameTable","visitor","methodName","supertypeTable","methodNameTable","_shouldVisitComments","Context","makeContextConstructor","currentPath","needToCallTraverse","seal","Cp","sharedContextProtoMethods","_visiting","_changeReported","fromMethodsObject","methods","Visitor","Vp","PVp","visit","visitChildren","visitWithoutReset","childNames","childCount","childName","_abortRequested","reset","didNotThrow","AbortRequest","abort","request","cancel","acquireContext","invokeVisitorMethod","releaseContext","reportChanged","wasChangeReported","newVisitor","defs","used","usedResult","builtin","geq","than","naiveIsPrimitive","string","boolean","null","shared","Boolean","emptyArray","UnaryOperator","BinaryOperator","AssignmentOperator","UpdateOperator","LogicalOperator","ClassBodyElement","false","JSXElementName","JSXAttributes","LegacyVariance","ObjectExpressionProperty","ObjectPatternProperty","IdOrQualifiedName","parenthesized","keywordType","ParametersType","TSTypeMember","intToCharMap","charCode","bigA","base64","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","encoded","digit","vlq","aIndex","aOutParam","strLen","continuation","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","urlGenerate","aParsedUrl","auth","host","port","aPath","isAbsolute","parts","up","aRoot","aPathUrl","aRootUrl","joined","level","supportsNullProto","identity","isProtoString","mappingA","mappingB","onlyCompareOriginal","strcmp","onlyCompareGenerated","aStr1","aStr2","parseSourceMapInput","computeSourceURL","sourceURL","sourceMapURL","parsed","hasNativeMap","Map","_array","_set","aArray","aAllowDuplicates","sStr","isDuplicate","aIdx","generatedPositionAfter","lineA","lineB","columnA","columnB","_sorted","_last","aThisArg","aMapping","sourceRelative","next","nameIdx","sourceIdx","recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","floor","swap","y","randomIntInRange","low","high","round","random","doQuickSort","comparator","p","pivotIndex","pivot","q","aSourceMapURL","_absoluteSources","_sourceMapURL","_findSourceIndex","relativeSource","NEWLINE_CODE","remainingLinesIndex","getNextLine","getOption","defaultValue","getUnionOfKeys","keyCount","comparePos","pos1","pos2","copyPos","expandLoc","parentLoc","childLoc","fixForLoopHead","lines","fix","prevPos","fixTemplateLiteral","afterLeftBackTickPos","strictEqual","ok","nextPos","firstQuasi","rightBackTickPos","lastQuasi","dollarCurlyPos","skipSpaces","quasiBefore","rightCurlyPos","quasiAfter","composeSourceMaps","formerMap","latterMap","smcFormer","smcLatter","smg","sourcesToContents","origPos","sourceName","getTrueLoc","include","decorators","isExportDeclaration","fixFaultyLocations","firstPos","lastPos","decorator","getParentExportDeclaration","getParentNode","getName","isTrailingCommaEnabled","trailingComma","modules","installedModules","__webpack_require__","moduleId","loaded","comment_handler_1","jsx_parser_1","parser_1","tokenizer_1","commentHandler","proxyDelegate","parserDelegate","collectComment","CommentHandler","attach","parser","jsx","JSXParser","Parser","parseModule","parseScript","config","errorHandler","parsingOptions","tokenizer","Tokenizer","getNextToken","tolerate","syntax_1","leading","trailing","insertInnerComments","innerComments","findTrailingComments","entry_1","firstComment","findLeadingComments","visitNode","visitComment","__extends","extendStatics","setPrototypeOf","__proto__","__","character_1","JSXNode","jsx_syntax_1","token_1","xhtml_entities_1","getQualifiedElementName","elementName","qualifiedName","JSXSyntax","ns","_super","parseJSXRoot","startJSX","scanner","startMarker","finishJSX","nextToken","reenterJSX","expectJSX","createJSXNode","collectComments","createJSXChildNode","scanXHTMLEntity","valid","numeric","hex","eof","Character","lexJSX","cp","n1","n2","nextJSXToken","lastMarker","convertToken","nextJSXText","peekJSXToken","saveState","scanComments","restoreState","throwUnexpectedToken","matchJSX","name_1","attributeName","name_2","parseJSXStringLiteralAttribute","getTokenRaw","parseJSXExpressionAttribute","tolerateError","parseJSXAttributeValue","parseJSXNameValueAttribute","parseJSXAttributes","attribute","parseJSXBoundaryElement","name_3","parseJSXChildren","parseComplexJSXElement","el","opening","closing","open_1","isStartOfExpression","fromCodePoint","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","logical","ComputedMemberExpression","Directive","directive","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","exported","imported","MetaProperty","meta","Module","RegexLiteral","RestElement","Script","StaticMemberExpression","Super","assert_1","error_handler_1","messages_1","scanner_1","ErrorHandler","Scanner","trackComment","operatorPrecedence","hasLineTerminator","values","_i","createError","unexpectedTokenError","lastMarkerLineStart","tolerateUnexpectedToken","multiLine","nextRegexToken","createNode","startNode","expectCommaSeparator","matchAssign","isolateCoverGrammar","parseFunction","previousIsBindingElement","isBindingElement","previousIsAssignmentTarget","isAssignmentTarget","previousFirstCoverInitializedNameError","firstCoverInitializedNameError","inheritCoverGrammar","await","matchAsyncFunction","parseArrayInitializer","parseObjectInitializer","allowYield","parseIdentifierName","parseSpreadElement","parsePropertyMethod","previousAllowStrictDirective","allowStrictDirective","isGenerator","previousAllowYield","parseFormalParameters","parsePropertyMethodAsyncFunction","previousAwait","isPropertyKey","hasProto","lookaheadPropertyKey","qualifiedPropertyName","parseGetterMethod","parseSetterMethod","parseGeneratorMethod","DuplicateProtoProperty","parseTemplateHead","reinterpretExpressionAsPattern","ArrowParameterPlaceHolder","startToken","parseRestElement","arrow","parameters","parseAsyncArgument","parseAsyncArguments","maybeAsync","asyncArrow","parseSuper","parseUpdateExpression","parseExponentiationExpression","precedence","precedences","checkPatternParam","parseStatementListItem","parseLexicalDeclaration","inFor","isLexicalDeclaration","parseLexicalBinding","parsePattern","DeclarationMissingInitializer","parseBindingList","parseBindingRestElement","parseArrayPattern","parsePatternWithDefault","parsePropertyPattern","keyToken","parseObjectPattern","LetInLexicalBinding","opt","parseIfClause","StrictFunction","previousInIteration","forIn","decl","ForInOfLoopInitializer","initStartToken","InvalidLHSInForLoop","initSeq","hasArgument","previousInSwitch","parseLabelledStatement","GeneratorInLegacyContext","paramMap","DuplicateBinding","parseFinallyClause","parseDirectivePrologues","previousLabelSet","previousInFunctionBody","writable","configurable","parseFormalParameter","identifierIsOptional","previousAllowAwait","formalParameters","parseDirective","IllegalLanguageModeDirective","BadGetterArity","BadSetterArity","BadSetterRestParameter","hasConstructor","punctuator","ConstructorIsAsync","StaticPrototype","ConstructorSpecialMethod","DuplicateConstructor","parseClassElementList","elementList","classBody","parseImportSpecifier","exportDeclaration","recordError","constructError","hexValue","octalValue","UnexpectedTokenIllegal","codePointAt","second","getComplexIdentifier","octalToDecimal","InvalidEscapedReservedWord","num","isImplicitOctalLiteral","unescaped_1","InvalidHexEscapeSequence","octToDec","rawOffset","unescaped_2","TemplateOctalLiteral","astralSubstitute","$2","codePoint","Reader","curly","paren","beforeFunctionExpression","isRegexStart","previous","trackRange","trackLoc","reader","startRegex","EOL","originalObject","originalDefProp","originalCreate","defProp","definePropertyIsBrokenInIE8","makeSafeToCall","numToStr","strSlice","cloner","rand","uniqueKeys","makeUniqueKey","uniqueKey","internString","originalGetOPNs","defaultCreatorFn","makeAccessor","secretCreatorFn","brand","passkey","register","secret","vault","forget","dst","SourceLocation","Position","linesModule","sourceLoc","targetLoc","Lines","Mp","addPos","toPos","subtractPos","fromPos","skipChars","sourceFromPos","targetLines","targetFromPos","targetToPos","targetComparison","sourceCursor","targetCursor","lineDiff","getLineLength","skip","subtract","indent","by","skipFirstLine","noNegativeColumns","startLine","endLine","startColumn","endColumn","normalizeOptions","secretKey","useSymbol","Symbol","getSecret","infos","sourceFileName","setSymbolOrKey","for","Lp","copyLineInfo","info","locked","sliceStart","sliceEnd","fromStringCache","maxCacheKeyLen","countSpaces","spaces","tabWidth","ceil","leadingSpaceExp","lineTerminatorSeqExp","fromString","tabless","cacheable","isOnlyWhitespace","sliceInfo","startCol","endCol","lineLength","sliceString","getSourceMap","sourceMapName","updateJSON","json","cachedSourceMap","sourceChar","targetChar","bootstrapCharAt","strings","getIndentAt","stripMargin","width","newMappings","indentTail","lockIndentTail","guessTabWidth","cachedTabWidth","counts","lastIndent","diff","abs","maxCount","startsWithComment","firstLineInfo","firstLine","isPrecededOnlyByWhitespace","backward","modifyInPlace","trimLeft","emptyLines","trimRight","notStrictEqual","eachPos","startPos","bootstrapSlice","sliced","bootstrapSliceString","before","reuseWhitespace","tabs","useTabs","lineTerminator","isEmpty","separator","prevInfo","separatorSecret","appendSecret","prevLine","prevColumn","appendWithSeparator","other","FastPath","FPp","getNodeHelper","expressionStartsWithCurlyBrace","isUnaryLike","copy","reverse","valueIsDuplicate","valueIndex","getNode","getRootValue","origLen","Statement","parentName","riskyAdjoiningCharExp","Patcher","replacements","sliceFrom","toConcat","pushSlice","rep","getSurroundingComments","needsLeadingSpace","oldLines","oldLoc","newLines","posBeforeOldLoc","charBeforeOldLoc","newFirstChar","needsTrailingSpace","charAfterOldLoc","newLastPos","newLastChar","findReprints","newPath","reprints","newNode","deepEqual","oldPath","canReprint","findChildReprints","findAnyReprints","findArrayReprints","findObjectReprints","childReprints","tryToReprintComments","print","patcher","ableToReprintComments","reprint","oldComment","deleteComments","getReprinter","orig","origLoc","needToPrintNewPathWithComments","nls","nts","newParts","reusablePos","nonSpaceExp","hasOpeningParen","hasClosingParen","hasParens","originalReprintCount","childNodesCacheKey","getSortedChildNodes","resultArray","nameCount","decorateComment","middle","enclosingNode","precedingNode","followingNode","breakTies","tiesToBreak","tieCount","pn","gapEndPos","indexOfFirstLeadingComment","gap","addCommentHelper","addLeadingComment","addDanglingComment","addTrailingComment","printLeadingComment","commentPath","Comment","trailingSpace","printTrailingComment","leadingSpace","en","lastTie","printComments","innerLines","leadingParts","trailingParts","attachComments","TreeCopier","sourceWithoutTabs","trueProgramLoc","TCp","item","getPrototypeOf","oldIndent","newIndent","PrintResult","PRp","warnedAboutToString","warn","emptyPrintResult","Printer","originalOptions","explicitTabWidth","printWithComments","includeComments","oldTabWidth","maybeReprint","reprinter","maybeAddParens","printRootGenerically","genericPrint","printGenerically","inputSourceMap","oldReuseWhitespace","pr","printPath","linesWithoutParens","genericPrintNoParens","decoratorPath","directives","printStatementSequence","declare","printFunctionParams","arrowParensAlways","printMethod","printExportDeclaration","maybeAddSemicolon","unbracedSpecifiers","bracedSpecifiers","specifierPath","spec","wrapColumn","objectCurlySpacing","naked","argLines","printArgumentsList","allowBreak","isTypeAnnotation","flowObjectCommas","oneLine","leftBrace","exact","rightBrace","leftBraceIndex","elems","printed","arrayBracketSpacing","elemPath","nodeStr","maxLen","ForAwaitStatement","con","adjustClause","endsWithBrace","sep","indented","doBody","statements","handlerPath","guard","consequentPath","openingPropName","closingPropName","openingLines","childLines","closingLines","attrParts","attrPath","attrLines","definition","accessibility","abstract","readonly","variance","printVariance","printFlowDeclaration","isArrowFunctionTypeAnnotation","bound","memberLines","initializer","export","withParens","TSFunctionType","TSTypePredicate","isInMappedType","TSMappedType","constraint","const","isExport","isExternal","bodyLines","inClassBody","filtered","sawComment","sawStatement","stmtPath","stmt","prevTrailingSpace","notFirst","notLast","trueLoc","beforeStart","beforeStartLine","leadingGap","afterEnd","trailingGap","maxSpace","s1","s2","spaceLines1","spaceLines2","access","valuePath","defExprPath","shouldPrintSpaces","Declaration","lastNonSpaceCharacter","parentExportDecl","variancePath","swapQuotes","double","single","eoc","prettyPrint","transformer","runFile","readFile","defaultWriteback","stdout","write","runString","writeback","lmn","recast","isLineBreakAndZeroOrMoreSpaces","isLineBreakWithText","parseAttributes","attrs","sorted","attr","parseNodes","nodes","group1","group2","tagName","default","domString","mode","hToIJK","parsedFragment","parse5","parseFragment","parsedNodes","hToIJK_helper","arrayExpression","input","clean","z","class","onclick","changeMode","tabindex","placeholder","window"],"mappings":"A0FAA,ADAA,AnDAA,AjBAA,IAAA,GoEAA,EpEAA,MoEAA,GpEEA,CqEFA,ApDAA,KmDAA,CpEEA,CqEFA,ApDAA,CmDCA,MCCA,ApDAA,AjBAA,CoEDA,GAAA,EpECA,CqEAA,ApDAA,QoDAA,ApDAA,AjBAA,MoEDA,GCCA,ADAA,AnDAA,AjBAA,EqEAA,ApDAA,CjBCA,EqEAA,ApDAA,EoDAA,ApDAA,EjBAA,KqEAA,ApDAA,EoDCA,ApDAA,EoDAA,ApDAA,CmDFA,EAAA,MACA,ApEAA,CqECA,ApDAA,CjBDA,KAAA,CqECA,ApDAA,OoDAA,ApDAA,EoDAA,ApDAA,EmDDA,EAAA,MACA,CCCA,ApDAA,aoDCA,ApDAA,KmDFA,CCEA,ApDAA,CmDFA,CCGA,ApDAA,YoDAA,ApDAA,EoDCA,ApDAA,UoDAA,ApDAA,EoDCA,ApDAA,coDAA,ApDAA,MoDMA,ApDAA,OoDAA,ApDAA,QoDAA,ApDAA,SoDAA,ApDAA,EoDAA,ApDAA,GoDCA,ApDAA,EoDAA,ApDAA,OoDAA,ApDAA,EoDCA,ApDAA,IoDAA,ApDAA,EoDAA,ApDAA,aoDCA,ApDAA,EoDAA,ApDAA,UoDAA,ApDAA,EoDAA,ApDAA,UoDCA,ApDAA,EoDAA,ApDAA,UoDAA,ApDAA,IoDAA,ApDAA,EoDCA,ApDAA,EoDAA,ApDAA,UoDAA,ApDAA,YoDAA,ApDAA;AtCiXC,aArYM,SAASA,EAAEC,EAAMC,GAKfC,IAJHC,IAAAA,KACAC,KACAF,EAASG,UAAUH,OAEhBA,KAAW,GAAGC,EAAKG,KAAKD,UAAUH,IAElCC,KAAAA,EAAKD,QAAQ,CACdK,IAAAA,EAAOJ,EAAKK,MACZD,GAAAA,GAAQA,EAAKC,IACVN,IAAAA,EAASK,EAAKL,OAAQA,KACpBI,EAAAA,KAAKC,EAAKL,SAEA,MAARK,IAAyB,IAATA,IAA0B,IAATA,GACjCD,EAAAA,KAAKC,GAIX,MAAgB,mBAATP,EACVA,EAAKC,MAAkBG,IAEXJ,SAAAA,EACEC,WAAAA,MACFG,SAAAA,EACLH,IAAAA,GAAcA,EAAWQ,KAI/B,SAASC,EAAIC,EAAOC,EAASC,EAAMC,GACpCC,IAIAC,EAJA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ACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACD,IAAA,IACG,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACE,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACE,QAAA,IACH,KAAA,IACD,IAAA,IACE,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACJ,GAAA,IACA,GAAA,IACA,GAAA,IACK,QAAA,IACL,GAAA,IACC,IAAA,IACE,MAAA,IACF,IAAA,IACI,QAAA,IACJ,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACE,QAAA,IACH,KAAA,IACD,IAAA,IACE,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACJ,GAAA,IACA,GAAA,IACA,GAAA,IACK,QAAA,IACL,GAAA,IACC,IAAA,IACG,OAAA,IACD,MAAA,IACF,IAAA,IACI,QAAA,IACJ,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACG,SAAA,IACH,MAAA,IACF,IAAA,IACC,KAAA,IACA,KAAA,IACE,OAAA,IACF,KAAA,IACD,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACD,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACE,QAAA,IACH,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,I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ACA,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACD,KAAA,IACA,KAAA,IACC,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACD,IAAA,IACG,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACD,IAAA,IACG,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACE,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACE,QAAA,IACH,KAAA,IACD,IAAA,IACE,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACJ,GAAA,IACA,GAAA,IACA,GAAA,IACK,QAAA,IACL,GAAA,IACC,IAAA,IACE,MAAA,IACF,IAAA,IACI,QAAA,IACJ,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACE,QAAA,IACH,KAAA,IACD,IAAA,IACE,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACJ,GAAA,IACA,GAAA,IACA,GAAA,IACK,QAAA,IACL,GAAA,IACC,IAAA,IACG,OAAA,IACD,MAAA,IACF,IAAA,IACI,QAAA,IACJ,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACG,SAAA,IACH,MAAA,IACF,IAAA,IACC,KAAA,IACA,KAAA,IACE,OAAA,IACF,KAAA,IACD,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACD,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACE,QAAA,IACH,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACD,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACE,OAAA,IACF,KAAA,IACC,MAAA,IACA,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACH,GAAA,IACE,KAAA,IACD,IAAA,IACE,MAAA,IACC,OAAA,IACD,MAAA,IACD,KAAA,IACC,MAAA,IACF,IAAA,IACA,IAAA,IACD,GAAA,IACC,IAAA,IACA,IAAA,IACE,IAAA,IACC,OAAA,IACH,IAAA,IACC,KAAA,IACC,MAAA,IACH,GAAA,IACG,MAAA,IACH,GAAA,IACA,GAAA,IACC,IAAA,IACA,IAAA,IACC,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACC,OAAA,IACF,KAAA,IACA,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACA,KAAA,IACD,IAAA,IACG,OAAA,IACD,MAAA,IACC,OAAA,IACD,MAAA,KA46BHtH,EAAAA,QAAU,8BAEVqG,EAAAA,SA5LCA,SAAStB,EAAMsK,GAChBsC,IAAAA,EAEApL,EAEOrD,EAAAA,OACS,iBAAT6B,GAAuBA,aAAgB7B,SACvCyO,EAAAA,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AA,IACA,IAAA,IACC,KAAA,IACD,IAAA,IACG,OAAA,IACF,KAAA,IACA,KAAA,IACC,MAAA,IACA,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACD,KAAA,IACA,KAAA,IACC,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACD,IAAA,IACG,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACD,IAAA,IACG,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACC,OAAA,IACF,KAAA,IACE,OAAA,IACA,OAAA,IACA,OAAA,IACA,OAAA,IACD,MAAA,IACD,KAAA,IACE,OAAA,IACD,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACE,QAAA,IACH,KAAA,IACD,IAAA,IACE,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACJ,GAAA,IACA,GAAA,IACA,GAAA,IACK,QAAA,IACL,GAAA,IACC,IAAA,IACE,MAAA,IACF,IAAA,IACI,QAAA,IACJ,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACA,MAAA,IACE,QAAA,IACH,KAAA,IACD,IAAA,IACE,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACJ,GAAA,IACA,GAAA,IACA,GAAA,IACK,QAAA,IACL,GAAA,IACC,IAAA,IACG,OAAA,IACD,MAAA,IACF,IAAA,IACI,QAAA,IACJ,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACG,SAAA,IACH,MAAA,IACF,IAAA,IACC,KAAA,IACA,KAAA,IACE,OAAA,IACF,KAAA,IACD,IAAA,IACA,IAAA,IACA,IAAA,IACE,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACF,KAAA,IACE,OAAA,IACA,OAAA,IACD,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACD,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACC,OAAA,IACF,KAAA,IACC,MAAA,IACE,QAAA,IACH,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACD,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACA,KAAA,IACE,OAAA,IACF,KAAA,IACC,MAAA,IACA,MAAA,IACA,MAAA,IACD,KAAA,IACC,MAAA,IACH,GAAA,IACE,KAAA,IACD,IAAA,IACE,MAAA,IACC,OAAA,IACD,MAAA,IACD,KAAA,IACC,MAAA,IACF,IAAA,IACA,IAAA,IACD,GAAA,IACC,IAAA,IACA,IAAA,IACA,IAAA,IACG,OAAA,IACH,IAAA,IACC,KAAA,IACC,MAAA,IACH,GAAA,IACG,MAAA,IACH,GAAA,IACA,GAAA,IACC,IAAA,IACA,IAAA,IACC,KAAA,IACA,KAAA,IACA,KAAA,IACC,MAAA,IACC,OAAA,IACF,KAAA,IACA,KAAA,IACC,MAAA,IACA,MAAA,IACC,OAAA,IACA,OAAA,IACH,IAAA,IACG,OAAA,IACD,MAAA,IACC,OAAA,IACD,MAAA,IACD,KAAA,IACA,KAAA,MAML,SAAS/D,EAAQC,EAASgsD,GAE/B,aACOvqB,OAAAA,eAAezhC,EAA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","file":"main.97b8d2f3.map","sourceRoot":"../webapp","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        var style = value == null || value[i] == null ? \"\" : value[i]\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style)\n        } else {\n          element[name][i] = style\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (name in element && name !== \"list\" && !isSvg) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        XHTMLEntities,\n        ClassPropertyType,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9,\n        Template: 10,\n        JSXIdentifier: 11,\n        JSXText: 12\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.JSXIdentifier] = 'JSXIdentifier';\n    TokenName[Token.JSXText] = 'JSXText';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n    TokenName[Token.Template] = 'Template';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AnyTypeAnnotation: 'AnyTypeAnnotation',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrayTypeAnnotation: 'ArrayTypeAnnotation',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AssignmentExpression: 'AssignmentExpression',\n        BinaryExpression: 'BinaryExpression',\n        BlockStatement: 'BlockStatement',\n        BooleanTypeAnnotation: 'BooleanTypeAnnotation',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ClassImplements: 'ClassImplements',\n        ClassProperty: 'ClassProperty',\n        ComprehensionBlock: 'ComprehensionBlock',\n        ComprehensionExpression: 'ComprehensionExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DeclareClass: 'DeclareClass',\n        DeclareFunction: 'DeclareFunction',\n        DeclareModule: 'DeclareModule',\n        DeclareVariable: 'DeclareVariable',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportDeclaration: 'ExportDeclaration',\n        ExportBatchSpecifier: 'ExportBatchSpecifier',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        ForStatement: 'ForStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        FunctionTypeAnnotation: 'FunctionTypeAnnotation',\n        FunctionTypeParam: 'FunctionTypeParam',\n        GenericTypeAnnotation: 'GenericTypeAnnotation',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        InterfaceDeclaration: 'InterfaceDeclaration',\n        InterfaceExtends: 'InterfaceExtends',\n        IntersectionTypeAnnotation: 'IntersectionTypeAnnotation',\n        LabeledStatement: 'LabeledStatement',\n        Literal: 'Literal',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        NewExpression: 'NewExpression',\n        NullableTypeAnnotation: 'NullableTypeAnnotation',\n        NumberTypeAnnotation: 'NumberTypeAnnotation',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        ObjectTypeAnnotation: 'ObjectTypeAnnotation',\n        ObjectTypeCallProperty: 'ObjectTypeCallProperty',\n        ObjectTypeIndexer: 'ObjectTypeIndexer',\n        ObjectTypeProperty: 'ObjectTypeProperty',\n        Program: 'Program',\n        Property: 'Property',\n        QualifiedTypeIdentifier: 'QualifiedTypeIdentifier',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        SpreadProperty: 'SpreadProperty',\n        StringLiteralTypeAnnotation: 'StringLiteralTypeAnnotation',\n        StringTypeAnnotation: 'StringTypeAnnotation',\n        SwitchCase: 'SwitchCase',\n        SwitchStatement: 'SwitchStatement',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TupleTypeAnnotation: 'TupleTypeAnnotation',\n        TryStatement: 'TryStatement',\n        TypeAlias: 'TypeAlias',\n        TypeAnnotation: 'TypeAnnotation',\n        TypeCastExpression: 'TypeCastExpression',\n        TypeofTypeAnnotation: 'TypeofTypeAnnotation',\n        TypeParameterDeclaration: 'TypeParameterDeclaration',\n        TypeParameterInstantiation: 'TypeParameterInstantiation',\n        UnaryExpression: 'UnaryExpression',\n        UnionTypeAnnotation: 'UnionTypeAnnotation',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        VoidTypeAnnotation: 'VoidTypeAnnotation',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        JSXIdentifier: 'JSXIdentifier',\n        JSXNamespacedName: 'JSXNamespacedName',\n        JSXMemberExpression: 'JSXMemberExpression',\n        JSXEmptyExpression: 'JSXEmptyExpression',\n        JSXExpressionContainer: 'JSXExpressionContainer',\n        JSXElement: 'JSXElement',\n        JSXClosingElement: 'JSXClosingElement',\n        JSXOpeningElement: 'JSXOpeningElement',\n        JSXAttribute: 'JSXAttribute',\n        JSXSpreadAttribute: 'JSXSpreadAttribute',\n        JSXText: 'JSXText',\n        YieldExpression: 'YieldExpression',\n        AwaitExpression: 'AwaitExpression'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    ClassPropertyType = {\n        'static': 'static',\n        prototype: 'prototype'\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken: 'Unexpected token %0',\n        UnexpectedNumber: 'Unexpected number',\n        UnexpectedString: 'Unexpected string',\n        UnexpectedIdentifier: 'Unexpected identifier',\n        UnexpectedReserved: 'Unexpected reserved word',\n        UnexpectedTemplate: 'Unexpected quasi %0',\n        UnexpectedEOS: 'Unexpected end of input',\n        NewlineAfterThrow: 'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp: 'Invalid regular expression: missing /',\n        InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n        InvalidLHSInFormalsList: 'Invalid left-hand side in formals list',\n        InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally: 'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalDuplicateClassProperty: 'Illegal duplicate property in class definition',\n        IllegalClassConstructorProperty: 'Illegal constructor property in class definition',\n        IllegalReturn: 'Illegal return statement',\n        IllegalSpread: 'Illegal spread element',\n        StrictModeWith: 'Strict mode code may not include a with statement',\n        StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n        StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        ParameterAfterRestParameter: 'Rest parameter must be final parameter of an argument list',\n        DefaultRestParameter: 'Rest parameter can not have a default value',\n        ElementAfterSpreadElement: 'Spread must be the final element of an element list',\n        PropertyAfterSpreadProperty: 'A rest property must be the final property of an object literal',\n        ObjectPatternAsRestParameter: 'Invalid rest parameter',\n        ObjectPatternAsSpread: 'Invalid spread argument',\n        StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n        StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty: 'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty: 'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet: 'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord: 'Use of future reserved word in strict mode',\n        MissingFromClause: 'Missing from clause',\n        NoAsAfterImportNamespace: 'Missing as after import *',\n        InvalidModuleSpecifier: 'Invalid module specifier',\n        IllegalImportDeclaration: 'Illegal import declaration',\n        IllegalExportDeclaration: 'Illegal export declaration',\n        NoUninitializedConst: 'Const must be initialized',\n        ComprehensionRequiresBlock: 'Comprehension must have at least one block',\n        ComprehensionError: 'Comprehension Error',\n        EachNotAllowed: 'Each is not supported',\n        InvalidJSXAttributeValue: 'JSX value should be either an expression or a quoted JSX text',\n        ExpectedJSXClosingTag: 'Expected corresponding JSX closing tag for %0',\n        AdjacentJSXElements: 'Adjacent JSX elements must be wrapped in an enclosing tag',\n        ConfusedAboutFunctionType: 'Unexpected token =>. It looks like ' +\n            'you are trying to write a function type, but you ended up ' +\n            'writing a grouped type followed by an =>, which is a syntax ' +\n            'error. Remember, function type parameters are named so function ' +\n            'types look like (name1: type1, name2: type2) => returnType. You ' +\n            'probably wrote (type1) => returnType'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n        LeadingZeros: new RegExp('^0+(?!$)')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        /* istanbul ignore if */\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function StringMap() {\n        this.$data = {};\n    }\n\n    StringMap.prototype.get = function (key) {\n        key = '$' + key;\n        return this.$data[key];\n    };\n\n    StringMap.prototype.set = function (key, value) {\n        key = '$' + key;\n        this.$data[key] = value;\n        return this;\n    };\n\n    StringMap.prototype.has = function (key) {\n        key = '$' + key;\n        return Object.prototype.hasOwnProperty.call(this.$data, key);\n    };\n\n    StringMap.prototype.delete = function (key) {\n        key = '$' + key;\n        return delete this.$data[key];\n    };\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 32) ||  // space\n            (ch === 9) ||      // tab\n            (ch === 0xB) ||\n            (ch === 0xC) ||\n            (ch === 0xA0) ||\n            (ch >= 0x1680 && '\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\uFEFF'.indexOf(String.fromCharCode(ch)) > 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 10) || (ch === 13) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch >= 48 && ch <= 57) ||         // 0..9\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' is only treated as a keyword in strict mode.\n        // 'let' is for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function addComment(type, value, start, end, loc) {\n        var comment;\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function skipSingleLineComment() {\n        var start, loc, ch, comment;\n\n        start = index - 2;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart - 2\n            }\n        };\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            ++index;\n            if (isLineTerminator(ch)) {\n                if (extra.comments) {\n                    comment = source.slice(start + 2, index - 1);\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    addComment('Line', comment, start, index - 1, loc);\n                }\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                return;\n            }\n        }\n\n        if (extra.comments) {\n            comment = source.slice(start + 2, index);\n            loc.end = {\n                line: lineNumber,\n                column: index - lineStart\n            };\n            addComment('Line', comment, start, index, loc);\n        }\n    }\n\n    function skipMultiLineComment() {\n        var start, loc, ch, comment;\n\n        if (extra.comments) {\n            start = index - 2;\n            loc = {\n                start: {\n                    line: lineNumber,\n                    column: index - lineStart - 2\n                }\n            };\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isLineTerminator(ch)) {\n                if (ch === 13 && source.charCodeAt(index + 1) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                ++index;\n                lineStart = index;\n                if (index >= length) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else if (ch === 42) {\n                // Block comment ends with '*/' (char #42, char #47).\n                if (source.charCodeAt(index + 1) === 47) {\n                    ++index;\n                    ++index;\n                    if (extra.comments) {\n                        comment = source.slice(start + 2, index - 2);\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        addComment('Block', comment, start, index, loc);\n                    }\n                    return;\n                }\n                ++index;\n            } else {\n                ++index;\n            }\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    function skipComment() {\n        var ch;\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n            } else if (ch === 47) { // 47 is '/'\n                ch = source.charCodeAt(index + 1);\n                if (ch === 47) {\n                    ++index;\n                    ++index;\n                    skipSingleLineComment();\n                } else if (ch === 42) {  // 42 is '*'\n                    ++index;\n                    ++index;\n                    skipMultiLineComment();\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function scanUnicodeCodePointEscape() {\n        var ch, code, cu1, cu2;\n\n        ch = source[index];\n        code = 0;\n\n        // At least, one hex digit is required.\n        if (ch === '}') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        while (index < length) {\n            ch = source[index++];\n            if (!isHexDigit(ch)) {\n                break;\n            }\n            code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n        }\n\n        if (code > 0x10FFFF || ch !== '}') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        // UTF-16 Encoding\n        if (code <= 0xFFFF) {\n            return String.fromCharCode(code);\n        }\n        cu1 = ((code - 0x10000) >> 10) + 0xD800;\n        cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n        return String.fromCharCode(cu1, cu2);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (char #92, char #117) denotes an escaped character.\n        if (ch === 92) {\n            if (source.charCodeAt(index) !== 117) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (char #92, char #117) denotes an escaped character.\n            if (ch === 92) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 117) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 92) {\n                // Blackslash (char #92) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (char #92) starts an escaped character.\n        id = (source.charCodeAt(index) === 92) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        if (state.inJSXTag || state.inJSXChild) {\n            // Don't need to check for '{' and '}' as it's already handled\n            // correctly by default.\n            switch (code) {\n            case 60:  // <\n            case 62:  // >\n                ++index;\n                return {\n                    type: Token.Punctuator,\n                    value: String.fromCharCode(code),\n                    lineNumber: lineNumber,\n                    lineStart: lineStart,\n                    range: [start, index]\n                };\n            }\n        }\n\n        switch (code) {\n        // Check for most common single-character punctuators.\n        case 40:   // ( open bracket\n        case 41:   // ) close bracket\n        case 59:   // ; semicolon\n        case 44:   // , comma\n        case 91:   // [\n        case 93:   // ]\n        case 58:   // :\n        case 63:   // ?\n        case 126:  // ~\n            ++index;\n            if (extra.tokenize && code === 40) {\n                extra.openParenToken = extra.tokens.length;\n            }\n\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n\n        case 123:  // { open curly brace\n        case 125:  // } close curly brace\n            ++index;\n            if (extra.tokenize && code === 123) {\n                extra.openCurlyToken = extra.tokens.length;\n            }\n\n            // lookahead2 function can cause tokens to be scanned twice and in doing so\n            // would wreck the curly stack by pushing the same token onto the stack twice.\n            // curlyLastIndex ensures each token is pushed or popped exactly once\n            if (index > state.curlyLastIndex) {\n                state.curlyLastIndex = index;\n                if (code === 123) {\n                    state.curlyStack.push('{');\n                } else {\n                    state.curlyStack.pop();\n                }\n            }\n\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (char #61) marks an assignment or comparison operator.\n            if (code2 === 61) {\n                switch (code) {\n                case 37:  // %\n                case 38:  // &\n                case 42:  // *:\n                case 43:  // +\n                case 45:  // -\n                case 47:  // /\n                case 60:  // <\n                case 62:  // >\n                case 94:  // ^\n                case 124: // |\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n\n                case 33: // !\n                case 61: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 61) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n                default:\n                    break;\n                }\n            }\n            break;\n        }\n\n        // Peek more characters.\n\n        ch2 = source[index + 1];\n        ch3 = source[index + 2];\n        ch4 = source[index + 3];\n\n        // 4-character punctuator: >>>=\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '>') {\n            if (ch4 === '=') {\n                index += 4;\n                return {\n                    type: Token.Punctuator,\n                    value: '>>>=',\n                    lineNumber: lineNumber,\n                    lineStart: lineStart,\n                    range: [start, index]\n                };\n            }\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '>' && !state.inType) {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '>>>',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '<' && ch2 === '<' && ch3 === '=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '<<=',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '>>=',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '.' && ch2 === '.' && ch3 === '.') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '...',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n\n        // Don't match these tokens if we're in a type, since they never can\n        // occur and can mess up types like Map<string, Array<string>>\n        if (ch1 === ch2 && ('+-<>&|'.indexOf(ch1) >= 0) && !state.inType) {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch1 + ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '=' && ch2 === '>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: '=>',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '.') {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanBinaryLiteral(start) {\n        var ch, number;\n\n        number = '';\n\n        while (index < length) {\n            ch = source[index];\n            if (ch !== '0' && ch !== '1') {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            // only 0b or 0B\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (index < length) {\n            ch = source.charCodeAt(index);\n            /* istanbul ignore else */\n            if (isIdentifierStart(ch) || isDecimalDigit(ch)) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 2),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanOctalLiteral(prefix, start) {\n        var number, octal;\n\n        if (isOctalDigit(prefix)) {\n            octal = true;\n            number = '0' + source[index++];\n        } else {\n            octal = false;\n            ++index;\n            number = '';\n        }\n\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (!octal && number.length === 0) {\n            // only 0o or 0O\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            // Octal number in ES6 starts with '0o'.\n            // Binary number in ES6 starts with '0b'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (ch === 'b' || ch === 'B') {\n                    ++index;\n                    return scanBinaryLiteral(start);\n                }\n                if (ch === 'o' || ch === 'O' || isOctalDigit(ch)) {\n                    return scanOctalLiteral(ch, start);\n                }\n                // decimal number starts with '0' such as '09' is illegal.\n                if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        if (source[index] === '{') {\n                            ++index;\n                            str += scanUnicodeCodePointEscape();\n                        } else {\n                            restore = index;\n                            unescaped = scanHexEscape(ch);\n                            if (unescaped) {\n                                str += unescaped;\n                            } else {\n                                index = restore;\n                                str += ch;\n                            }\n                        }\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            /* istanbul ignore else */\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch === '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanTemplate() {\n        var cooked = '', ch, start, terminated, head, tail, restore, unescaped, code, octal;\n\n        terminated = false;\n        tail = false;\n        start = index;\n        head = (source[index] === '`');\n\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n            if (ch === '`') {\n                tail = true;\n                terminated = true;\n                break;\n            } else if (ch === '$') {\n                if (source[index] === '{') {\n                    ++index;\n                    terminated = true;\n                    break;\n                }\n                cooked += ch;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        cooked += '\\n';\n                        break;\n                    case 'r':\n                        cooked += '\\r';\n                        break;\n                    case 't':\n                        cooked += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        if (source[index] === '{') {\n                            ++index;\n                            cooked += scanUnicodeCodePointEscape();\n                        } else {\n                            restore = index;\n                            unescaped = scanHexEscape(ch);\n                            if (unescaped) {\n                                cooked += unescaped;\n                            } else {\n                                index = restore;\n                                cooked += ch;\n                            }\n                        }\n                        break;\n                    case 'b':\n                        cooked += '\\b';\n                        break;\n                    case 'f':\n                        cooked += '\\f';\n                        break;\n                    case 'v':\n                        cooked += '\\v';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            /* istanbul ignore else */\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            cooked += String.fromCharCode(code);\n                        } else {\n                            cooked += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch === '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                ++lineNumber;\n                if (ch === '\\r' && source[index] === '\\n') {\n                    ++index;\n                }\n                lineStart = index;\n                cooked += '\\n';\n            } else {\n                cooked += ch;\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (index > state.curlyLastIndex) {\n            state.curlyLastIndex = index;\n            if (!tail) {\n                state.curlyStack.push('template');\n            }\n\n            if (!head) {\n                state.curlyStack.pop();\n            }\n        }\n\n        return {\n            type: Token.Template,\n            value: {\n                cooked: cooked,\n                raw: source.slice(start + 1, index - ((tail) ? 1 : 2))\n            },\n            head: head,\n            tail: tail,\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function testRegExp(pattern, flags) {\n        var tmp = pattern,\n            value;\n\n        if (flags.indexOf('u') >= 0) {\n            // Replace each astral symbol and every Unicode code point\n            // escape sequence with a single ASCII symbol to avoid throwing on\n            // regular expressions that are only valid in combination with the\n            // `/u` flag.\n            // Note: replacing with the ASCII symbol `x` might cause false\n            // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n            // perfectly valid pattern that is equivalent to `[a-b]`, but it\n            // would be replaced by `[x-b]` which throws an error.\n            tmp = tmp\n                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                    if (parseInt($1, 16) <= 0x10FFFF) {\n                        return 'x';\n                    }\n                    throwError({}, Messages.InvalidRegExp);\n                })\n                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n        }\n\n        // First, detect invalid regular expressions.\n        try {\n            value = new RegExp(tmp);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n\n        // Return a regular expression object for this pattern-flag pair, or\n        // `null` in case the current environment doesn't support the flags it\n        // uses.\n        try {\n            return new RegExp(pattern, flags);\n        } catch (exception) {\n            return null;\n        }\n    }\n\n    function scanRegExpBody() {\n        var ch, str, classMarker, terminated, body;\n\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        classMarker = false;\n        terminated = false;\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (ch === '\\\\') {\n                ch = source[index++];\n                // ECMA-262 7.8.5\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n                str += ch;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnterminatedRegExp);\n            } else if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        body = str.substr(1, str.length - 2);\n        return {\n            value: body,\n            literal: str\n        };\n    }\n\n    function scanRegExpFlags() {\n        var ch, str, flags, restore;\n\n        str = '';\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                } else {\n                    str += '\\\\';\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        return {\n            value: flags,\n            literal: str\n        };\n    }\n\n    function scanRegExp() {\n        var start, body, flags, value;\n\n        lookahead = null;\n        skipComment();\n        start = index;\n\n        body = scanRegExpBody();\n        flags = scanRegExpFlags();\n        value = testRegExp(body.value, flags.value);\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                regex: {\n                    pattern: body.value,\n                    flags: flags.value\n                },\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        return {\n            literal: body.literal + flags.literal,\n            value: value,\n            regex: {\n                pattern: body.value,\n                flags: flags.value\n            },\n            range: [start, index]\n        };\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return scanRegExp();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return scanRegExp();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return scanRegExp();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return scanRegExp();\n            }\n            return scanRegExp();\n        }\n        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n            return scanRegExp();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        if (!state.inJSXChild) {\n            skipComment();\n        }\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [index, index]\n            };\n        }\n\n        if (state.inJSXChild) {\n            return advanceJSXChild();\n        }\n\n        ch = source.charCodeAt(index);\n\n        // Very common: ( and ) and ;\n        if (ch === 40 || ch === 41 || ch === 58) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (#39) or double quote (#34).\n        if (ch === 39 || ch === 34) {\n            if (state.inJSXTag) {\n                return scanJSXStringLiteral();\n            }\n            return scanStringLiteral();\n        }\n\n        if (state.inJSXTag && isJSXIdentifierStart(ch)) {\n            return scanJSXIdentifier();\n        }\n\n        // Template literals start with backtick (#96) for template head\n        // or close curly (#125) for template middle or template tail.\n        if (ch === 96 || (ch === 125 && state.curlyStack[state.curlyStack.length - 1] === 'template')) {\n            return scanTemplate();\n        }\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Dot (.) char #46 can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 46) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) char #47 can also start a regex.\n        if (extra.tokenize && ch === 47) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.range[1];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = advance();\n\n        index = token.range[1];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function lookahead2() {\n        var adv, pos, line, start, result;\n\n        // If we are collecting the tokens, don't grab the next one yet.\n        /* istanbul ignore next */\n        adv = (typeof extra.advance === 'function') ? extra.advance : advance;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n\n        // Scan for the next immediate token.\n        /* istanbul ignore if */\n        if (lookahead === null) {\n            lookahead = adv();\n        }\n        index = lookahead.range[1];\n        lineNumber = lookahead.lineNumber;\n        lineStart = lookahead.lineStart;\n\n        // Grab the token right after.\n        result = adv();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return result;\n    }\n\n    function rewind(token) {\n        index = token.range[0];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n        lookahead = token;\n    }\n\n    function markerCreate() {\n        if (!extra.loc && !extra.range) {\n            return undefined;\n        }\n        skipComment();\n        return {offset: index, line: lineNumber, col: index - lineStart};\n    }\n\n    function markerCreatePreserveWhitespace() {\n        if (!extra.loc && !extra.range) {\n            return undefined;\n        }\n        return {offset: index, line: lineNumber, col: index - lineStart};\n    }\n\n    function processComment(node) {\n        var lastChild,\n            trailingComments,\n            bottomRight = extra.bottomRightStack,\n            last = bottomRight[bottomRight.length - 1];\n\n        if (node.type === Syntax.Program) {\n            /* istanbul ignore else */\n            if (node.body.length > 0) {\n                return;\n            }\n        }\n\n        if (extra.trailingComments.length > 0) {\n            if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                trailingComments = extra.trailingComments;\n                extra.trailingComments = [];\n            } else {\n                extra.trailingComments.length = 0;\n            }\n        } else {\n            if (last && last.trailingComments && last.trailingComments[0].range[0] >= node.range[1]) {\n                trailingComments = last.trailingComments;\n                delete last.trailingComments;\n            }\n        }\n\n        // Eating the stack.\n        if (last) {\n            while (last && last.range[0] >= node.range[0]) {\n                lastChild = last;\n                last = bottomRight.pop();\n            }\n        }\n\n        if (lastChild) {\n            if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = lastChild.leadingComments;\n                delete lastChild.leadingComments;\n            }\n        } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n            node.leadingComments = extra.leadingComments;\n            extra.leadingComments = [];\n        }\n\n        if (trailingComments) {\n            node.trailingComments = trailingComments;\n        }\n\n        bottomRight.push(node);\n    }\n\n    function markerApply(marker, node) {\n        if (extra.range) {\n            node.range = [marker.offset, index];\n        }\n        if (extra.loc) {\n            node.loc = {\n                start: {\n                    line: marker.line,\n                    column: marker.col\n                },\n                end: {\n                    line: lineNumber,\n                    column: index - lineStart\n                }\n            };\n            node = delegate.postProcess(node);\n        }\n        if (extra.attachComment) {\n            processComment(node);\n        }\n        return node;\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        postProcess: function (node) {\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createForOfStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForOfStatement,\n                left: left,\n                right: right,\n                body: body\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body, rest, generator, expression,\n                                             isAsync, returnType, typeParameters) {\n            var funDecl = {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: generator,\n                expression: expression,\n                returnType: returnType,\n                typeParameters: typeParameters\n            };\n\n            if (isAsync) {\n                funDecl.async = true;\n            }\n\n            return funDecl;\n        },\n\n        createFunctionExpression: function (id, params, defaults, body, rest, generator, expression,\n                                            isAsync, returnType, typeParameters) {\n            var funExpr = {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: generator,\n                expression: expression,\n                returnType: returnType,\n                typeParameters: typeParameters\n            };\n\n            if (isAsync) {\n                funExpr.async = true;\n            }\n\n            return funExpr;\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name,\n                // Only here to initialize the shape of the object to ensure\n                // that the 'typeAnnotation' key is ordered before others that\n                // are added later (like 'loc' and 'range'). This just helps\n                // keep the shape of Identifier nodes consistent with everything\n                // else.\n                typeAnnotation: undefined,\n                optional: undefined\n            };\n        },\n\n        createTypeAnnotation: function (typeAnnotation) {\n            return {\n                type: Syntax.TypeAnnotation,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createTypeCast: function (expression, typeAnnotation) {\n            return {\n                type: Syntax.TypeCastExpression,\n                expression: expression,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createFunctionTypeAnnotation: function (params, returnType, rest, typeParameters) {\n            return {\n                type: Syntax.FunctionTypeAnnotation,\n                params: params,\n                returnType: returnType,\n                rest: rest,\n                typeParameters: typeParameters\n            };\n        },\n\n        createFunctionTypeParam: function (name, typeAnnotation, optional) {\n            return {\n                type: Syntax.FunctionTypeParam,\n                name: name,\n                typeAnnotation: typeAnnotation,\n                optional: optional\n            };\n        },\n\n        createNullableTypeAnnotation: function (typeAnnotation) {\n            return {\n                type: Syntax.NullableTypeAnnotation,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createArrayTypeAnnotation: function (elementType) {\n            return {\n                type: Syntax.ArrayTypeAnnotation,\n                elementType: elementType\n            };\n        },\n\n        createGenericTypeAnnotation: function (id, typeParameters) {\n            return {\n                type: Syntax.GenericTypeAnnotation,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createQualifiedTypeIdentifier: function (qualification, id) {\n            return {\n                type: Syntax.QualifiedTypeIdentifier,\n                qualification: qualification,\n                id: id\n            };\n        },\n\n        createTypeParameterDeclaration: function (params) {\n            return {\n                type: Syntax.TypeParameterDeclaration,\n                params: params\n            };\n        },\n\n        createTypeParameterInstantiation: function (params) {\n            return {\n                type: Syntax.TypeParameterInstantiation,\n                params: params\n            };\n        },\n\n        createAnyTypeAnnotation: function () {\n            return {\n                type: Syntax.AnyTypeAnnotation\n            };\n        },\n\n        createBooleanTypeAnnotation: function () {\n            return {\n                type: Syntax.BooleanTypeAnnotation\n            };\n        },\n\n        createNumberTypeAnnotation: function () {\n            return {\n                type: Syntax.NumberTypeAnnotation\n            };\n        },\n\n        createStringTypeAnnotation: function () {\n            return {\n                type: Syntax.StringTypeAnnotation\n            };\n        },\n\n        createStringLiteralTypeAnnotation: function (token) {\n            return {\n                type: Syntax.StringLiteralTypeAnnotation,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n        },\n\n        createVoidTypeAnnotation: function () {\n            return {\n                type: Syntax.VoidTypeAnnotation\n            };\n        },\n\n        createTypeofTypeAnnotation: function (argument) {\n            return {\n                type: Syntax.TypeofTypeAnnotation,\n                argument: argument\n            };\n        },\n\n        createTupleTypeAnnotation: function (types) {\n            return {\n                type: Syntax.TupleTypeAnnotation,\n                types: types\n            };\n        },\n\n        createObjectTypeAnnotation: function (properties, indexers, callProperties) {\n            return {\n                type: Syntax.ObjectTypeAnnotation,\n                properties: properties,\n                indexers: indexers,\n                callProperties: callProperties\n            };\n        },\n\n        createObjectTypeIndexer: function (id, key, value, isStatic) {\n            return {\n                type: Syntax.ObjectTypeIndexer,\n                id: id,\n                key: key,\n                value: value,\n                static: isStatic\n            };\n        },\n\n        createObjectTypeCallProperty: function (value, isStatic) {\n            return {\n                type: Syntax.ObjectTypeCallProperty,\n                value: value,\n                static: isStatic\n            };\n        },\n\n        createObjectTypeProperty: function (key, value, optional, isStatic) {\n            return {\n                type: Syntax.ObjectTypeProperty,\n                key: key,\n                value: value,\n                optional: optional,\n                static: isStatic\n            };\n        },\n\n        createUnionTypeAnnotation: function (types) {\n            return {\n                type: Syntax.UnionTypeAnnotation,\n                types: types\n            };\n        },\n\n        createIntersectionTypeAnnotation: function (types) {\n            return {\n                type: Syntax.IntersectionTypeAnnotation,\n                types: types\n            };\n        },\n\n        createTypeAlias: function (id, typeParameters, right) {\n            return {\n                type: Syntax.TypeAlias,\n                id: id,\n                typeParameters: typeParameters,\n                right: right\n            };\n        },\n\n        createInterface: function (id, typeParameters, body, extended) {\n            return {\n                type: Syntax.InterfaceDeclaration,\n                id: id,\n                typeParameters: typeParameters,\n                body: body,\n                extends: extended\n            };\n        },\n\n        createInterfaceExtends: function (id, typeParameters) {\n            return {\n                type: Syntax.InterfaceExtends,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createDeclareFunction: function (id) {\n            return {\n                type: Syntax.DeclareFunction,\n                id: id\n            };\n        },\n\n        createDeclareVariable: function (id) {\n            return {\n                type: Syntax.DeclareVariable,\n                id: id\n            };\n        },\n\n        createDeclareModule: function (id, body) {\n            return {\n                type: Syntax.DeclareModule,\n                id: id,\n                body: body\n            };\n        },\n\n        createJSXAttribute: function (name, value) {\n            return {\n                type: Syntax.JSXAttribute,\n                name: name,\n                value: value || null\n            };\n        },\n\n        createJSXSpreadAttribute: function (argument) {\n            return {\n                type: Syntax.JSXSpreadAttribute,\n                argument: argument\n            };\n        },\n\n        createJSXIdentifier: function (name) {\n            return {\n                type: Syntax.JSXIdentifier,\n                name: name\n            };\n        },\n\n        createJSXNamespacedName: function (namespace, name) {\n            return {\n                type: Syntax.JSXNamespacedName,\n                namespace: namespace,\n                name: name\n            };\n        },\n\n        createJSXMemberExpression: function (object, property) {\n            return {\n                type: Syntax.JSXMemberExpression,\n                object: object,\n                property: property\n            };\n        },\n\n        createJSXElement: function (openingElement, closingElement, children) {\n            return {\n                type: Syntax.JSXElement,\n                openingElement: openingElement,\n                closingElement: closingElement,\n                children: children\n            };\n        },\n\n        createJSXEmptyExpression: function () {\n            return {\n                type: Syntax.JSXEmptyExpression\n            };\n        },\n\n        createJSXExpressionContainer: function (expression) {\n            return {\n                type: Syntax.JSXExpressionContainer,\n                expression: expression\n            };\n        },\n\n        createJSXOpeningElement: function (name, attributes, selfClosing) {\n            return {\n                type: Syntax.JSXOpeningElement,\n                name: name,\n                selfClosing: selfClosing,\n                attributes: attributes\n            };\n        },\n\n        createJSXClosingElement: function (name) {\n            return {\n                type: Syntax.JSXClosingElement,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            var object = {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n            if (token.regex) {\n                object.regex = token.regex;\n            }\n            return object;\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value, method, shorthand, computed) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind,\n                method: method,\n                shorthand: shorthand,\n                computed: computed\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        },\n\n        createTemplateElement: function (value, tail) {\n            return {\n                type: Syntax.TemplateElement,\n                value: value,\n                tail: tail\n            };\n        },\n\n        createTemplateLiteral: function (quasis, expressions) {\n            return {\n                type: Syntax.TemplateLiteral,\n                quasis: quasis,\n                expressions: expressions\n            };\n        },\n\n        createSpreadElement: function (argument) {\n            return {\n                type: Syntax.SpreadElement,\n                argument: argument\n            };\n        },\n\n        createSpreadProperty: function (argument) {\n            return {\n                type: Syntax.SpreadProperty,\n                argument: argument\n            };\n        },\n\n        createTaggedTemplateExpression: function (tag, quasi) {\n            return {\n                type: Syntax.TaggedTemplateExpression,\n                tag: tag,\n                quasi: quasi\n            };\n        },\n\n        createArrowFunctionExpression: function (params, defaults, body, rest, expression, isAsync) {\n            var arrowExpr = {\n                type: Syntax.ArrowFunctionExpression,\n                id: null,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: false,\n                expression: expression\n            };\n\n            if (isAsync) {\n                arrowExpr.async = true;\n            }\n\n            return arrowExpr;\n        },\n\n        createMethodDefinition: function (propertyType, kind, key, value, computed) {\n            return {\n                type: Syntax.MethodDefinition,\n                key: key,\n                value: value,\n                kind: kind,\n                'static': propertyType === ClassPropertyType.static,\n                computed: computed\n            };\n        },\n\n        createClassProperty: function (key, typeAnnotation, computed, isStatic) {\n            return {\n                type: Syntax.ClassProperty,\n                key: key,\n                typeAnnotation: typeAnnotation,\n                computed: computed,\n                static: isStatic\n            };\n        },\n\n        createClassBody: function (body) {\n            return {\n                type: Syntax.ClassBody,\n                body: body\n            };\n        },\n\n        createClassImplements: function (id, typeParameters) {\n            return {\n                type: Syntax.ClassImplements,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createClassExpression: function (id, superClass, body, typeParameters, superTypeParameters, implemented) {\n            return {\n                type: Syntax.ClassExpression,\n                id: id,\n                superClass: superClass,\n                body: body,\n                typeParameters: typeParameters,\n                superTypeParameters: superTypeParameters,\n                implements: implemented\n            };\n        },\n\n        createClassDeclaration: function (id, superClass, body, typeParameters, superTypeParameters, implemented) {\n            return {\n                type: Syntax.ClassDeclaration,\n                id: id,\n                superClass: superClass,\n                body: body,\n                typeParameters: typeParameters,\n                superTypeParameters: superTypeParameters,\n                implements: implemented\n            };\n        },\n\n        createExportSpecifier: function (id, name) {\n            return {\n                type: Syntax.ExportSpecifier,\n                id: id,\n                name: name\n            };\n        },\n\n        createExportBatchSpecifier: function () {\n            return {\n                type: Syntax.ExportBatchSpecifier\n            };\n        },\n\n        createImportDefaultSpecifier: function (id) {\n            return {\n                type: Syntax.ImportDefaultSpecifier,\n                id: id\n            };\n        },\n\n        createImportNamespaceSpecifier: function (id) {\n            return {\n                type: Syntax.ImportNamespaceSpecifier,\n                id: id\n            };\n        },\n\n        createExportDeclaration: function (isDefault, declaration, specifiers, src) {\n            return {\n                type: Syntax.ExportDeclaration,\n                'default': !!isDefault,\n                declaration: declaration,\n                specifiers: specifiers,\n                source: src\n            };\n        },\n\n        createImportSpecifier: function (id, name) {\n            return {\n                type: Syntax.ImportSpecifier,\n                id: id,\n                name: name\n            };\n        },\n\n        createImportDeclaration: function (specifiers, src, importKind) {\n            return {\n                type: Syntax.ImportDeclaration,\n                specifiers: specifiers,\n                source: src,\n                importKind: importKind\n            };\n        },\n\n        createYieldExpression: function (argument, dlg) {\n            return {\n                type: Syntax.YieldExpression,\n                argument: argument,\n                delegate: dlg\n            };\n        },\n\n        createAwaitExpression: function (argument) {\n            return {\n                type: Syntax.AwaitExpression,\n                argument: argument\n            };\n        },\n\n        createComprehensionExpression: function (filter, blocks, body) {\n            return {\n                type: Syntax.ComprehensionExpression,\n                filter: filter,\n                blocks: blocks,\n                body: body\n            };\n        }\n\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, idx) {\n                    assert(idx < args.length, 'Message reference must be in range');\n                    return args[idx];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.range[0];\n            error.lineNumber = token.lineNumber;\n            error.column = token.range[0] - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral || token.type === Token.JSXText) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        if (token.type === Token.Template) {\n            throwError(token, Messages.UnexpectedTemplate, token.value.raw);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword, contextual) {\n        var token = lex();\n        if (token.type !== (contextual ? Token.Identifier : Token.Keyword) ||\n                token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified contextual keyword.\n    // If not, an exception will be thrown.\n\n    function expectContextualKeyword(keyword) {\n        return expectKeyword(keyword, true);\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword, contextual) {\n        var expectedType = contextual ? Token.Identifier : Token.Keyword;\n        return lookahead.type === expectedType && lookahead.value === keyword;\n    }\n\n    // Return true if the next token matches the specified contextual keyword\n\n    function matchContextualKeyword(keyword) {\n        return matchKeyword(keyword, true);\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    // Note that 'yield' is treated as a keyword in strict mode, but a\n    // contextual keyword (identifier) in non-strict mode, so we need to\n    // use matchKeyword('yield', false) and matchKeyword('yield', true)\n    // (i.e. matchContextualKeyword) appropriately.\n    function matchYield() {\n        return state.yieldAllowed && matchKeyword('yield', !strict);\n    }\n\n    function matchAsync() {\n        var backtrackToken = lookahead, matches = false;\n\n        if (matchContextualKeyword('async')) {\n            lex(); // Make sure peekLineTerminator() starts after 'async'.\n            matches = !peekLineTerminator();\n            rewind(backtrackToken); // Revert the lex().\n        }\n\n        return matches;\n    }\n\n    function matchAwait() {\n        return state.awaitAllowed && matchContextualKeyword('await');\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (match(';')) {\n            lex();\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    function isAssignableLeftHandSide(expr) {\n        return isLeftHandSide(expr) || expr.type === Syntax.ObjectPattern || expr.type === Syntax.ArrayPattern;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], blocks = [], filter = null, tmp, possiblecomprehension = true,\n            marker = markerCreate();\n\n        expect('[');\n        while (!match(']')) {\n            if (lookahead.value === 'for' &&\n                    lookahead.type === Token.Keyword) {\n                if (!possiblecomprehension) {\n                    throwError({}, Messages.ComprehensionError);\n                }\n                matchKeyword('for');\n                tmp = parseForStatement({ignoreBody: true});\n                tmp.of = tmp.type === Syntax.ForOfStatement;\n                tmp.type = Syntax.ComprehensionBlock;\n                if (tmp.left.kind) { // can't be let or const\n                    throwError({}, Messages.ComprehensionError);\n                }\n                blocks.push(tmp);\n            } else if (lookahead.value === 'if' &&\n                           lookahead.type === Token.Keyword) {\n                if (!possiblecomprehension) {\n                    throwError({}, Messages.ComprehensionError);\n                }\n                expectKeyword('if');\n                expect('(');\n                filter = parseExpression();\n                expect(')');\n            } else if (lookahead.value === ',' &&\n                           lookahead.type === Token.Punctuator) {\n                possiblecomprehension = false; // no longer allowed.\n                lex();\n                elements.push(null);\n            } else {\n                tmp = parseSpreadOrAssignmentExpression();\n                elements.push(tmp);\n                if (tmp && tmp.type === Syntax.SpreadElement) {\n                    if (!match(']')) {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                } else if (!(match(']') || matchKeyword('for') || matchKeyword('if'))) {\n                    expect(','); // this lexes.\n                    possiblecomprehension = false;\n                }\n            }\n        }\n\n        expect(']');\n\n        if (filter && !blocks.length) {\n            throwError({}, Messages.ComprehensionRequiresBlock);\n        }\n\n        if (blocks.length) {\n            if (elements.length !== 1) {\n                throwError({}, Messages.ComprehensionError);\n            }\n            return markerApply(marker, delegate.createComprehensionExpression(filter, blocks, elements[0]));\n        }\n        return markerApply(marker, delegate.createArrayExpression(elements));\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(options) {\n        var previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            params, defaults, body, marker = markerCreate();\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = options.generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = options.async;\n        params = options.params || [];\n        defaults = options.defaults || [];\n\n        body = parseConciseBody();\n        if (options.name && strict && isRestrictedWord(params[0].name)) {\n            throwErrorTolerant(options.name, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(marker, delegate.createFunctionExpression(\n            null,\n            params,\n            defaults,\n            body,\n            options.rest || null,\n            options.generator,\n            body.type !== Syntax.BlockStatement,\n            options.async,\n            options.returnType,\n            options.typeParameters\n        ));\n    }\n\n\n    function parsePropertyMethodFunction(options) {\n        var previousStrict, tmp, method;\n\n        previousStrict = strict;\n        strict = true;\n\n        tmp = parseParams();\n\n        if (tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, tmp.message);\n        }\n\n        method = parsePropertyFunction({\n            params: tmp.params,\n            defaults: tmp.defaults,\n            rest: tmp.rest,\n            generator: options.generator,\n            async: options.async,\n            returnType: tmp.returnType,\n            typeParameters: options.typeParameters\n        });\n\n        strict = previousStrict;\n\n        return method;\n    }\n\n\n    function parseObjectPropertyKey() {\n        var marker = markerCreate(),\n            token = lex(),\n            propertyKey,\n            result;\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (token.type === Token.Punctuator && token.value === '[') {\n            // For computed properties we should skip the [ and ], and\n            // capture in marker only the assignment expression itself.\n            marker = markerCreate();\n            propertyKey = parseAssignmentExpression();\n            result = markerApply(marker, propertyKey);\n            expect(']');\n            return result;\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, param, computed,\n            marker = markerCreate(), returnType, typeParameters;\n\n        token = lookahead;\n        computed = (token.value === '[' && token.type === Token.Punctuator);\n\n        if (token.type === Token.Identifier || computed || matchAsync()) {\n            id = parseObjectPropertyKey();\n\n            if (match(':')) {\n                lex();\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        id,\n                        parseAssignmentExpression(),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (match('(') || match('<')) {\n                if (match('<')) {\n                    typeParameters = parseTypeParameterDeclaration();\n                }\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        id,\n                        parsePropertyMethodFunction({\n                            generator: false,\n                            async: false,\n                            typeParameters: typeParameters\n                        }),\n                        true,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                expect('(');\n                expect(')');\n                if (match(':')) {\n                    returnType = parseTypeAnnotation();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'get',\n                        key,\n                        parsePropertyFunction({\n                            generator: false,\n                            async: false,\n                            returnType: returnType\n                        }),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (token.value === 'set') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                expect('(');\n                token = lookahead;\n                param = [ parseTypeAnnotatableIdentifier() ];\n                expect(')');\n                if (match(':')) {\n                    returnType = parseTypeAnnotation();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'set',\n                        key,\n                        parsePropertyFunction({\n                            params: param,\n                            generator: false,\n                            async: false,\n                            name: token,\n                            returnType: returnType\n                        }),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (token.value === 'async') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                if (match('<')) {\n                    typeParameters = parseTypeParameterDeclaration();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        key,\n                        parsePropertyMethodFunction({\n                            generator: false,\n                            async: true,\n                            typeParameters: typeParameters\n                        }),\n                        true,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (computed) {\n                // Computed properties can only be used with full notation.\n                throwUnexpected(lookahead);\n            }\n\n            return markerApply(\n                marker,\n                delegate.createProperty('init', id, id, false, true, false)\n            );\n        }\n\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            if (!match('*')) {\n                throwUnexpected(token);\n            }\n            lex();\n\n            computed = (lookahead.type === Token.Punctuator && lookahead.value === '[');\n\n            id = parseObjectPropertyKey();\n\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n\n            if (!match('(')) {\n                throwUnexpected(lex());\n            }\n\n            return markerApply(marker, delegate.createProperty(\n                'init',\n                id,\n                parsePropertyMethodFunction({\n                    generator: true,\n                    typeParameters: typeParameters\n                }),\n                true,\n                false,\n                computed\n            ));\n        }\n        key = parseObjectPropertyKey();\n        if (match(':')) {\n            lex();\n            return markerApply(marker, delegate.createProperty('init', key, parseAssignmentExpression(), false, false, false));\n        }\n        if (match('(') || match('<')) {\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n            return markerApply(marker, delegate.createProperty(\n                'init',\n                key,\n                parsePropertyMethodFunction({\n                    generator: false,\n                    typeParameters: typeParameters\n                }),\n                true,\n                false,\n                false\n            ));\n        }\n        throwUnexpected(lex());\n    }\n\n    function parseObjectSpreadProperty() {\n        var marker = markerCreate();\n        expect('...');\n        return markerApply(marker, delegate.createSpreadProperty(parseAssignmentExpression()));\n    }\n\n    function getFieldName(key) {\n        var toString = String;\n        if (key.type === Syntax.Identifier) {\n            return key.name;\n        }\n        return toString(key.value);\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, kind, storedKind, map = new StringMap(),\n            marker = markerCreate(), toString = String;\n\n        expect('{');\n\n        while (!match('}')) {\n            if (match('...')) {\n                property = parseObjectSpreadProperty();\n            } else {\n                property = parseObjectProperty();\n\n                if (property.key.type === Syntax.Identifier) {\n                    name = property.key.name;\n                } else {\n                    name = toString(property.key.value);\n                }\n                kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n                if (map.has(name)) {\n                    storedKind = map.get(name);\n                    if (storedKind === PropertyKind.Data) {\n                        if (strict && kind === PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                        } else if (kind !== PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.AccessorDataProperty);\n                        }\n                    } else {\n                        if (kind === PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.AccessorDataProperty);\n                        } else if (storedKind & kind) {\n                            throwErrorTolerant({}, Messages.AccessorGetSet);\n                        }\n                    }\n                    map.set(name, storedKind | kind);\n                } else {\n                    map.set(name, kind);\n                }\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return markerApply(marker, delegate.createObjectExpression(properties));\n    }\n\n    function parseTemplateElement(option) {\n        var marker, token;\n\n        if (lookahead.type !== Token.Template || (option.head && !lookahead.head)) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        marker = markerCreate();\n        token = lex();\n\n        if (strict && token.octal) {\n            throwError(token, Messages.StrictOctalLiteral);\n        }\n        return markerApply(marker, delegate.createTemplateElement({ raw: token.value.raw, cooked: token.value.cooked }, token.tail));\n    }\n\n    function parseTemplateLiteral() {\n        var quasi, quasis, expressions, marker = markerCreate();\n\n        quasi = parseTemplateElement({ head: true });\n        quasis = [ quasi ];\n        expressions = [];\n\n        while (!quasi.tail) {\n            expressions.push(parseExpression());\n            quasi = parseTemplateElement({ head: false });\n            quasis.push(quasi);\n        }\n\n        return markerApply(marker, delegate.createTemplateLiteral(quasis, expressions));\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr, marker, typeAnnotation;\n\n        expect('(');\n\n        ++state.parenthesizedCount;\n\n        marker = markerCreate();\n\n        expr = parseExpression();\n\n        if (match(':')) {\n            typeAnnotation = parseTypeAnnotation();\n            expr = markerApply(marker, delegate.createTypeCast(\n                expr,\n                typeAnnotation\n            ));\n        }\n\n        expect(')');\n\n        return expr;\n    }\n\n    function matchAsyncFuncExprOrDecl() {\n        var token;\n\n        if (matchAsync()) {\n            token = lookahead2();\n            if (token.type === Token.Keyword && token.value === 'function') {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var marker, type, token, expr;\n\n        type = lookahead.type;\n\n        if (type === Token.Identifier) {\n            marker = markerCreate();\n            return markerApply(marker, delegate.createIdentifier(lex().value));\n        }\n\n        if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            marker = markerCreate();\n            return markerApply(marker, delegate.createLiteral(lex()));\n        }\n\n        if (type === Token.Keyword) {\n            if (matchKeyword('this')) {\n                marker = markerCreate();\n                lex();\n                return markerApply(marker, delegate.createThisExpression());\n            }\n\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n\n            if (matchKeyword('class')) {\n                return parseClassExpression();\n            }\n\n            if (matchKeyword('super')) {\n                marker = markerCreate();\n                lex();\n                return markerApply(marker, delegate.createIdentifier('super'));\n            }\n        }\n\n        if (type === Token.BooleanLiteral) {\n            marker = markerCreate();\n            token = lex();\n            token.value = (token.value === 'true');\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (type === Token.NullLiteral) {\n            marker = markerCreate();\n            token = lex();\n            token.value = null;\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('/') || match('/=')) {\n            marker = markerCreate();\n            expr = delegate.createLiteral(scanRegExp());\n            peek();\n            return markerApply(marker, expr);\n        }\n\n        if (type === Token.Template) {\n            return parseTemplateLiteral();\n        }\n\n        if (match('<')) {\n            return parseJSXElement();\n        }\n\n        throwUnexpected(lex());\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [], arg;\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                arg = parseSpreadOrAssignmentExpression();\n                args.push(arg);\n\n                if (arg.type === Syntax.SpreadElement) {\n                    if (match(')')) {\n                        break;\n                    } else {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                }\n\n                if (match(')')) {\n                    break;\n                } else {\n                    expect(',');\n                    if (match(')')) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseSpreadOrAssignmentExpression() {\n        if (match('...')) {\n            var marker = markerCreate();\n            lex();\n            return markerApply(marker, delegate.createSpreadElement(parseAssignmentExpression()));\n        }\n        return parseAssignmentExpression();\n    }\n\n    function parseNonComputedProperty() {\n        var marker = markerCreate(),\n            token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, marker = markerCreate();\n\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return markerApply(marker, delegate.createNewExpression(callee, args));\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, marker = markerCreate();\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[') || match('(') || (lookahead.type === Token.Template && lookahead.head)) {\n            if (match('(')) {\n                args = parseArguments();\n                expr = markerApply(marker, delegate.createCallExpression(expr, args));\n            } else if (match('[')) {\n                expr = markerApply(marker, delegate.createMemberExpression('[', expr, parseComputedMember()));\n            } else if (match('.')) {\n                expr = markerApply(marker, delegate.createMemberExpression('.', expr, parseNonComputedMember()));\n            } else {\n                expr = markerApply(marker, delegate.createTaggedTemplateExpression(expr, parseTemplateLiteral()));\n            }\n        }\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, marker = markerCreate();\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[') || (lookahead.type === Token.Template && lookahead.head)) {\n            if (match('[')) {\n                expr = markerApply(marker, delegate.createMemberExpression('[', expr, parseComputedMember()));\n            } else if (match('.')) {\n                expr = markerApply(marker, delegate.createMemberExpression('.', expr, parseNonComputedMember()));\n            } else {\n                expr = markerApply(marker, delegate.createTaggedTemplateExpression(expr, parseTemplateLiteral()));\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var marker = markerCreate(),\n            expr = parseLeftHandSideExpressionAllowCall(),\n            token;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return expr;\n        }\n\n        if ((match('++') || match('--')) && !peekLineTerminator()) {\n            // 11.3.1, 11.3.2\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPostfix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            token = lex();\n            expr = markerApply(marker, delegate.createPostfixExpression(token.value, expr));\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var marker, token, expr;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            return parsePostfixExpression();\n        }\n\n        if (match('++') || match('--')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            return markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n        }\n\n        if (match('+') || match('-') || match('~') || match('!')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            return markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n        }\n\n        if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n            return expr;\n        }\n\n        return parsePostfixExpression();\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var expr, token, prec, previousAllowIn, stack, right, operator, left, i,\n            marker, markers;\n\n        previousAllowIn = state.allowIn;\n        state.allowIn = true;\n\n        marker = markerCreate();\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, previousAllowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, markerCreate()];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, previousAllowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers.pop();\n                markerApply(marker, expr);\n                stack.push(expr);\n                markers.push(marker);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(markerCreate());\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        state.allowIn = previousAllowIn;\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            markerApply(marker, expr);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, marker = markerCreate();\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = markerApply(marker, delegate.createConditionalExpression(expr, consequent, alternate));\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    // 12.14.5 AssignmentPattern\n\n    function reinterpretAsAssignmentBindingPattern(expr) {\n        var i, len, property, element;\n\n        if (expr.type === Syntax.ObjectExpression) {\n            expr.type = Syntax.ObjectPattern;\n            for (i = 0, len = expr.properties.length; i < len; i += 1) {\n                property = expr.properties[i];\n                if (property.type === Syntax.SpreadProperty) {\n                    if (i < len - 1) {\n                        throwError({}, Messages.PropertyAfterSpreadProperty);\n                    }\n                    reinterpretAsAssignmentBindingPattern(property.argument);\n                } else {\n                    if (property.kind !== 'init') {\n                        throwError({}, Messages.InvalidLHSInAssignment);\n                    }\n                    reinterpretAsAssignmentBindingPattern(property.value);\n                }\n            }\n        } else if (expr.type === Syntax.ArrayExpression) {\n            expr.type = Syntax.ArrayPattern;\n            for (i = 0, len = expr.elements.length; i < len; i += 1) {\n                element = expr.elements[i];\n                /* istanbul ignore else */\n                if (element) {\n                    reinterpretAsAssignmentBindingPattern(element);\n                }\n            }\n        } else if (expr.type === Syntax.Identifier) {\n            if (isRestrictedWord(expr.name)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n        } else if (expr.type === Syntax.SpreadElement) {\n            reinterpretAsAssignmentBindingPattern(expr.argument);\n            if (expr.argument.type === Syntax.ObjectPattern) {\n                throwError({}, Messages.ObjectPatternAsSpread);\n            }\n        } else {\n            /* istanbul ignore else */\n            if (expr.type !== Syntax.MemberExpression && expr.type !== Syntax.CallExpression && expr.type !== Syntax.NewExpression) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n        }\n    }\n\n    // 13.2.3 BindingPattern\n\n    function reinterpretAsDestructuredParameter(options, expr) {\n        var i, len, property, element;\n\n        if (expr.type === Syntax.ObjectExpression) {\n            expr.type = Syntax.ObjectPattern;\n            for (i = 0, len = expr.properties.length; i < len; i += 1) {\n                property = expr.properties[i];\n                if (property.type === Syntax.SpreadProperty) {\n                    if (i < len - 1) {\n                        throwError({}, Messages.PropertyAfterSpreadProperty);\n                    }\n                    reinterpretAsDestructuredParameter(options, property.argument);\n                } else {\n                    if (property.kind !== 'init') {\n                        throwError({}, Messages.InvalidLHSInFormalsList);\n                    }\n                    reinterpretAsDestructuredParameter(options, property.value);\n                }\n            }\n        } else if (expr.type === Syntax.ArrayExpression) {\n            expr.type = Syntax.ArrayPattern;\n            for (i = 0, len = expr.elements.length; i < len; i += 1) {\n                element = expr.elements[i];\n                if (element) {\n                    reinterpretAsDestructuredParameter(options, element);\n                }\n            }\n        } else if (expr.type === Syntax.Identifier) {\n            validateParam(options, expr, expr.name);\n        } else if (expr.type === Syntax.SpreadElement) {\n            // BindingRestElement only allows BindingIdentifier\n            if (expr.argument.type !== Syntax.Identifier) {\n                throwError({}, Messages.InvalidLHSInFormalsList);\n            }\n            validateParam(options, expr.argument, expr.argument.name);\n        } else {\n            throwError({}, Messages.InvalidLHSInFormalsList);\n        }\n    }\n\n    function reinterpretAsCoverFormalsList(expressions) {\n        var i, len, param, params, defaults, defaultCount, options, rest;\n\n        params = [];\n        defaults = [];\n        defaultCount = 0;\n        rest = null;\n        options = {\n            paramSet: new StringMap()\n        };\n\n        for (i = 0, len = expressions.length; i < len; i += 1) {\n            param = expressions[i];\n            if (param.type === Syntax.Identifier) {\n                params.push(param);\n                defaults.push(null);\n                validateParam(options, param, param.name);\n            } else if (param.type === Syntax.ObjectExpression || param.type === Syntax.ArrayExpression) {\n                reinterpretAsDestructuredParameter(options, param);\n                params.push(param);\n                defaults.push(null);\n            } else if (param.type === Syntax.SpreadElement) {\n                assert(i === len - 1, 'It is guaranteed that SpreadElement is last element by parseExpression');\n                if (param.argument.type !== Syntax.Identifier) {\n                    throwError({}, Messages.InvalidLHSInFormalsList);\n                }\n                reinterpretAsDestructuredParameter(options, param.argument);\n                rest = param.argument;\n            } else if (param.type === Syntax.AssignmentExpression) {\n                params.push(param.left);\n                defaults.push(param.right);\n                ++defaultCount;\n                validateParam(options, param.left, param.left.name);\n            } else {\n                return null;\n            }\n        }\n\n        if (options.message === Messages.StrictParamDupe) {\n            throwError(\n                strict ? options.stricted : options.firstRestricted,\n                options.message\n            );\n        }\n\n        if (defaultCount === 0) {\n            defaults = [];\n        }\n\n        return {\n            params: params,\n            defaults: defaults,\n            rest: rest,\n            stricted: options.stricted,\n            firstRestricted: options.firstRestricted,\n            message: options.message\n        };\n    }\n\n    function parseArrowFunctionExpression(options, marker) {\n        var previousStrict, previousYieldAllowed, previousAwaitAllowed, body;\n\n        expect('=>');\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = false;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = !!options.async;\n        body = parseConciseBody();\n\n        if (strict && options.firstRestricted) {\n            throwError(options.firstRestricted, options.message);\n        }\n        if (strict && options.stricted) {\n            throwErrorTolerant(options.stricted, options.message);\n        }\n\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(marker, delegate.createArrowFunctionExpression(\n            options.params,\n            options.defaults,\n            body,\n            options.rest,\n            body.type !== Syntax.BlockStatement,\n            !!options.async\n        ));\n    }\n\n    function parseAssignmentExpression() {\n        var marker, expr, token, params, oldParenthesizedCount,\n            startsWithParen = false, backtrackToken = lookahead,\n            possiblyAsync = false;\n\n        if (matchYield()) {\n            return parseYieldExpression();\n        }\n\n        if (matchAwait()) {\n            return parseAwaitExpression();\n        }\n\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        marker = markerCreate();\n\n        if (matchAsyncFuncExprOrDecl()) {\n            return parseFunctionExpression();\n        }\n\n        if (matchAsync()) {\n            // We can't be completely sure that this 'async' token is\n            // actually a contextual keyword modifying a function\n            // expression, so we might have to un-lex() it later by\n            // calling rewind(backtrackToken).\n            possiblyAsync = true;\n            lex();\n        }\n\n        if (match('(')) {\n            token = lookahead2();\n            if ((token.type === Token.Punctuator && token.value === ')') || token.value === '...') {\n                params = parseParams();\n                if (!match('=>')) {\n                    throwUnexpected(lex());\n                }\n                params.async = possiblyAsync;\n                return parseArrowFunctionExpression(params, marker);\n            }\n            startsWithParen = true;\n        }\n\n        token = lookahead;\n\n        // If the 'async' keyword is not followed by a '(' character or an\n        // identifier, then it can't be an arrow function modifier, and we\n        // should interpret it as a normal identifer.\n        if (possiblyAsync && !match('(') && token.type !== Token.Identifier) {\n            possiblyAsync = false;\n            rewind(backtrackToken);\n        }\n\n        expr = parseConditionalExpression();\n\n        if (match('=>') &&\n                (state.parenthesizedCount === oldParenthesizedCount ||\n                state.parenthesizedCount === (oldParenthesizedCount + 1))) {\n            if (expr.type === Syntax.Identifier) {\n                params = reinterpretAsCoverFormalsList([ expr ]);\n            } else if (expr.type === Syntax.AssignmentExpression ||\n                    expr.type === Syntax.ArrayExpression ||\n                    expr.type === Syntax.ObjectExpression) {\n                if (!startsWithParen) {\n                    throwUnexpected(lex());\n                }\n                params = reinterpretAsCoverFormalsList([ expr ]);\n            } else if (expr.type === Syntax.SequenceExpression) {\n                params = reinterpretAsCoverFormalsList(expr.expressions);\n            }\n            if (params) {\n                params.async = possiblyAsync;\n                return parseArrowFunctionExpression(params, marker);\n            }\n        }\n\n        // If we haven't returned by now, then the 'async' keyword was not\n        // a function modifier, and we should rewind and interpret it as a\n        // normal identifier.\n        if (possiblyAsync) {\n            possiblyAsync = false;\n            rewind(backtrackToken);\n            expr = parseConditionalExpression();\n        }\n\n        if (matchAssign()) {\n            // 11.13.1\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            // ES.next draf 11.13 Runtime Semantics step 1\n            if (match('=') && (expr.type === Syntax.ObjectExpression || expr.type === Syntax.ArrayExpression)) {\n                reinterpretAsAssignmentBindingPattern(expr);\n            } else if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = markerApply(marker, delegate.createAssignmentExpression(lex().value, expr, parseAssignmentExpression()));\n        }\n\n        return expr;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var marker, expr, expressions, sequence, spreadFound, possibleArrow;\n\n        marker = markerCreate();\n        expr = parseAssignmentExpression();\n        expressions = [ expr ];\n\n        if (match(',')) {\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n\n                lex();\n\n                if (match(')')) {\n                    possibleArrow = lookahead2();\n                    if (\n                        possibleArrow.type === Token.Punctuator &&\n                        possibleArrow.value === '=>'\n                    ) {\n                        break;\n                    }\n                }\n\n                expr = parseSpreadOrAssignmentExpression();\n                expressions.push(expr);\n\n                if (expr.type === Syntax.SpreadElement) {\n                    spreadFound = true;\n                    if (!match(')')) {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                    break;\n                }\n            }\n\n            if (expressions.length > 1) {\n                sequence = markerApply(marker, delegate.createSequenceExpression(expressions));\n            }\n        }\n\n        if (spreadFound && lookahead2().value !== '=>') {\n            throwError({}, Messages.IllegalSpread);\n        }\n\n        return sequence || expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, marker = markerCreate();\n\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return markerApply(marker, delegate.createBlockStatement(block));\n    }\n\n    // 12.2 Variable Statement\n\n    function parseTypeParameterDeclaration() {\n        var marker = markerCreate(), paramTypes = [];\n\n        expect('<');\n        while (!match('>')) {\n            paramTypes.push(parseTypeAnnotatableIdentifier());\n            if (!match('>')) {\n                expect(',');\n            }\n        }\n        expect('>');\n\n        return markerApply(marker, delegate.createTypeParameterDeclaration(\n            paramTypes\n        ));\n    }\n\n    function parseTypeParameterInstantiation() {\n        var marker = markerCreate(), oldInType = state.inType, paramTypes = [];\n\n        state.inType = true;\n\n        expect('<');\n        while (!match('>')) {\n            paramTypes.push(parseType());\n            if (!match('>')) {\n                expect(',');\n            }\n        }\n        expect('>');\n\n        state.inType = oldInType;\n\n        return markerApply(marker, delegate.createTypeParameterInstantiation(\n            paramTypes\n        ));\n    }\n\n    function parseObjectTypeIndexer(marker, isStatic) {\n        var id, key, value;\n\n        expect('[');\n        id = parseObjectPropertyKey();\n        expect(':');\n        key = parseType();\n        expect(']');\n        expect(':');\n        value = parseType();\n\n        return markerApply(marker, delegate.createObjectTypeIndexer(\n            id,\n            key,\n            value,\n            isStatic\n        ));\n    }\n\n    function parseObjectTypeMethodish(marker) {\n        var params = [], rest = null, returnType, typeParameters = null;\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        expect('(');\n        while (lookahead.type === Token.Identifier) {\n            params.push(parseFunctionTypeParam());\n            if (!match(')')) {\n                expect(',');\n            }\n        }\n\n        if (match('...')) {\n            lex();\n            rest = parseFunctionTypeParam();\n        }\n        expect(')');\n        expect(':');\n        returnType = parseType();\n\n        return markerApply(marker, delegate.createFunctionTypeAnnotation(\n            params,\n            returnType,\n            rest,\n            typeParameters\n        ));\n    }\n\n    function parseObjectTypeMethod(marker, isStatic, key) {\n        var optional = false, value;\n        value = parseObjectTypeMethodish(marker);\n\n        return markerApply(marker, delegate.createObjectTypeProperty(\n            key,\n            value,\n            optional,\n            isStatic\n        ));\n    }\n\n    function parseObjectTypeCallProperty(marker, isStatic) {\n        var valueMarker = markerCreate();\n        return markerApply(marker, delegate.createObjectTypeCallProperty(\n            parseObjectTypeMethodish(valueMarker),\n            isStatic\n        ));\n    }\n\n    function parseObjectType(allowStatic) {\n        var callProperties = [], indexers = [], marker, optional = false,\n            properties = [], propertyKey, propertyTypeAnnotation,\n            token, isStatic, matchStatic;\n\n        expect('{');\n\n        while (!match('}')) {\n            marker = markerCreate();\n            matchStatic =\n                   strict\n                   ? matchKeyword('static')\n                   : matchContextualKeyword('static');\n\n            if (allowStatic && matchStatic) {\n                token = lex();\n                isStatic = true;\n            }\n\n            if (match('[')) {\n                indexers.push(parseObjectTypeIndexer(marker, isStatic));\n            } else if (match('(') || match('<')) {\n                callProperties.push(parseObjectTypeCallProperty(marker, allowStatic));\n            } else {\n                if (isStatic && match(':')) {\n                    propertyKey = markerApply(marker, delegate.createIdentifier(token));\n                    throwErrorTolerant(token, Messages.StrictReservedWord);\n                } else {\n                    propertyKey = parseObjectPropertyKey();\n                }\n                if (match('<') || match('(')) {\n                    // This is a method property\n                    properties.push(parseObjectTypeMethod(marker, isStatic, propertyKey));\n                } else {\n                    if (match('?')) {\n                        lex();\n                        optional = true;\n                    }\n                    expect(':');\n                    propertyTypeAnnotation = parseType();\n                    properties.push(markerApply(marker, delegate.createObjectTypeProperty(\n                        propertyKey,\n                        propertyTypeAnnotation,\n                        optional,\n                        isStatic\n                    )));\n                }\n            }\n\n            if (match(';') || match(',')) {\n                lex();\n            } else if (!match('}')) {\n                throwUnexpected(lookahead);\n            }\n        }\n\n        expect('}');\n\n        return delegate.createObjectTypeAnnotation(\n            properties,\n            indexers,\n            callProperties\n        );\n    }\n\n    function parseGenericType() {\n        var marker = markerCreate(),\n            typeParameters = null, typeIdentifier;\n\n        typeIdentifier = parseVariableIdentifier();\n\n        while (match('.')) {\n            expect('.');\n            typeIdentifier = markerApply(marker, delegate.createQualifiedTypeIdentifier(\n                typeIdentifier,\n                parseVariableIdentifier()\n            ));\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterInstantiation();\n        }\n\n        return markerApply(marker, delegate.createGenericTypeAnnotation(\n            typeIdentifier,\n            typeParameters\n        ));\n    }\n\n    function parseVoidType() {\n        var marker = markerCreate();\n        expectKeyword('void');\n        return markerApply(marker, delegate.createVoidTypeAnnotation());\n    }\n\n    function parseTypeofType() {\n        var argument, marker = markerCreate();\n        expectKeyword('typeof');\n        argument = parsePrimaryType();\n        return markerApply(marker, delegate.createTypeofTypeAnnotation(\n            argument\n        ));\n    }\n\n    function parseTupleType() {\n        var marker = markerCreate(), types = [];\n        expect('[');\n        // We allow trailing commas\n        while (index < length && !match(']')) {\n            types.push(parseType());\n            if (match(']')) {\n                break;\n            }\n            expect(',');\n        }\n        expect(']');\n        return markerApply(marker, delegate.createTupleTypeAnnotation(\n            types\n        ));\n    }\n\n    function parseFunctionTypeParam() {\n        var marker = markerCreate(), name, optional = false, typeAnnotation;\n        name = parseVariableIdentifier();\n        if (match('?')) {\n            lex();\n            optional = true;\n        }\n        expect(':');\n        typeAnnotation = parseType();\n        return markerApply(marker, delegate.createFunctionTypeParam(\n            name,\n            typeAnnotation,\n            optional\n        ));\n    }\n\n    function parseFunctionTypeParams() {\n        var ret = { params: [], rest: null };\n        while (lookahead.type === Token.Identifier) {\n            ret.params.push(parseFunctionTypeParam());\n            if (!match(')')) {\n                expect(',');\n            }\n        }\n\n        if (match('...')) {\n            lex();\n            ret.rest = parseFunctionTypeParam();\n        }\n        return ret;\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    function parsePrimaryType() {\n        var params = null, returnType = null,\n            marker = markerCreate(), rest = null, tmp,\n            typeParameters, token, type, isGroupedType = false;\n\n        switch (lookahead.type) {\n        case Token.Identifier:\n            switch (lookahead.value) {\n            case 'any':\n                lex();\n                return markerApply(marker, delegate.createAnyTypeAnnotation());\n            case 'bool':  // fallthrough\n            case 'boolean':\n                lex();\n                return markerApply(marker, delegate.createBooleanTypeAnnotation());\n            case 'number':\n                lex();\n                return markerApply(marker, delegate.createNumberTypeAnnotation());\n            case 'string':\n                lex();\n                return markerApply(marker, delegate.createStringTypeAnnotation());\n            }\n            return markerApply(marker, parseGenericType());\n        case Token.Punctuator:\n            switch (lookahead.value) {\n            case '{':\n                return markerApply(marker, parseObjectType());\n            case '[':\n                return parseTupleType();\n            case '<':\n                typeParameters = parseTypeParameterDeclaration();\n                expect('(');\n                tmp = parseFunctionTypeParams();\n                params = tmp.params;\n                rest = tmp.rest;\n                expect(')');\n\n                expect('=>');\n\n                returnType = parseType();\n\n                return markerApply(marker, delegate.createFunctionTypeAnnotation(\n                    params,\n                    returnType,\n                    rest,\n                    typeParameters\n                ));\n            case '(':\n                lex();\n                // Check to see if this is actually a grouped type\n                if (!match(')') && !match('...')) {\n                    if (lookahead.type === Token.Identifier) {\n                        token = lookahead2();\n                        isGroupedType = token.value !== '?' && token.value !== ':';\n                    } else {\n                        isGroupedType = true;\n                    }\n                }\n\n                if (isGroupedType) {\n                    type = parseType();\n                    expect(')');\n\n                    // If we see a => next then someone was probably confused about\n                    // function types, so we can provide a better error message\n                    if (match('=>')) {\n                        throwError({}, Messages.ConfusedAboutFunctionType);\n                    }\n\n                    return type;\n                }\n\n                tmp = parseFunctionTypeParams();\n                params = tmp.params;\n                rest = tmp.rest;\n\n                expect(')');\n\n                expect('=>');\n\n                returnType = parseType();\n\n                return markerApply(marker, delegate.createFunctionTypeAnnotation(\n                    params,\n                    returnType,\n                    rest,\n                    null /* typeParameters */\n                ));\n            }\n            break;\n        case Token.Keyword:\n            switch (lookahead.value) {\n            case 'void':\n                return markerApply(marker, parseVoidType());\n            case 'typeof':\n                return markerApply(marker, parseTypeofType());\n            }\n            break;\n        case Token.StringLiteral:\n            token = lex();\n            if (token.octal) {\n                throwError(token, Messages.StrictOctalLiteral);\n            }\n            return markerApply(marker, delegate.createStringLiteralTypeAnnotation(\n                token\n            ));\n        }\n\n        throwUnexpected(lookahead);\n    }\n\n    function parsePostfixType() {\n        var marker = markerCreate(), t = parsePrimaryType();\n        if (match('[')) {\n            expect('[');\n            expect(']');\n            return markerApply(marker, delegate.createArrayTypeAnnotation(t));\n        }\n        return t;\n    }\n\n    function parsePrefixType() {\n        var marker = markerCreate();\n        if (match('?')) {\n            lex();\n            return markerApply(marker, delegate.createNullableTypeAnnotation(\n                parsePrefixType()\n            ));\n        }\n        return parsePostfixType();\n    }\n\n\n    function parseIntersectionType() {\n        var marker = markerCreate(), type, types;\n        type = parsePrefixType();\n        types = [type];\n        while (match('&')) {\n            lex();\n            types.push(parsePrefixType());\n        }\n\n        return types.length === 1 ?\n                type :\n                markerApply(marker, delegate.createIntersectionTypeAnnotation(\n                    types\n                ));\n    }\n\n    function parseUnionType() {\n        var marker = markerCreate(), type, types;\n        type = parseIntersectionType();\n        types = [type];\n        while (match('|')) {\n            lex();\n            types.push(parseIntersectionType());\n        }\n        return types.length === 1 ?\n                type :\n                markerApply(marker, delegate.createUnionTypeAnnotation(\n                    types\n                ));\n    }\n\n    function parseType() {\n        var oldInType = state.inType, type;\n        state.inType = true;\n\n        type = parseUnionType();\n\n        state.inType = oldInType;\n        return type;\n    }\n\n    function parseTypeAnnotation() {\n        var marker = markerCreate(), type;\n\n        expect(':');\n        type = parseType();\n\n        return markerApply(marker, delegate.createTypeAnnotation(type));\n    }\n\n    function parseVariableIdentifier() {\n        var marker = markerCreate(),\n            token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseTypeAnnotatableIdentifier(requireTypeAnnotation, canBeOptionalParam) {\n        var marker = markerCreate(),\n            ident = parseVariableIdentifier(),\n            isOptionalParam = false;\n\n        if (canBeOptionalParam && match('?')) {\n            expect('?');\n            isOptionalParam = true;\n        }\n\n        if (requireTypeAnnotation || match(':')) {\n            ident.typeAnnotation = parseTypeAnnotation();\n            ident = markerApply(marker, ident);\n        }\n\n        if (isOptionalParam) {\n            ident.optional = true;\n            ident = markerApply(marker, ident);\n        }\n\n        return ident;\n    }\n\n    function parseVariableDeclaration(kind) {\n        var id,\n            marker = markerCreate(),\n            init = null,\n            typeAnnotationMarker = markerCreate();\n        if (match('{')) {\n            id = parseObjectInitialiser();\n            reinterpretAsAssignmentBindingPattern(id);\n            if (match(':')) {\n                id.typeAnnotation = parseTypeAnnotation();\n                markerApply(typeAnnotationMarker, id);\n            }\n        } else if (match('[')) {\n            id = parseArrayInitialiser();\n            reinterpretAsAssignmentBindingPattern(id);\n            if (match(':')) {\n                id.typeAnnotation = parseTypeAnnotation();\n                markerApply(typeAnnotationMarker, id);\n            }\n        } else {\n            /* istanbul ignore next */\n            id = state.allowKeyword ? parseNonComputedProperty() : parseTypeAnnotatableIdentifier();\n            // 12.2.1\n            if (strict && isRestrictedWord(id.name)) {\n                throwErrorTolerant({}, Messages.StrictVarName);\n            }\n        }\n\n        if (kind === 'const') {\n            if (!match('=')) {\n                throwError({}, Messages.NoUninitializedConst);\n            }\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return markerApply(marker, delegate.createVariableDeclarator(id, init));\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations, marker = markerCreate();\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, 'var'));\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, marker = markerCreate();\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, kind));\n    }\n\n    // people.mozilla.org/~jorendorff/es6-draft.html\n\n    function parseModuleSpecifier() {\n        var marker = markerCreate(),\n            specifier;\n\n        if (lookahead.type !== Token.StringLiteral) {\n            throwError({}, Messages.InvalidModuleSpecifier);\n        }\n        specifier = delegate.createLiteral(lex());\n        return markerApply(marker, specifier);\n    }\n\n    function parseExportBatchSpecifier() {\n        var marker = markerCreate();\n        expect('*');\n        return markerApply(marker, delegate.createExportBatchSpecifier());\n    }\n\n    function parseExportSpecifier() {\n        var id, name = null, marker = markerCreate();\n        if (matchKeyword('default')) {\n            lex();\n            id = markerApply(marker, delegate.createIdentifier('default'));\n            // export {default} from \"something\";\n        } else {\n            id = parseVariableIdentifier();\n        }\n        if (matchContextualKeyword('as')) {\n            lex();\n            name = parseNonComputedProperty();\n        }\n\n        return markerApply(marker, delegate.createExportSpecifier(id, name));\n    }\n\n    function parseExportDeclaration() {\n        var declaration = null,\n            possibleIdentifierToken, sourceElement,\n            isExportFromIdentifier,\n            src = null, specifiers = [],\n            marker = markerCreate();\n\n        expectKeyword('export');\n\n        if (matchKeyword('default')) {\n            // covers:\n            // export default ...\n            lex();\n            if (matchKeyword('function') || matchKeyword('class')) {\n                possibleIdentifierToken = lookahead2();\n                if (isIdentifierName(possibleIdentifierToken)) {\n                    // covers:\n                    // export default function foo () {}\n                    // export default class foo {}\n                    sourceElement = parseSourceElement();\n                    return markerApply(marker, delegate.createExportDeclaration(true, sourceElement, [sourceElement.id], null));\n                }\n                // covers:\n                // export default function () {}\n                // export default class {}\n                switch (lookahead.value) {\n                case 'class':\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseClassExpression(), [], null));\n                case 'function':\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseFunctionExpression(), [], null));\n                }\n            }\n\n            if (matchContextualKeyword('from')) {\n                throwError({}, Messages.UnexpectedToken, lookahead.value);\n            }\n\n            // covers:\n            // export default {};\n            // export default [];\n            if (match('{')) {\n                declaration = parseObjectInitialiser();\n            } else if (match('[')) {\n                declaration = parseArrayInitialiser();\n            } else {\n                declaration = parseAssignmentExpression();\n            }\n            consumeSemicolon();\n            return markerApply(marker, delegate.createExportDeclaration(true, declaration, [], null));\n        }\n\n        // non-default export\n        if (lookahead.type === Token.Keyword || matchContextualKeyword('type')) {\n            // covers:\n            // export var f = 1;\n            switch (lookahead.value) {\n            case 'type':\n            case 'let':\n            case 'const':\n            case 'var':\n            case 'class':\n            case 'function':\n                return markerApply(marker, delegate.createExportDeclaration(false, parseSourceElement(), specifiers, null));\n            }\n        }\n\n        if (match('*')) {\n            // covers:\n            // export * from \"foo\";\n            specifiers.push(parseExportBatchSpecifier());\n\n            if (!matchContextualKeyword('from')) {\n                throwError({}, lookahead.value ?\n                        Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n            }\n            lex();\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n\n            return markerApply(marker, delegate.createExportDeclaration(false, null, specifiers, src));\n        }\n\n        expect('{');\n        if (!match('}')) {\n            do {\n                isExportFromIdentifier = isExportFromIdentifier || matchKeyword('default');\n                specifiers.push(parseExportSpecifier());\n            } while (match(',') && lex());\n        }\n        expect('}');\n\n        if (matchContextualKeyword('from')) {\n            // covering:\n            // export {default} from \"foo\";\n            // export {foo} from \"foo\";\n            lex();\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n        } else if (isExportFromIdentifier) {\n            // covering:\n            // export {default}; // missing fromClause\n            throwError({}, lookahead.value ?\n                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n        } else {\n            // cover\n            // export {foo};\n            consumeSemicolon();\n        }\n        return markerApply(marker, delegate.createExportDeclaration(false, declaration, specifiers, src));\n    }\n\n\n    function parseImportSpecifier() {\n        // import {<foo as bar>} ...;\n        var id, name = null, marker = markerCreate();\n\n        id = parseNonComputedProperty();\n        if (matchContextualKeyword('as')) {\n            lex();\n            name = parseVariableIdentifier();\n        }\n\n        return markerApply(marker, delegate.createImportSpecifier(id, name));\n    }\n\n    function parseNamedImports() {\n        var specifiers = [];\n        // {foo, bar as bas}\n        expect('{');\n        if (!match('}')) {\n            do {\n                specifiers.push(parseImportSpecifier());\n            } while (match(',') && lex());\n        }\n        expect('}');\n        return specifiers;\n    }\n\n    function parseImportDefaultSpecifier() {\n        // import <foo> ...;\n        var id, marker = markerCreate();\n\n        id = parseNonComputedProperty();\n\n        return markerApply(marker, delegate.createImportDefaultSpecifier(id));\n    }\n\n    function parseImportNamespaceSpecifier() {\n        // import <* as foo> ...;\n        var id, marker = markerCreate();\n\n        expect('*');\n        if (!matchContextualKeyword('as')) {\n            throwError({}, Messages.NoAsAfterImportNamespace);\n        }\n        lex();\n        id = parseNonComputedProperty();\n\n        return markerApply(marker, delegate.createImportNamespaceSpecifier(id));\n    }\n\n    function parseImportDeclaration() {\n        var specifiers, src, marker = markerCreate(), importKind = 'value',\n            token2;\n\n        expectKeyword('import');\n\n        if (matchContextualKeyword('type')) {\n            token2 = lookahead2();\n            if ((token2.type === Token.Identifier && token2.value !== 'from') ||\n                    (token2.type === Token.Punctuator &&\n                        (token2.value === '{' || token2.value === '*'))) {\n                importKind = 'type';\n                lex();\n            }\n        } else if (matchKeyword('typeof')) {\n            importKind = 'typeof';\n            lex();\n        }\n\n        specifiers = [];\n\n        if (lookahead.type === Token.StringLiteral) {\n            // covers:\n            // import \"foo\";\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n            return markerApply(marker, delegate.createImportDeclaration(specifiers, src, importKind));\n        }\n\n        if (!matchKeyword('default') && isIdentifierName(lookahead)) {\n            // covers:\n            // import foo\n            // import foo, ...\n            specifiers.push(parseImportDefaultSpecifier());\n            if (match(',')) {\n                lex();\n            }\n        }\n        if (match('*')) {\n            // covers:\n            // import foo, * as foo\n            // import * as foo\n            specifiers.push(parseImportNamespaceSpecifier());\n        } else if (match('{')) {\n            // covers:\n            // import foo, {bar}\n            // import {bar}\n            specifiers = specifiers.concat(parseNamedImports());\n        }\n\n        if (!matchContextualKeyword('from')) {\n            throwError({}, lookahead.value ?\n                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n        }\n        lex();\n        src = parseModuleSpecifier();\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createImportDeclaration(specifiers, src, importKind));\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        var marker = markerCreate();\n        expect(';');\n        return markerApply(marker, delegate.createEmptyStatement());\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var marker = markerCreate(), expr = parseExpression();\n        consumeSemicolon();\n        return markerApply(marker, delegate.createExpressionStatement(expr));\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate, marker = markerCreate();\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return markerApply(marker, delegate.createIfStatement(test, consequent, alternate));\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration, marker = markerCreate();\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return markerApply(marker, delegate.createDoWhileStatement(body, test));\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration, marker = markerCreate();\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return markerApply(marker, delegate.createWhileStatement(test, body));\n    }\n\n    function parseForVariableDeclaration() {\n        var marker = markerCreate(),\n            token = lex(),\n            declarations = parseVariableDeclarationList();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, token.value));\n    }\n\n    function parseForStatement(opts) {\n        var init, test, update, left, right, body, operator, oldInIteration,\n            marker = markerCreate();\n        init = test = update = null;\n        expectKeyword('for');\n\n        // http://wiki.ecmascript.org/doku.php?id=proposals:iterators_and_generators&s=each\n        if (matchContextualKeyword('each')) {\n            throwError({}, Messages.EachNotAllowed);\n        }\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let') || matchKeyword('const')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = true;\n\n                if (init.declarations.length === 1) {\n                    if (matchKeyword('in') || matchContextualKeyword('of')) {\n                        operator = lookahead;\n                        if (!((operator.value === 'in' || init.kind !== 'var') && init.declarations[0].init)) {\n                            lex();\n                            left = init;\n                            right = parseExpression();\n                            init = null;\n                        }\n                    }\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = true;\n\n                if (matchContextualKeyword('of')) {\n                    operator = lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                } else if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isAssignableLeftHandSide(init)) {\n                        throwError({}, Messages.InvalidLHSInForIn);\n                    }\n                    operator = lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        if (!(opts !== undefined && opts.ignoreBody)) {\n            body = parseStatement();\n        }\n\n        state.inIteration = oldInIteration;\n\n        if (typeof left === 'undefined') {\n            return markerApply(marker, delegate.createForStatement(init, test, update, body));\n        }\n\n        if (operator.value === 'in') {\n            return markerApply(marker, delegate.createForInStatement(left, right, body));\n        }\n        return markerApply(marker, delegate.createForOfStatement(left, right, body));\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, marker = markerCreate();\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 59) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return markerApply(marker, delegate.createContinueStatement(null));\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return markerApply(marker, delegate.createContinueStatement(null));\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            if (!state.labelSet.has(label.name)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return markerApply(marker, delegate.createContinueStatement(label));\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, marker = markerCreate();\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return markerApply(marker, delegate.createBreakStatement(null));\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return markerApply(marker, delegate.createBreakStatement(null));\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            if (!state.labelSet.has(label.name)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return markerApply(marker, delegate.createBreakStatement(label));\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null, marker = markerCreate();\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 32) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return markerApply(marker, delegate.createReturnStatement(argument));\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return markerApply(marker, delegate.createReturnStatement(null));\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createReturnStatement(argument));\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body, marker = markerCreate();\n\n        if (strict) {\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return markerApply(marker, delegate.createWithStatement(object, body));\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test,\n            consequent = [],\n            sourceElement,\n            marker = markerCreate();\n\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            consequent.push(sourceElement);\n        }\n\n        return markerApply(marker, delegate.createSwitchCase(test, consequent));\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound, marker = markerCreate();\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return markerApply(marker, delegate.createSwitchStatement(discriminant, cases));\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createSwitchStatement(discriminant, cases));\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument, marker = markerCreate();\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createThrowStatement(argument));\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, marker = markerCreate();\n\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseExpression();\n        // 12.14.1\n        if (strict && param.type === Syntax.Identifier && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return markerApply(marker, delegate.createCatchClause(param, body));\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null, marker = markerCreate();\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return markerApply(marker, delegate.createTryStatement(block, [], handlers, finalizer));\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        var marker = markerCreate();\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDebuggerStatement());\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            marker,\n            expr,\n            labeledBody;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return parseEmptyStatement();\n            case '{':\n                return parseBlock();\n            case '(':\n                return parseExpressionStatement();\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return parseBreakStatement();\n            case 'continue':\n                return parseContinueStatement();\n            case 'debugger':\n                return parseDebuggerStatement();\n            case 'do':\n                return parseDoWhileStatement();\n            case 'for':\n                return parseForStatement();\n            case 'function':\n                return parseFunctionDeclaration();\n            case 'class':\n                return parseClassDeclaration();\n            case 'if':\n                return parseIfStatement();\n            case 'return':\n                return parseReturnStatement();\n            case 'switch':\n                return parseSwitchStatement();\n            case 'throw':\n                return parseThrowStatement();\n            case 'try':\n                return parseTryStatement();\n            case 'var':\n                return parseVariableStatement();\n            case 'while':\n                return parseWhileStatement();\n            case 'with':\n                return parseWithStatement();\n            default:\n                break;\n            }\n        }\n\n        if (matchAsyncFuncExprOrDecl()) {\n            return parseFunctionDeclaration();\n        }\n\n        marker = markerCreate();\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            if (state.labelSet.has(expr.name)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet.set(expr.name, true);\n            labeledBody = parseStatement();\n            state.labelSet.delete(expr.name);\n            return markerApply(marker, delegate.createLabeledStatement(expr, labeledBody));\n        }\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createExpressionStatement(expr));\n    }\n\n    // 13 Function Definition\n\n    function parseConciseBody() {\n        if (match('{')) {\n            return parseFunctionSourceElements();\n        }\n        return parseAssignmentExpression();\n    }\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, oldParenthesizedCount,\n            marker = markerCreate();\n\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.range[0] + 1, token.range[1] - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        state.labelSet = new StringMap();\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n        state.parenthesizedCount = 0;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n        state.parenthesizedCount = oldParenthesizedCount;\n\n        return markerApply(marker, delegate.createBlockStatement(sourceElements));\n    }\n\n    function validateParam(options, param, name) {\n        if (strict) {\n            if (isRestrictedWord(name)) {\n                options.stricted = param;\n                options.message = Messages.StrictParamName;\n            }\n            if (options.paramSet.has(name)) {\n                options.stricted = param;\n                options.message = Messages.StrictParamDupe;\n            }\n        } else if (!options.firstRestricted) {\n            if (isRestrictedWord(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictParamName;\n            } else if (isStrictModeReservedWord(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictReservedWord;\n            } else if (options.paramSet.has(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictParamDupe;\n            }\n        }\n        options.paramSet.set(name, true);\n    }\n\n    function parseParam(options) {\n        var marker, token, rest, param, def;\n\n        token = lookahead;\n        if (token.value === '...') {\n            token = lex();\n            rest = true;\n        }\n\n        if (match('[')) {\n            marker = markerCreate();\n            param = parseArrayInitialiser();\n            reinterpretAsDestructuredParameter(options, param);\n            if (match(':')) {\n                param.typeAnnotation = parseTypeAnnotation();\n                markerApply(marker, param);\n            }\n        } else if (match('{')) {\n            marker = markerCreate();\n            if (rest) {\n                throwError({}, Messages.ObjectPatternAsRestParameter);\n            }\n            param = parseObjectInitialiser();\n            reinterpretAsDestructuredParameter(options, param);\n            if (match(':')) {\n                param.typeAnnotation = parseTypeAnnotation();\n                markerApply(marker, param);\n            }\n        } else {\n            param =\n                rest\n                ? parseTypeAnnotatableIdentifier(\n                    false, /* requireTypeAnnotation */\n                    false /* canBeOptionalParam */\n                )\n                : parseTypeAnnotatableIdentifier(\n                    false, /* requireTypeAnnotation */\n                    true /* canBeOptionalParam */\n                );\n\n            validateParam(options, token, token.value);\n        }\n\n        if (match('=')) {\n            if (rest) {\n                throwErrorTolerant(lookahead, Messages.DefaultRestParameter);\n            }\n            lex();\n            def = parseAssignmentExpression();\n            ++options.defaultCount;\n        }\n\n        if (rest) {\n            if (!match(')')) {\n                throwError({}, Messages.ParameterAfterRestParameter);\n            }\n            options.rest = param;\n            return false;\n        }\n\n        options.params.push(param);\n        options.defaults.push(def);\n        return !match(')');\n    }\n\n    function parseParams(firstRestricted) {\n        var options, marker = markerCreate();\n\n        options = {\n            params: [],\n            defaultCount: 0,\n            defaults: [],\n            rest: null,\n            firstRestricted: firstRestricted\n        };\n\n        expect('(');\n\n        if (!match(')')) {\n            options.paramSet = new StringMap();\n            while (index < length) {\n                if (!parseParam(options)) {\n                    break;\n                }\n                expect(',');\n                if (!options.rest && match(')')) {\n                    break;\n                }\n            }\n        }\n\n        expect(')');\n\n        if (options.defaultCount === 0) {\n            options.defaults = [];\n        }\n\n        if (match(':')) {\n            options.returnType = parseTypeAnnotation();\n        }\n\n        return markerApply(marker, options);\n    }\n\n    function parseFunctionDeclaration() {\n        var id, body, token, tmp, firstRestricted, message, generator, isAsync,\n            previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            marker = markerCreate(), typeParameters;\n\n        isAsync = false;\n        if (matchAsync()) {\n            lex();\n            isAsync = true;\n        }\n\n        expectKeyword('function');\n\n        generator = false;\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        token = lookahead;\n\n        id = parseVariableIdentifier();\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = isAsync;\n\n        body = parseFunctionSourceElements();\n\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, message);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(\n            marker,\n            delegate.createFunctionDeclaration(\n                id,\n                tmp.params,\n                tmp.defaults,\n                body,\n                tmp.rest,\n                generator,\n                false,\n                isAsync,\n                tmp.returnType,\n                typeParameters\n            )\n        );\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, firstRestricted, message, tmp, body, generator, isAsync,\n            previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            marker = markerCreate(), typeParameters;\n\n        isAsync = false;\n        if (matchAsync()) {\n            lex();\n            isAsync = true;\n        }\n\n        expectKeyword('function');\n\n        generator = false;\n\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        if (!match('(')) {\n            if (!match('<')) {\n                token = lookahead;\n                id = parseVariableIdentifier();\n\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        throwErrorTolerant(token, Messages.StrictFunctionName);\n                    }\n                } else {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictFunctionName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    }\n                }\n            }\n\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = isAsync;\n\n        body = parseFunctionSourceElements();\n\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, message);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(\n            marker,\n            delegate.createFunctionExpression(\n                id,\n                tmp.params,\n                tmp.defaults,\n                body,\n                tmp.rest,\n                generator,\n                false,\n                isAsync,\n                tmp.returnType,\n                typeParameters\n            )\n        );\n    }\n\n    function parseYieldExpression() {\n        var delegateFlag, expr, marker = markerCreate();\n\n        expectKeyword('yield', !strict);\n\n        delegateFlag = false;\n        if (match('*')) {\n            lex();\n            delegateFlag = true;\n        }\n\n        expr = parseAssignmentExpression();\n\n        return markerApply(marker, delegate.createYieldExpression(expr, delegateFlag));\n    }\n\n    function parseAwaitExpression() {\n        var expr, marker = markerCreate();\n        expectContextualKeyword('await');\n        expr = parseAssignmentExpression();\n        return markerApply(marker, delegate.createAwaitExpression(expr));\n    }\n\n    // 14 Functions and classes\n\n    // 14.1 Functions is defined above (13 in ES5)\n    // 14.2 Arrow Functions Definitions is defined in (7.3 assignments)\n\n    // 14.3 Method Definitions\n    // 14.3.7\n    function specialMethod(methodDefinition) {\n        return methodDefinition.kind === 'get' ||\n               methodDefinition.kind === 'set' ||\n               methodDefinition.value.generator;\n    }\n\n    function parseMethodDefinition(key, isStatic, generator, computed) {\n        var token, param, propType,\n            isAsync, typeParameters, tokenValue, returnType;\n\n        propType = isStatic ? ClassPropertyType.static : ClassPropertyType.prototype;\n\n        if (generator) {\n            return delegate.createMethodDefinition(\n                propType,\n                '',\n                key,\n                parsePropertyMethodFunction({ generator: true }),\n                computed\n            );\n        }\n\n        tokenValue = key.type === 'Identifier' && key.name;\n\n        if (tokenValue === 'get' && !match('(')) {\n            key = parseObjectPropertyKey();\n\n            expect('(');\n            expect(')');\n            if (match(':')) {\n                returnType = parseTypeAnnotation();\n            }\n            return delegate.createMethodDefinition(\n                propType,\n                'get',\n                key,\n                parsePropertyFunction({ generator: false, returnType: returnType }),\n                computed\n            );\n        }\n        if (tokenValue === 'set' && !match('(')) {\n            key = parseObjectPropertyKey();\n\n            expect('(');\n            token = lookahead;\n            param = [ parseTypeAnnotatableIdentifier() ];\n            expect(')');\n            if (match(':')) {\n                returnType = parseTypeAnnotation();\n            }\n            return delegate.createMethodDefinition(\n                propType,\n                'set',\n                key,\n                parsePropertyFunction({\n                    params: param,\n                    generator: false,\n                    name: token,\n                    returnType: returnType\n                }),\n                computed\n            );\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        isAsync = tokenValue === 'async' && !match('(');\n        if (isAsync) {\n            key = parseObjectPropertyKey();\n        }\n\n        return delegate.createMethodDefinition(\n            propType,\n            '',\n            key,\n            parsePropertyMethodFunction({\n                generator: false,\n                async: isAsync,\n                typeParameters: typeParameters\n            }),\n            computed\n        );\n    }\n\n    function parseClassProperty(key, computed, isStatic) {\n        var typeAnnotation;\n\n        typeAnnotation = parseTypeAnnotation();\n        expect(';');\n\n        return delegate.createClassProperty(\n            key,\n            typeAnnotation,\n            computed,\n            isStatic\n        );\n    }\n\n    function parseClassElement() {\n        var computed = false, generator = false, key, marker = markerCreate(),\n            isStatic = false, possiblyOpenBracketToken;\n        if (match(';')) {\n            lex();\n            return undefined;\n        }\n\n        if (lookahead.value === 'static') {\n            lex();\n            isStatic = true;\n        }\n\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        possiblyOpenBracketToken = lookahead;\n        if (matchContextualKeyword('get') || matchContextualKeyword('set')) {\n            possiblyOpenBracketToken = lookahead2();\n        }\n\n        if (possiblyOpenBracketToken.type === Token.Punctuator\n                && possiblyOpenBracketToken.value === '[') {\n            computed = true;\n        }\n\n        key = parseObjectPropertyKey();\n\n        if (!generator && lookahead.value === ':') {\n            return markerApply(marker, parseClassProperty(key, computed, isStatic));\n        }\n\n        return markerApply(marker, parseMethodDefinition(\n            key,\n            isStatic,\n            generator,\n            computed\n        ));\n    }\n\n    function parseClassBody() {\n        var classElement, classElements = [], existingProps = {},\n            marker = markerCreate(), propName, propType;\n\n        existingProps[ClassPropertyType.static] = new StringMap();\n        existingProps[ClassPropertyType.prototype] = new StringMap();\n\n        expect('{');\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            classElement = parseClassElement(existingProps);\n\n            if (typeof classElement !== 'undefined') {\n                classElements.push(classElement);\n\n                propName = !classElement.computed && getFieldName(classElement.key);\n                if (propName !== false) {\n                    propType = classElement.static ?\n                                ClassPropertyType.static :\n                                ClassPropertyType.prototype;\n\n                    if (classElement.type === Syntax.MethodDefinition) {\n                        if (propName === 'constructor' && !classElement.static) {\n                            if (specialMethod(classElement)) {\n                                throwError(classElement, Messages.IllegalClassConstructorProperty);\n                            }\n                            if (existingProps[ClassPropertyType.prototype].has('constructor')) {\n                                throwError(classElement.key, Messages.IllegalDuplicateClassProperty);\n                            }\n                        }\n                        existingProps[propType].set(propName, true);\n                    }\n                }\n            }\n        }\n\n        expect('}');\n\n        return markerApply(marker, delegate.createClassBody(classElements));\n    }\n\n    function parseClassImplements() {\n        var id, implemented = [], marker, typeParameters;\n        if (strict) {\n            expectKeyword('implements');\n        } else {\n            expectContextualKeyword('implements');\n        }\n        while (index < length) {\n            marker = markerCreate();\n            id = parseVariableIdentifier();\n            if (match('<')) {\n                typeParameters = parseTypeParameterInstantiation();\n            } else {\n                typeParameters = null;\n            }\n            implemented.push(markerApply(marker, delegate.createClassImplements(\n                id,\n                typeParameters\n            )));\n            if (!match(',')) {\n                break;\n            }\n            expect(',');\n        }\n        return implemented;\n    }\n\n    function parseClassExpression() {\n        var id, implemented, previousYieldAllowed, superClass = null,\n            superTypeParameters, marker = markerCreate(), typeParameters,\n            matchImplements;\n\n        expectKeyword('class');\n\n        matchImplements =\n                strict\n                ? matchKeyword('implements')\n                : matchContextualKeyword('implements');\n\n        if (!matchKeyword('extends') && !matchImplements && !match('{')) {\n            id = parseVariableIdentifier();\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n            previousYieldAllowed = state.yieldAllowed;\n            state.yieldAllowed = false;\n            superClass = parseLeftHandSideExpressionAllowCall();\n            if (match('<')) {\n                superTypeParameters = parseTypeParameterInstantiation();\n            }\n            state.yieldAllowed = previousYieldAllowed;\n        }\n\n        if (strict ? matchKeyword('implements') : matchContextualKeyword('implements')) {\n            implemented = parseClassImplements();\n        }\n\n        return markerApply(marker, delegate.createClassExpression(\n            id,\n            superClass,\n            parseClassBody(),\n            typeParameters,\n            superTypeParameters,\n            implemented\n        ));\n    }\n\n    function parseClassDeclaration() {\n        var id, implemented, previousYieldAllowed, superClass = null,\n            superTypeParameters, marker = markerCreate(), typeParameters;\n\n        expectKeyword('class');\n\n        id = parseVariableIdentifier();\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n            previousYieldAllowed = state.yieldAllowed;\n            state.yieldAllowed = false;\n            superClass = parseLeftHandSideExpressionAllowCall();\n            if (match('<')) {\n                superTypeParameters = parseTypeParameterInstantiation();\n            }\n            state.yieldAllowed = previousYieldAllowed;\n        }\n\n        if (strict ? matchKeyword('implements') : matchContextualKeyword('implements')) {\n            implemented = parseClassImplements();\n        }\n\n        return markerApply(marker, delegate.createClassDeclaration(\n            id,\n            superClass,\n            parseClassBody(),\n            typeParameters,\n            superTypeParameters,\n            implemented\n        ));\n    }\n\n    // 15 Program\n\n    function parseSourceElement() {\n        var token;\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            case 'export':\n                throwErrorTolerant({}, Messages.IllegalExportDeclaration);\n                return parseExportDeclaration();\n            case 'import':\n                throwErrorTolerant({}, Messages.IllegalImportDeclaration);\n                return parseImportDeclaration();\n            case 'interface':\n                if (lookahead2().type === Token.Identifier) {\n                    return parseInterface();\n                }\n                return parseStatement();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (matchContextualKeyword('type')\n                && lookahead2().type === Token.Identifier) {\n            return parseTypeAlias();\n        }\n\n        if (matchContextualKeyword('interface')\n                && lookahead2().type === Token.Identifier) {\n            return parseInterface();\n        }\n\n        if (matchContextualKeyword('declare')) {\n            token = lookahead2();\n            if (token.type === Token.Keyword) {\n                switch (token.value) {\n                case 'class':\n                    return parseDeclareClass();\n                case 'function':\n                    return parseDeclareFunction();\n                case 'var':\n                    return parseDeclareVariable();\n                }\n            } else if (token.type === Token.Identifier\n                    && token.value === 'module') {\n                return parseDeclareModule();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseProgramElement() {\n        var isModule = extra.sourceType === 'module' || extra.sourceType === 'nonStrictModule';\n\n        if (isModule && lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'export':\n                return parseExportDeclaration();\n            case 'import':\n                return parseImportDeclaration();\n            }\n        }\n\n        return parseSourceElement();\n    }\n\n    function parseProgramElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseProgramElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.range[0] + 1, token.range[1] - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseProgramElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, marker = markerCreate();\n        strict = extra.sourceType === 'module';\n        peek();\n        body = parseProgramElements();\n        return markerApply(marker, delegate.createProgram(body));\n    }\n\n    // 16 JSX\n\n    XHTMLEntities = {\n        quot: '\\u0022',\n        amp: '&',\n        apos: '\\u0027',\n        lt: '<',\n        gt: '>',\n        nbsp: '\\u00A0',\n        iexcl: '\\u00A1',\n        cent: '\\u00A2',\n        pound: '\\u00A3',\n        curren: '\\u00A4',\n        yen: '\\u00A5',\n        brvbar: '\\u00A6',\n        sect: '\\u00A7',\n        uml: '\\u00A8',\n        copy: '\\u00A9',\n        ordf: '\\u00AA',\n        laquo: '\\u00AB',\n        not: '\\u00AC',\n        shy: '\\u00AD',\n        reg: '\\u00AE',\n        macr: '\\u00AF',\n        deg: '\\u00B0',\n        plusmn: '\\u00B1',\n        sup2: '\\u00B2',\n        sup3: '\\u00B3',\n        acute: '\\u00B4',\n        micro: '\\u00B5',\n        para: '\\u00B6',\n        middot: '\\u00B7',\n        cedil: '\\u00B8',\n        sup1: '\\u00B9',\n        ordm: '\\u00BA',\n        raquo: '\\u00BB',\n        frac14: '\\u00BC',\n        frac12: '\\u00BD',\n        frac34: '\\u00BE',\n        iquest: '\\u00BF',\n        Agrave: '\\u00C0',\n        Aacute: '\\u00C1',\n        Acirc: '\\u00C2',\n        Atilde: '\\u00C3',\n        Auml: '\\u00C4',\n        Aring: '\\u00C5',\n        AElig: '\\u00C6',\n        Ccedil: '\\u00C7',\n        Egrave: '\\u00C8',\n        Eacute: '\\u00C9',\n        Ecirc: '\\u00CA',\n        Euml: '\\u00CB',\n        Igrave: '\\u00CC',\n        Iacute: '\\u00CD',\n        Icirc: '\\u00CE',\n        Iuml: '\\u00CF',\n        ETH: '\\u00D0',\n        Ntilde: '\\u00D1',\n        Ograve: '\\u00D2',\n        Oacute: '\\u00D3',\n        Ocirc: '\\u00D4',\n        Otilde: '\\u00D5',\n        Ouml: '\\u00D6',\n        times: '\\u00D7',\n        Oslash: '\\u00D8',\n        Ugrave: '\\u00D9',\n        Uacute: '\\u00DA',\n        Ucirc: '\\u00DB',\n        Uuml: '\\u00DC',\n        Yacute: '\\u00DD',\n        THORN: '\\u00DE',\n        szlig: '\\u00DF',\n        agrave: '\\u00E0',\n        aacute: '\\u00E1',\n        acirc: '\\u00E2',\n        atilde: '\\u00E3',\n        auml: '\\u00E4',\n        aring: '\\u00E5',\n        aelig: '\\u00E6',\n        ccedil: '\\u00E7',\n        egrave: '\\u00E8',\n        eacute: '\\u00E9',\n        ecirc: '\\u00EA',\n        euml: '\\u00EB',\n        igrave: '\\u00EC',\n        iacute: '\\u00ED',\n        icirc: '\\u00EE',\n        iuml: '\\u00EF',\n        eth: '\\u00F0',\n        ntilde: '\\u00F1',\n        ograve: '\\u00F2',\n        oacute: '\\u00F3',\n        ocirc: '\\u00F4',\n        otilde: '\\u00F5',\n        ouml: '\\u00F6',\n        divide: '\\u00F7',\n        oslash: '\\u00F8',\n        ugrave: '\\u00F9',\n        uacute: '\\u00FA',\n        ucirc: '\\u00FB',\n        uuml: '\\u00FC',\n        yacute: '\\u00FD',\n        thorn: '\\u00FE',\n        yuml: '\\u00FF',\n        OElig: '\\u0152',\n        oelig: '\\u0153',\n        Scaron: '\\u0160',\n        scaron: '\\u0161',\n        Yuml: '\\u0178',\n        fnof: '\\u0192',\n        circ: '\\u02C6',\n        tilde: '\\u02DC',\n        Alpha: '\\u0391',\n        Beta: '\\u0392',\n        Gamma: '\\u0393',\n        Delta: '\\u0394',\n        Epsilon: '\\u0395',\n        Zeta: '\\u0396',\n        Eta: '\\u0397',\n        Theta: '\\u0398',\n        Iota: '\\u0399',\n        Kappa: '\\u039A',\n        Lambda: '\\u039B',\n        Mu: '\\u039C',\n        Nu: '\\u039D',\n        Xi: '\\u039E',\n        Omicron: '\\u039F',\n        Pi: '\\u03A0',\n        Rho: '\\u03A1',\n        Sigma: '\\u03A3',\n        Tau: '\\u03A4',\n        Upsilon: '\\u03A5',\n        Phi: '\\u03A6',\n        Chi: '\\u03A7',\n        Psi: '\\u03A8',\n        Omega: '\\u03A9',\n        alpha: '\\u03B1',\n        beta: '\\u03B2',\n        gamma: '\\u03B3',\n        delta: '\\u03B4',\n        epsilon: '\\u03B5',\n        zeta: '\\u03B6',\n        eta: '\\u03B7',\n        theta: '\\u03B8',\n        iota: '\\u03B9',\n        kappa: '\\u03BA',\n        lambda: '\\u03BB',\n        mu: '\\u03BC',\n        nu: '\\u03BD',\n        xi: '\\u03BE',\n        omicron: '\\u03BF',\n        pi: '\\u03C0',\n        rho: '\\u03C1',\n        sigmaf: '\\u03C2',\n        sigma: '\\u03C3',\n        tau: '\\u03C4',\n        upsilon: '\\u03C5',\n        phi: '\\u03C6',\n        chi: '\\u03C7',\n        psi: '\\u03C8',\n        omega: '\\u03C9',\n        thetasym: '\\u03D1',\n        upsih: '\\u03D2',\n        piv: '\\u03D6',\n        ensp: '\\u2002',\n        emsp: '\\u2003',\n        thinsp: '\\u2009',\n        zwnj: '\\u200C',\n        zwj: '\\u200D',\n        lrm: '\\u200E',\n        rlm: '\\u200F',\n        ndash: '\\u2013',\n        mdash: '\\u2014',\n        lsquo: '\\u2018',\n        rsquo: '\\u2019',\n        sbquo: '\\u201A',\n        ldquo: '\\u201C',\n        rdquo: '\\u201D',\n        bdquo: '\\u201E',\n        dagger: '\\u2020',\n        Dagger: '\\u2021',\n        bull: '\\u2022',\n        hellip: '\\u2026',\n        permil: '\\u2030',\n        prime: '\\u2032',\n        Prime: '\\u2033',\n        lsaquo: '\\u2039',\n        rsaquo: '\\u203A',\n        oline: '\\u203E',\n        frasl: '\\u2044',\n        euro: '\\u20AC',\n        image: '\\u2111',\n        weierp: '\\u2118',\n        real: '\\u211C',\n        trade: '\\u2122',\n        alefsym: '\\u2135',\n        larr: '\\u2190',\n        uarr: '\\u2191',\n        rarr: '\\u2192',\n        darr: '\\u2193',\n        harr: '\\u2194',\n        crarr: '\\u21B5',\n        lArr: '\\u21D0',\n        uArr: '\\u21D1',\n        rArr: '\\u21D2',\n        dArr: '\\u21D3',\n        hArr: '\\u21D4',\n        forall: '\\u2200',\n        part: '\\u2202',\n        exist: '\\u2203',\n        empty: '\\u2205',\n        nabla: '\\u2207',\n        isin: '\\u2208',\n        notin: '\\u2209',\n        ni: '\\u220B',\n        prod: '\\u220F',\n        sum: '\\u2211',\n        minus: '\\u2212',\n        lowast: '\\u2217',\n        radic: '\\u221A',\n        prop: '\\u221D',\n        infin: '\\u221E',\n        ang: '\\u2220',\n        and: '\\u2227',\n        or: '\\u2228',\n        cap: '\\u2229',\n        cup: '\\u222A',\n        'int': '\\u222B',\n        there4: '\\u2234',\n        sim: '\\u223C',\n        cong: '\\u2245',\n        asymp: '\\u2248',\n        ne: '\\u2260',\n        equiv: '\\u2261',\n        le: '\\u2264',\n        ge: '\\u2265',\n        sub: '\\u2282',\n        sup: '\\u2283',\n        nsub: '\\u2284',\n        sube: '\\u2286',\n        supe: '\\u2287',\n        oplus: '\\u2295',\n        otimes: '\\u2297',\n        perp: '\\u22A5',\n        sdot: '\\u22C5',\n        lceil: '\\u2308',\n        rceil: '\\u2309',\n        lfloor: '\\u230A',\n        rfloor: '\\u230B',\n        lang: '\\u2329',\n        rang: '\\u232A',\n        loz: '\\u25CA',\n        spades: '\\u2660',\n        clubs: '\\u2663',\n        hearts: '\\u2665',\n        diams: '\\u2666'\n    };\n\n    function getQualifiedJSXName(object) {\n        if (object.type === Syntax.JSXIdentifier) {\n            return object.name;\n        }\n        if (object.type === Syntax.JSXNamespacedName) {\n            return object.namespace.name + ':' + object.name.name;\n        }\n        /* istanbul ignore else */\n        if (object.type === Syntax.JSXMemberExpression) {\n            return (\n                getQualifiedJSXName(object.object) + '.' +\n                getQualifiedJSXName(object.property)\n            );\n        }\n        /* istanbul ignore next */\n        throwUnexpected(object);\n    }\n\n    function isJSXIdentifierStart(ch) {\n        // exclude backslash (\\)\n        return (ch !== 92) && isIdentifierStart(ch);\n    }\n\n    function isJSXIdentifierPart(ch) {\n        // exclude backslash (\\) and add hyphen (-)\n        return (ch !== 92) && (ch === 45 || isIdentifierPart(ch));\n    }\n\n    function scanJSXIdentifier() {\n        var ch, start, value = '';\n\n        start = index;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isJSXIdentifierPart(ch)) {\n                break;\n            }\n            value += source[index++];\n        }\n\n        return {\n            type: Token.JSXIdentifier,\n            value: value,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanJSXEntity() {\n        var ch, str = '', start = index, count = 0, code;\n        ch = source[index];\n        assert(ch === '&', 'Entity must start with an ampersand');\n        index++;\n        while (index < length && count++ < 10) {\n            ch = source[index++];\n            if (ch === ';') {\n                break;\n            }\n            str += ch;\n        }\n\n        // Well-formed entity (ending was found).\n        if (ch === ';') {\n            // Numeric entity.\n            if (str[0] === '#') {\n                if (str[1] === 'x') {\n                    code = +('0' + str.substr(1));\n                } else {\n                    // Removing leading zeros in order to avoid treating as octal in old browsers.\n                    code = +str.substr(1).replace(Regex.LeadingZeros, '');\n                }\n\n                if (!isNaN(code)) {\n                    return String.fromCharCode(code);\n                }\n            /* istanbul ignore else */\n            } else if (XHTMLEntities[str]) {\n                return XHTMLEntities[str];\n            }\n        }\n\n        // Treat non-entity sequences as regular text.\n        index = start + 1;\n        return '&';\n    }\n\n    function scanJSXText(stopChars) {\n        var ch, str = '', start;\n        start = index;\n        while (index < length) {\n            ch = source[index];\n            if (stopChars.indexOf(ch) !== -1) {\n                break;\n            }\n            if (ch === '&') {\n                str += scanJSXEntity();\n            } else {\n                index++;\n                if (ch === '\\r' && source[index] === '\\n') {\n                    str += ch;\n                    ch = source[index];\n                    index++;\n                }\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    ++lineNumber;\n                    lineStart = index;\n                }\n                str += ch;\n            }\n        }\n        return {\n            type: Token.JSXText,\n            value: str,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanJSXStringLiteral() {\n        var innerToken, quote, start;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        innerToken = scanJSXText([quote]);\n\n        if (quote !== source[index]) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        ++index;\n\n        innerToken.range = [start, index];\n\n        return innerToken;\n    }\n\n    /**\n     * Between JSX opening and closing tags (e.g. <foo>HERE</foo>), anything that\n     * is not another JSX tag and is not an expression wrapped by {} is text.\n     */\n    function advanceJSXChild() {\n        var ch = source.charCodeAt(index);\n\n        // '<' 60, '>' 62, '{' 123, '}' 125\n        if (ch !== 60 && ch !== 62 && ch !== 123 && ch !== 125) {\n            return scanJSXText(['<', '>', '{', '}']);\n        }\n\n        return scanPunctuator();\n    }\n\n    function parseJSXIdentifier() {\n        var token, marker = markerCreate();\n\n        if (lookahead.type !== Token.JSXIdentifier) {\n            throwUnexpected(lookahead);\n        }\n\n        token = lex();\n        return markerApply(marker, delegate.createJSXIdentifier(token.value));\n    }\n\n    function parseJSXNamespacedName() {\n        var namespace, name, marker = markerCreate();\n\n        namespace = parseJSXIdentifier();\n        expect(':');\n        name = parseJSXIdentifier();\n\n        return markerApply(marker, delegate.createJSXNamespacedName(namespace, name));\n    }\n\n    function parseJSXMemberExpression() {\n        var marker = markerCreate(),\n            expr = parseJSXIdentifier();\n\n        while (match('.')) {\n            lex();\n            expr = markerApply(marker, delegate.createJSXMemberExpression(expr, parseJSXIdentifier()));\n        }\n\n        return expr;\n    }\n\n    function parseJSXElementName() {\n        if (lookahead2().value === ':') {\n            return parseJSXNamespacedName();\n        }\n        if (lookahead2().value === '.') {\n            return parseJSXMemberExpression();\n        }\n\n        return parseJSXIdentifier();\n    }\n\n    function parseJSXAttributeName() {\n        if (lookahead2().value === ':') {\n            return parseJSXNamespacedName();\n        }\n\n        return parseJSXIdentifier();\n    }\n\n    function parseJSXAttributeValue() {\n        var value, marker;\n        if (match('{')) {\n            value = parseJSXExpressionContainer();\n            if (value.expression.type === Syntax.JSXEmptyExpression) {\n                throwError(\n                    value,\n                    'JSX attributes must only be assigned a non-empty ' +\n                        'expression'\n                );\n            }\n        } else if (match('<')) {\n            value = parseJSXElement();\n        } else if (lookahead.type === Token.JSXText) {\n            marker = markerCreate();\n            value = markerApply(marker, delegate.createLiteral(lex()));\n        } else {\n            throwError({}, Messages.InvalidJSXAttributeValue);\n        }\n        return value;\n    }\n\n    function parseJSXEmptyExpression() {\n        var ch, marker = markerCreatePreserveWhitespace();\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 125) {\n                break;\n            } else if (isLineTerminator(ch)) {\n                if (ch === 13 && source.charCodeAt(index + 1) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n            }\n            ++index;\n        }\n        return markerApply(marker, delegate.createJSXEmptyExpression());\n    }\n\n    function parseJSXExpressionContainer() {\n        var expression, origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = false;\n\n        expect('{');\n\n        if (match('}')) {\n            expression = parseJSXEmptyExpression();\n        } else {\n            expression = parseExpression();\n        }\n\n        state.inJSXChild = origInJSXChild;\n        state.inJSXTag = origInJSXTag;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createJSXExpressionContainer(expression));\n    }\n\n    function parseJSXSpreadAttribute() {\n        var expression, origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = false;\n\n        expect('{');\n        expect('...');\n\n        expression = parseAssignmentExpression();\n\n        state.inJSXChild = origInJSXChild;\n        state.inJSXTag = origInJSXTag;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createJSXSpreadAttribute(expression));\n    }\n\n    function parseJSXAttribute() {\n        var name, marker;\n\n        if (match('{')) {\n            return parseJSXSpreadAttribute();\n        }\n\n        marker = markerCreate();\n\n        name = parseJSXAttributeName();\n\n        // HTML empty attribute\n        if (match('=')) {\n            lex();\n            return markerApply(marker, delegate.createJSXAttribute(name, parseJSXAttributeValue()));\n        }\n\n        return markerApply(marker, delegate.createJSXAttribute(name));\n    }\n\n    function parseJSXChild() {\n        var token, marker;\n        if (match('{')) {\n            token = parseJSXExpressionContainer();\n        } else if (lookahead.type === Token.JSXText) {\n            marker = markerCreatePreserveWhitespace();\n            token = markerApply(marker, delegate.createLiteral(lex()));\n        } else if (match('<')) {\n            token = parseJSXElement();\n        } else {\n            throwUnexpected(lookahead);\n        }\n        return token;\n    }\n\n    function parseJSXClosingElement() {\n        var name, origInJSXChild, origInJSXTag, marker = markerCreate();\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = true;\n        expect('<');\n        expect('/');\n        name = parseJSXElementName();\n        // Because advance() (called by lex() called by expect()) expects there\n        // to be a valid token after >, it needs to know whether to look for a\n        // standard JS token or an JSX text node\n        state.inJSXChild = origInJSXChild;\n        state.inJSXTag = origInJSXTag;\n        expect('>');\n        return markerApply(marker, delegate.createJSXClosingElement(name));\n    }\n\n    function parseJSXOpeningElement() {\n        var name, attributes = [], selfClosing = false, origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = true;\n\n        expect('<');\n\n        name = parseJSXElementName();\n\n        while (index < length &&\n                lookahead.value !== '/' &&\n                lookahead.value !== '>') {\n            attributes.push(parseJSXAttribute());\n        }\n\n        state.inJSXTag = origInJSXTag;\n\n        if (lookahead.value === '/') {\n            expect('/');\n            // Because advance() (called by lex() called by expect()) expects\n            // there to be a valid token after >, it needs to know whether to\n            // look for a standard JS token or an JSX text node\n            state.inJSXChild = origInJSXChild;\n            expect('>');\n            selfClosing = true;\n        } else {\n            state.inJSXChild = true;\n            expect('>');\n        }\n        return markerApply(marker, delegate.createJSXOpeningElement(name, attributes, selfClosing));\n    }\n\n    function parseJSXElement() {\n        var openingElement, closingElement = null, children = [], origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        openingElement = parseJSXOpeningElement();\n\n        if (!openingElement.selfClosing) {\n            while (index < length) {\n                state.inJSXChild = false; // Call lookahead2() with inJSXChild = false because </ should not be considered in the child\n                if (lookahead.value === '<' && lookahead2().value === '/') {\n                    break;\n                }\n                state.inJSXChild = true;\n                children.push(parseJSXChild());\n            }\n            state.inJSXChild = origInJSXChild;\n            state.inJSXTag = origInJSXTag;\n            closingElement = parseJSXClosingElement();\n            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n                throwError({}, Messages.ExpectedJSXClosingTag, getQualifiedJSXName(openingElement.name));\n            }\n        }\n\n        // When (erroneously) writing two adjacent tags like\n        //\n        //     var x = <div>one</div><div>two</div>;\n        //\n        // the default error message is a bit incomprehensible. Since it's\n        // rarely (never?) useful to write a less-than sign after an JSX\n        // element, we disallow it here in the parser in order to provide a\n        // better error message. (In the rare case that the less-than operator\n        // was intended, the left tag can be wrapped in parentheses.)\n        if (!origInJSXChild && match('<')) {\n            throwError(lookahead, Messages.AdjacentJSXElements);\n        }\n\n        return markerApply(marker, delegate.createJSXElement(openingElement, closingElement, children));\n    }\n\n    function parseTypeAlias() {\n        var id, marker = markerCreate(), typeParameters = null, right;\n        expectContextualKeyword('type');\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n        expect('=');\n        right = parseType();\n        consumeSemicolon();\n        return markerApply(marker, delegate.createTypeAlias(id, typeParameters, right));\n    }\n\n    function parseInterfaceExtends() {\n        var marker = markerCreate(), id, typeParameters = null;\n\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterInstantiation();\n        }\n\n        return markerApply(marker, delegate.createInterfaceExtends(\n            id,\n            typeParameters\n        ));\n    }\n\n    function parseInterfaceish(marker, allowStatic) {\n        var body, bodyMarker, extended = [], id,\n            typeParameters = null;\n\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n\n            while (index < length) {\n                extended.push(parseInterfaceExtends());\n                if (!match(',')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        bodyMarker = markerCreate();\n        body = markerApply(bodyMarker, parseObjectType(allowStatic));\n\n        return markerApply(marker, delegate.createInterface(\n            id,\n            typeParameters,\n            body,\n            extended\n        ));\n    }\n\n    function parseInterface() {\n        var marker = markerCreate();\n\n        if (strict) {\n            expectKeyword('interface');\n        } else {\n            expectContextualKeyword('interface');\n        }\n\n        return parseInterfaceish(marker, /* allowStatic */false);\n    }\n\n    function parseDeclareClass() {\n        var marker = markerCreate(), ret;\n        expectContextualKeyword('declare');\n        expectKeyword('class');\n\n        ret = parseInterfaceish(marker, /* allowStatic */true);\n        ret.type = Syntax.DeclareClass;\n        return ret;\n    }\n\n    function parseDeclareFunction() {\n        var id, idMarker,\n            marker = markerCreate(), params, returnType, rest, tmp,\n            typeParameters = null, value, valueMarker;\n\n        expectContextualKeyword('declare');\n        expectKeyword('function');\n        idMarker = markerCreate();\n        id = parseVariableIdentifier();\n\n        valueMarker = markerCreate();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n        expect('(');\n        tmp = parseFunctionTypeParams();\n        params = tmp.params;\n        rest = tmp.rest;\n        expect(')');\n\n        expect(':');\n        returnType = parseType();\n\n        value = markerApply(valueMarker, delegate.createFunctionTypeAnnotation(\n            params,\n            returnType,\n            rest,\n            typeParameters\n        ));\n\n        id.typeAnnotation = markerApply(valueMarker, delegate.createTypeAnnotation(\n            value\n        ));\n        markerApply(idMarker, id);\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDeclareFunction(\n            id\n        ));\n    }\n\n    function parseDeclareVariable() {\n        var id, marker = markerCreate();\n        expectContextualKeyword('declare');\n        expectKeyword('var');\n        id = parseTypeAnnotatableIdentifier();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDeclareVariable(\n            id\n        ));\n    }\n\n    function parseDeclareModule() {\n        var body = [], bodyMarker, id, idMarker, marker = markerCreate(), token;\n        expectContextualKeyword('declare');\n        expectContextualKeyword('module');\n\n        if (lookahead.type === Token.StringLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            idMarker = markerCreate();\n            id = markerApply(idMarker, delegate.createLiteral(lex()));\n        } else {\n            id = parseVariableIdentifier();\n        }\n\n        bodyMarker = markerCreate();\n        expect('{');\n        while (index < length && !match('}')) {\n            token = lookahead2();\n            switch (token.value) {\n            case 'class':\n                body.push(parseDeclareClass());\n                break;\n            case 'function':\n                body.push(parseDeclareFunction());\n                break;\n            case 'var':\n                body.push(parseDeclareVariable());\n                break;\n            default:\n                throwUnexpected(lookahead);\n            }\n        }\n        expect('}');\n\n        return markerApply(marker, delegate.createDeclareModule(\n            id,\n            markerApply(bodyMarker, delegate.createBlockStatement(body))\n        ));\n    }\n\n    function collectToken() {\n        var loc, token, range, value, entry;\n\n        /* istanbul ignore else */\n        if (!state.inJSXChild) {\n            skipComment();\n        }\n\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = extra.advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            range = [token.range[0], token.range[1]];\n            value = source.slice(token.range[0], token.range[1]);\n            entry = {\n                type: TokenName[token.type],\n                value: value,\n                range: range,\n                loc: loc\n            };\n            if (token.regex) {\n                entry.regex = {\n                    pattern: token.regex.pattern,\n                    flags: token.regex.flags\n                };\n            }\n            extra.tokens.push(entry);\n        }\n\n        return token;\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = extra.scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (!extra.tokenize) {\n            /* istanbul ignore next */\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                regex: regex.regex,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (entry.regex) {\n                token.regex = {\n                    pattern: entry.regex.pattern,\n                    flags: entry.regex.flags\n                };\n            }\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function patch() {\n        if (typeof extra.tokens !== 'undefined') {\n            extra.advance = advance;\n            extra.scanRegExp = scanRegExp;\n\n            advance = collectToken;\n            scanRegExp = collectRegex;\n        }\n    }\n\n    function unpatch() {\n        if (typeof extra.scanRegExp === 'function') {\n            advance = extra.advance;\n            scanRegExp = extra.scanRegExp;\n        }\n    }\n\n    // This is used to modify the delegate.\n\n    function extend(object, properties) {\n        var entry, result = {};\n\n        for (entry in object) {\n            /* istanbul ignore else */\n            if (object.hasOwnProperty(entry)) {\n                result[entry] = object[entry];\n            }\n        }\n\n        for (entry in properties) {\n            /* istanbul ignore else */\n            if (properties.hasOwnProperty(entry)) {\n                result[entry] = properties[entry];\n            }\n        }\n\n        return result;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowKeyword: true,\n            allowIn: true,\n            labelSet: new StringMap(),\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1,\n            curlyStack: [],\n            curlyLastIndex: 0\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        patch();\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            unpatch();\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowKeyword: false,\n            allowIn: true,\n            labelSet: new StringMap(),\n            parenthesizedCount: 0,\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            inJSXChild: false,\n            inJSXTag: false,\n            inType: false,\n            lastCommentStart: -1,\n            yieldAllowed: false,\n            awaitAllowed: false,\n            curlyPosition: 0,\n            curlyStack: [],\n            curlyLastIndex: 0\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                delegate = extend(delegate, {\n                    'postProcess': function (node) {\n                        node.loc.source = toString(options.source);\n                        return node;\n                    }\n                });\n            }\n\n            extra.sourceType = options.sourceType;\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        patch();\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            unpatch();\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '15001.1.0-dev-harmony-fb';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n   /* istanbul ignore next */\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar docblockRe = /^\\s*(\\/\\*\\*(.|\\r?\\n)*?\\*\\/)/;\nvar ltrimRe = /^\\s*/;\n/**\n * @param {String} contents\n * @return {String}\n */\nfunction extract(contents) {\n  var match = contents.match(docblockRe);\n  if (match) {\n    return match[0].replace(ltrimRe, '') || '';\n  }\n  return '';\n}\n\n\nvar commentStartRe = /^\\/\\*\\*?/;\nvar commentEndRe = /\\*+\\/$/;\nvar wsRe = /[\\t ]+/g;\nvar stringStartRe = /(\\r?\\n|^) *\\*/g;\nvar multilineRe = /(?:^|\\r?\\n) *(@[^\\r\\n]*?) *\\r?\\n *([^@\\r\\n\\s][^@\\r\\n]+?) *\\r?\\n/g;\nvar propertyRe = /(?:^|\\r?\\n) *@(\\S+) *([^\\r\\n]*)/g;\n\n/**\n * @param {String} contents\n * @return {Array}\n */\nfunction parse(docblock) {\n  docblock = docblock\n    .replace(commentStartRe, '')\n    .replace(commentEndRe, '')\n    .replace(wsRe, ' ')\n    .replace(stringStartRe, '$1');\n\n  // Normalize multi-line directives\n  var prev = '';\n  while (prev != docblock) {\n    prev = docblock;\n    docblock = docblock.replace(multilineRe, \"\\n$1 $2\\n\");\n  }\n  docblock = docblock.trim();\n\n  var result = [];\n  var match;\n  while (match = propertyRe.exec(docblock)) {\n    result.push([match[1], match[2]]);\n  }\n\n  return result;\n}\n\n/**\n * Same as parse but returns an object of prop: value instead of array of paris\n * If a property appers more than once the last one will be returned\n *\n * @param {String} contents\n * @return {Object}\n */\nfunction parseAsObject(docblock) {\n  var pairs = parse(docblock);\n  var result = {};\n  for (var i = 0; i < pairs.length; i++) {\n    result[pairs[i][0]] = pairs[i][1];\n  }\n  return result;\n}\n\n\nexports.extract = extract;\nexports.parse = parse;\nexports.parseAsObject = parseAsObject;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n/*jslint node: true*/\nvar Syntax = require('esprima-fb').Syntax;\nvar leadingIndentRegexp = /(^|\\n)( {2}|\\t)/g;\nvar nonWhiteRegexp = /(\\S)/g;\n\n/**\n * A `state` object represents the state of the parser. It has \"local\" and\n * \"global\" parts. Global contains parser position, source, etc. Local contains\n * scope based properties like current class name. State should contain all the\n * info required for transformation. It's the only mandatory object that is\n * being passed to every function in transform chain.\n *\n * @param  {string} source\n * @param  {object} transformOptions\n * @return {object}\n */\nfunction createState(source, rootNode, transformOptions) {\n  return {\n    /**\n     * A tree representing the current local scope (and its lexical scope chain)\n     * Useful for tracking identifiers from parent scopes, etc.\n     * @type {Object}\n     */\n    localScope: {\n      parentNode: rootNode,\n      parentScope: null,\n      identifiers: {},\n      tempVarIndex: 0,\n      tempVars: []\n    },\n    /**\n     * The name (and, if applicable, expression) of the super class\n     * @type {Object}\n     */\n    superClass: null,\n    /**\n     * The namespace to use when munging identifiers\n     * @type {String}\n     */\n    mungeNamespace: '',\n    /**\n     * Ref to the node for the current MethodDefinition\n     * @type {Object}\n     */\n    methodNode: null,\n    /**\n     * Ref to the node for the FunctionExpression of the enclosing\n     * MethodDefinition\n     * @type {Object}\n     */\n    methodFuncNode: null,\n    /**\n     * Name of the enclosing class\n     * @type {String}\n     */\n    className: null,\n    /**\n     * Whether we're currently within a `strict` scope\n     * @type {Bool}\n     */\n    scopeIsStrict: null,\n    /**\n     * Indentation offset\n     * @type {Number}\n     */\n    indentBy: 0,\n    /**\n     * Global state (not affected by updateState)\n     * @type {Object}\n     */\n    g: {\n      /**\n       * A set of general options that transformations can consider while doing\n       * a transformation:\n       *\n       * - minify\n       *   Specifies that transformation steps should do their best to minify\n       *   the output source when possible. This is useful for places where\n       *   minification optimizations are possible with higher-level context\n       *   info than what jsxmin can provide.\n       *\n       *   For example, the ES6 class transform will minify munged private\n       *   variables if this flag is set.\n       */\n      opts: transformOptions,\n      /**\n       * Current position in the source code\n       * @type {Number}\n       */\n      position: 0,\n      /**\n       * Auxiliary data to be returned by transforms\n       * @type {Object}\n       */\n      extra: {},\n      /**\n       * Buffer containing the result\n       * @type {String}\n       */\n      buffer: '',\n      /**\n       * Source that is being transformed\n       * @type {String}\n       */\n      source: source,\n\n      /**\n       * Cached parsed docblock (see getDocblock)\n       * @type {object}\n       */\n      docblock: null,\n\n      /**\n       * Whether the thing was used\n       * @type {Boolean}\n       */\n      tagNamespaceUsed: false,\n\n      /**\n       * If using bolt xjs transformation\n       * @type {Boolean}\n       */\n      isBolt: undefined,\n\n      /**\n       * Whether to record source map (expensive) or not\n       * @type {SourceMapGenerator|null}\n       */\n      sourceMap: null,\n\n      /**\n       * Filename of the file being processed. Will be returned as a source\n       * attribute in the source map\n       */\n      sourceMapFilename: 'source.js',\n\n      /**\n       * Only when source map is used: last line in the source for which\n       * source map was generated\n       * @type {Number}\n       */\n      sourceLine: 1,\n\n      /**\n       * Only when source map is used: last line in the buffer for which\n       * source map was generated\n       * @type {Number}\n       */\n      bufferLine: 1,\n\n      /**\n       * The top-level Program AST for the original file.\n       */\n      originalProgramAST: null,\n\n      sourceColumn: 0,\n      bufferColumn: 0\n    }\n  };\n}\n\n/**\n * Updates a copy of a given state with \"update\" and returns an updated state.\n *\n * @param  {object} state\n * @param  {object} update\n * @return {object}\n */\nfunction updateState(state, update) {\n  var ret = Object.create(state);\n  Object.keys(update).forEach(function(updatedKey) {\n    ret[updatedKey] = update[updatedKey];\n  });\n  return ret;\n}\n\n/**\n * Given a state fill the resulting buffer from the original source up to\n * the end\n *\n * @param {number} end\n * @param {object} state\n * @param {?function} contentTransformer Optional callback to transform newly\n *                                       added content.\n */\nfunction catchup(end, state, contentTransformer) {\n  if (end < state.g.position) {\n    // cannot move backwards\n    return;\n  }\n  var source = state.g.source.substring(state.g.position, end);\n  var transformed = updateIndent(source, state);\n  if (state.g.sourceMap && transformed) {\n    // record where we are\n    state.g.sourceMap.addMapping({\n      generated: { line: state.g.bufferLine, column: state.g.bufferColumn },\n      original: { line: state.g.sourceLine, column: state.g.sourceColumn },\n      source: state.g.sourceMapFilename\n    });\n\n    // record line breaks in transformed source\n    var sourceLines = source.split('\\n');\n    var transformedLines = transformed.split('\\n');\n    // Add line break mappings between last known mapping and the end of the\n    // added piece. So for the code piece\n    //  (foo, bar);\n    // > var x = 2;\n    // > var b = 3;\n    //   var c =\n    // only add lines marked with \">\": 2, 3.\n    for (var i = 1; i < sourceLines.length - 1; i++) {\n      state.g.sourceMap.addMapping({\n        generated: { line: state.g.bufferLine, column: 0 },\n        original: { line: state.g.sourceLine, column: 0 },\n        source: state.g.sourceMapFilename\n      });\n      state.g.sourceLine++;\n      state.g.bufferLine++;\n    }\n    // offset for the last piece\n    if (sourceLines.length > 1) {\n      state.g.sourceLine++;\n      state.g.bufferLine++;\n      state.g.sourceColumn = 0;\n      state.g.bufferColumn = 0;\n    }\n    state.g.sourceColumn += sourceLines[sourceLines.length - 1].length;\n    state.g.bufferColumn +=\n      transformedLines[transformedLines.length - 1].length;\n  }\n  state.g.buffer +=\n    contentTransformer ? contentTransformer(transformed) : transformed;\n  state.g.position = end;\n}\n\n/**\n * Returns original source for an AST node.\n * @param {object} node\n * @param {object} state\n * @return {string}\n */\nfunction getNodeSourceText(node, state) {\n  return state.g.source.substring(node.range[0], node.range[1]);\n}\n\nfunction _replaceNonWhite(value) {\n  return value.replace(nonWhiteRegexp, ' ');\n}\n\n/**\n * Removes all non-whitespace characters\n */\nfunction _stripNonWhite(value) {\n  return value.replace(nonWhiteRegexp, '');\n}\n\n/**\n * Finds the position of the next instance of the specified syntactic char in\n * the pending source.\n *\n * NOTE: This will skip instances of the specified char if they sit inside a\n *       comment body.\n *\n * NOTE: This function also assumes that the buffer's current position is not\n *       already within a comment or a string. This is rarely the case since all\n *       of the buffer-advancement utility methods tend to be used on syntactic\n *       nodes' range values -- but it's a small gotcha that's worth mentioning.\n */\nfunction getNextSyntacticCharOffset(char, state) {\n  var pendingSource = state.g.source.substring(state.g.position);\n  var pendingSourceLines = pendingSource.split('\\n');\n\n  var charOffset = 0;\n  var line;\n  var withinBlockComment = false;\n  var withinString = false;\n  lineLoop: while ((line = pendingSourceLines.shift()) !== undefined) {\n    var lineEndPos = charOffset + line.length;\n    charLoop: for (; charOffset < lineEndPos; charOffset++) {\n      var currChar = pendingSource[charOffset];\n      if (currChar === '\"' || currChar === '\\'') {\n        withinString = !withinString;\n        continue charLoop;\n      } else if (withinString) {\n        continue charLoop;\n      } else if (charOffset + 1 < lineEndPos) {\n        var nextTwoChars = currChar + line[charOffset + 1];\n        if (nextTwoChars === '//') {\n          charOffset = lineEndPos + 1;\n          continue lineLoop;\n        } else if (nextTwoChars === '/*') {\n          withinBlockComment = true;\n          charOffset += 1;\n          continue charLoop;\n        } else if (nextTwoChars === '*/') {\n          withinBlockComment = false;\n          charOffset += 1;\n          continue charLoop;\n        }\n      }\n\n      if (!withinBlockComment && currChar === char) {\n        return charOffset + state.g.position;\n      }\n    }\n\n    // Account for '\\n'\n    charOffset++;\n    withinString = false;\n  }\n\n  throw new Error('`' + char + '` not found!');\n}\n\n/**\n * Catches up as `catchup` but replaces non-whitespace chars with spaces.\n */\nfunction catchupWhiteOut(end, state) {\n  catchup(end, state, _replaceNonWhite);\n}\n\n/**\n * Catches up as `catchup` but removes all non-whitespace characters.\n */\nfunction catchupWhiteSpace(end, state) {\n  catchup(end, state, _stripNonWhite);\n}\n\n/**\n * Removes all non-newline characters\n */\nvar reNonNewline = /[^\\n]/g;\nfunction stripNonNewline(value) {\n  return value.replace(reNonNewline, function() {\n    return '';\n  });\n}\n\n/**\n * Catches up as `catchup` but removes all non-newline characters.\n *\n * Equivalent to appending as many newlines as there are in the original source\n * between the current position and `end`.\n */\nfunction catchupNewlines(end, state) {\n  catchup(end, state, stripNonNewline);\n}\n\n\n/**\n * Same as catchup but does not touch the buffer\n *\n * @param  {number} end\n * @param  {object} state\n */\nfunction move(end, state) {\n  // move the internal cursors\n  if (state.g.sourceMap) {\n    if (end < state.g.position) {\n      state.g.position = 0;\n      state.g.sourceLine = 1;\n      state.g.sourceColumn = 0;\n    }\n\n    var source = state.g.source.substring(state.g.position, end);\n    var sourceLines = source.split('\\n');\n    if (sourceLines.length > 1) {\n      state.g.sourceLine += sourceLines.length - 1;\n      state.g.sourceColumn = 0;\n    }\n    state.g.sourceColumn += sourceLines[sourceLines.length - 1].length;\n  }\n  state.g.position = end;\n}\n\n/**\n * Appends a string of text to the buffer\n *\n * @param {string} str\n * @param {object} state\n */\nfunction append(str, state) {\n  if (state.g.sourceMap && str) {\n    state.g.sourceMap.addMapping({\n      generated: { line: state.g.bufferLine, column: state.g.bufferColumn },\n      original: { line: state.g.sourceLine, column: state.g.sourceColumn },\n      source: state.g.sourceMapFilename\n    });\n    var transformedLines = str.split('\\n');\n    if (transformedLines.length > 1) {\n      state.g.bufferLine += transformedLines.length - 1;\n      state.g.bufferColumn = 0;\n    }\n    state.g.bufferColumn +=\n      transformedLines[transformedLines.length - 1].length;\n  }\n  state.g.buffer += str;\n}\n\n/**\n * Update indent using state.indentBy property. Indent is measured in\n * double spaces. Updates a single line only.\n *\n * @param {string} str\n * @param {object} state\n * @return {string}\n */\nfunction updateIndent(str, state) {\n  /*jshint -W004*/\n  var indentBy = state.indentBy;\n  if (indentBy < 0) {\n    for (var i = 0; i < -indentBy; i++) {\n      str = str.replace(leadingIndentRegexp, '$1');\n    }\n  } else {\n    for (var i = 0; i < indentBy; i++) {\n      str = str.replace(leadingIndentRegexp, '$1$2$2');\n    }\n  }\n  return str;\n}\n\n/**\n * Calculates indent from the beginning of the line until \"start\" or the first\n * character before start.\n * @example\n *   \"  foo.bar()\"\n *         ^\n *       start\n *   indent will be \"  \"\n *\n * @param  {number} start\n * @param  {object} state\n * @return {string}\n */\nfunction indentBefore(start, state) {\n  var end = start;\n  start = start - 1;\n\n  while (start > 0 && state.g.source[start] != '\\n') {\n    if (!state.g.source[start].match(/[ \\t]/)) {\n      end = start;\n    }\n    start--;\n  }\n  return state.g.source.substring(start + 1, end);\n}\n\nfunction getDocblock(state) {\n  if (!state.g.docblock) {\n    var docblock = require('./docblock');\n    state.g.docblock =\n      docblock.parseAsObject(docblock.extract(state.g.source));\n  }\n  return state.g.docblock;\n}\n\nfunction identWithinLexicalScope(identName, state, stopBeforeNode) {\n  var currScope = state.localScope;\n  while (currScope) {\n    if (currScope.identifiers[identName] !== undefined) {\n      return true;\n    }\n\n    if (stopBeforeNode && currScope.parentNode === stopBeforeNode) {\n      break;\n    }\n\n    currScope = currScope.parentScope;\n  }\n  return false;\n}\n\nfunction identInLocalScope(identName, state) {\n  return state.localScope.identifiers[identName] !== undefined;\n}\n\n/**\n * @param {object} boundaryNode\n * @param {?array} path\n * @return {?object} node\n */\nfunction initScopeMetadata(boundaryNode, path, node) {\n  return {\n    boundaryNode: boundaryNode,\n    bindingPath: path,\n    bindingNode: node\n  };\n}\n\nfunction declareIdentInLocalScope(identName, metaData, state) {\n  state.localScope.identifiers[identName] = {\n    boundaryNode: metaData.boundaryNode,\n    path: metaData.bindingPath,\n    node: metaData.bindingNode,\n    state: Object.create(state)\n  };\n}\n\nfunction getLexicalBindingMetadata(identName, state) {\n  var currScope = state.localScope;\n  while (currScope) {\n    if (currScope.identifiers[identName] !== undefined) {\n      return currScope.identifiers[identName];\n    }\n\n    currScope = currScope.parentScope;\n  }\n}\n\nfunction getLocalBindingMetadata(identName, state) {\n  return state.localScope.identifiers[identName];\n}\n\n/**\n * Apply the given analyzer function to the current node. If the analyzer\n * doesn't return false, traverse each child of the current node using the given\n * traverser function.\n *\n * @param {function} analyzer\n * @param {function} traverser\n * @param {object} node\n * @param {array} path\n * @param {object} state\n */\nfunction analyzeAndTraverse(analyzer, traverser, node, path, state) {\n  if (node.type) {\n    if (analyzer(node, path, state) === false) {\n      return;\n    }\n    path.unshift(node);\n  }\n\n  getOrderedChildren(node).forEach(function(child) {\n    traverser(child, path, state);\n  });\n\n  node.type && path.shift();\n}\n\n/**\n * It is crucial that we traverse in order, or else catchup() on a later\n * node that is processed out of order can move the buffer past a node\n * that we haven't handled yet, preventing us from modifying that node.\n *\n * This can happen when a node has multiple properties containing children.\n * For example, XJSElement nodes have `openingElement`, `closingElement` and\n * `children`. If we traverse `openingElement`, then `closingElement`, then\n * when we get to `children`, the buffer has already caught up to the end of\n * the closing element, after the children.\n *\n * This is basically a Schwartzian transform. Collects an array of children,\n * each one represented as [child, startIndex]; sorts the array by start\n * index; then traverses the children in that order.\n */\nfunction getOrderedChildren(node) {\n  var queue = [];\n  for (var key in node) {\n    if (node.hasOwnProperty(key)) {\n      enqueueNodeWithStartIndex(queue, node[key]);\n    }\n  }\n  queue.sort(function(a, b) { return a[1] - b[1]; });\n  return queue.map(function(pair) { return pair[0]; });\n}\n\n/**\n * Helper function for analyzeAndTraverse which queues up all of the children\n * of the given node.\n *\n * Children can also be found in arrays, so we basically want to merge all of\n * those arrays together so we can sort them and then traverse the children\n * in order.\n *\n * One example is the Program node. It contains `body` and `comments`, both\n * arrays. Lexographically, comments are interspersed throughout the body\n * nodes, but esprima's AST groups them together.\n */\nfunction enqueueNodeWithStartIndex(queue, node) {\n  if (typeof node !== 'object' || node === null) {\n    return;\n  }\n  if (node.range) {\n    queue.push([node, node.range[0]]);\n  } else if (Array.isArray(node)) {\n    for (var ii = 0; ii < node.length; ii++) {\n      enqueueNodeWithStartIndex(queue, node[ii]);\n    }\n  }\n}\n\n/**\n * Checks whether a node or any of its sub-nodes contains\n * a syntactic construct of the passed type.\n * @param {object} node - AST node to test.\n * @param {string} type - node type to lookup.\n */\nfunction containsChildOfType(node, type) {\n  return containsChildMatching(node, function(node) {\n    return node.type === type;\n  });\n}\n\nfunction containsChildMatching(node, matcher) {\n  var foundMatchingChild = false;\n  function nodeTypeAnalyzer(node) {\n    if (matcher(node) === true) {\n      foundMatchingChild = true;\n      return false;\n    }\n  }\n  function nodeTypeTraverser(child, path, state) {\n    if (!foundMatchingChild) {\n      foundMatchingChild = containsChildMatching(child, matcher);\n    }\n  }\n  analyzeAndTraverse(\n    nodeTypeAnalyzer,\n    nodeTypeTraverser,\n    node,\n    []\n  );\n  return foundMatchingChild;\n}\n\nvar scopeTypes = {};\nscopeTypes[Syntax.ArrowFunctionExpression] = true;\nscopeTypes[Syntax.FunctionExpression] = true;\nscopeTypes[Syntax.FunctionDeclaration] = true;\nscopeTypes[Syntax.Program] = true;\n\nfunction getBoundaryNode(path) {\n  for (var ii = 0; ii < path.length; ++ii) {\n    if (scopeTypes[path[ii].type]) {\n      return path[ii];\n    }\n  }\n  throw new Error(\n    'Expected to find a node with one of the following types in path:\\n' +\n    JSON.stringify(Object.keys(scopeTypes))\n  );\n}\n\nfunction getTempVar(tempVarIndex) {\n  return '$__' + tempVarIndex;\n}\n\nfunction injectTempVar(state) {\n  var tempVar = '$__' + (state.localScope.tempVarIndex++);\n  state.localScope.tempVars.push(tempVar);\n  return tempVar;\n}\n\nfunction injectTempVarDeclarations(state, index) {\n  if (state.localScope.tempVars.length) {\n    state.g.buffer =\n      state.g.buffer.slice(0, index) +\n      'var ' + state.localScope.tempVars.join(', ') + ';' +\n      state.g.buffer.slice(index);\n    state.localScope.tempVars = [];\n  }\n}\n\nexports.analyzeAndTraverse = analyzeAndTraverse;\nexports.append = append;\nexports.catchup = catchup;\nexports.catchupNewlines = catchupNewlines;\nexports.catchupWhiteOut = catchupWhiteOut;\nexports.catchupWhiteSpace = catchupWhiteSpace;\nexports.containsChildMatching = containsChildMatching;\nexports.containsChildOfType = containsChildOfType;\nexports.createState = createState;\nexports.declareIdentInLocalScope = declareIdentInLocalScope;\nexports.getBoundaryNode = getBoundaryNode;\nexports.getDocblock = getDocblock;\nexports.getLexicalBindingMetadata = getLexicalBindingMetadata;\nexports.getLocalBindingMetadata = getLocalBindingMetadata;\nexports.getNextSyntacticCharOffset = getNextSyntacticCharOffset;\nexports.getNodeSourceText = getNodeSourceText;\nexports.getOrderedChildren = getOrderedChildren;\nexports.getTempVar = getTempVar;\nexports.identInLocalScope = identInLocalScope;\nexports.identWithinLexicalScope = identWithinLexicalScope;\nexports.indentBefore = indentBefore;\nexports.initScopeMetadata = initScopeMetadata;\nexports.injectTempVar = injectTempVar;\nexports.injectTempVarDeclarations = injectTempVarDeclarations;\nexports.move = move;\nexports.scopeTypes = scopeTypes;\nexports.updateIndent = updateIndent;\nexports.updateState = updateState;\n","/** vim: et:ts=4:sw=4:sts=4\n * @license amdefine 1.0.1 Copyright (c) 2011-2016, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/amdefine for details\n */\n\n/*jslint node: true */\n/*global module, process */\n'use strict';\n\n/**\n * Creates a define for node.\n * @param {Object} module the \"module\" object that is defined by Node for the\n * current module.\n * @param {Function} [requireFn]. Node's require function for the current module.\n * It only needs to be passed in Node versions before 0.5, when module.require\n * did not exist.\n * @returns {Function} a define function that is usable for the current node\n * module.\n */\nfunction amdefine(module, requireFn) {\n    'use strict';\n    var defineCache = {},\n        loaderCache = {},\n        alreadyCalled = false,\n        path = require('path'),\n        makeRequire, stringRequire;\n\n    /**\n     * Trims the . and .. from an array of path segments.\n     * It will keep a leading path segment if a .. will become\n     * the first path segment, to help with module name lookups,\n     * which act like paths, but can be remapped. But the end result,\n     * all paths that use this function should look normalized.\n     * NOTE: this method MODIFIES the input array.\n     * @param {Array} ary the array of path segments.\n     */\n    function trimDots(ary) {\n        var i, part;\n        for (i = 0; ary[i]; i+= 1) {\n            part = ary[i];\n            if (part === '.') {\n                ary.splice(i, 1);\n                i -= 1;\n            } else if (part === '..') {\n                if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                    //End of the line. Keep at least one non-dot\n                    //path segment at the front so it can be mapped\n                    //correctly to disk. Otherwise, there is likely\n                    //no path mapping for a path starting with '..'.\n                    //This can still fail, but catches the most reasonable\n                    //uses of ..\n                    break;\n                } else if (i > 0) {\n                    ary.splice(i - 1, 2);\n                    i -= 2;\n                }\n            }\n        }\n    }\n\n    function normalize(name, baseName) {\n        var baseParts;\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === '.') {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                baseParts = baseName.split('/');\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                baseParts = baseParts.concat(name.split('/'));\n                trimDots(baseParts);\n                name = baseParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    /**\n     * Create the normalize() function passed to a loader plugin's\n     * normalize method.\n     */\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(id) {\n        function load(value) {\n            loaderCache[id] = value;\n        }\n\n        load.fromText = function (id, text) {\n            //This one is difficult because the text can/probably uses\n            //define, and any relative paths and requires should be relative\n            //to that id was it would be found on disk. But this would require\n            //bootstrapping a module/require fairly deeply from node core.\n            //Not sure how best to go about that yet.\n            throw new Error('amdefine does not implement load.fromText');\n        };\n\n        return load;\n    }\n\n    makeRequire = function (systemRequire, exports, module, relId) {\n        function amdRequire(deps, callback) {\n            if (typeof deps === 'string') {\n                //Synchronous, single module require('')\n                return stringRequire(systemRequire, exports, module, deps, relId);\n            } else {\n                //Array of dependencies with a callback.\n\n                //Convert the dependencies to modules.\n                deps = deps.map(function (depName) {\n                    return stringRequire(systemRequire, exports, module, depName, relId);\n                });\n\n                //Wait for next tick to call back the require call.\n                if (callback) {\n                    process.nextTick(function () {\n                        callback.apply(null, deps);\n                    });\n                }\n            }\n        }\n\n        amdRequire.toUrl = function (filePath) {\n            if (filePath.indexOf('.') === 0) {\n                return normalize(filePath, path.dirname(module.filename));\n            } else {\n                return filePath;\n            }\n        };\n\n        return amdRequire;\n    };\n\n    //Favor explicit value, passed in if the module wants to support Node 0.4.\n    requireFn = requireFn || function req() {\n        return module.require.apply(module, arguments);\n    };\n\n    function runFactory(id, deps, factory) {\n        var r, e, m, result;\n\n        if (id) {\n            e = loaderCache[id] = {};\n            m = {\n                id: id,\n                uri: __filename,\n                exports: e\n            };\n            r = makeRequire(requireFn, e, m, id);\n        } else {\n            //Only support one define call per file\n            if (alreadyCalled) {\n                throw new Error('amdefine with no module ID cannot be called more than once per file.');\n            }\n            alreadyCalled = true;\n\n            //Use the real variables from node\n            //Use module.exports for exports, since\n            //the exports in here is amdefine exports.\n            e = module.exports;\n            m = module;\n            r = makeRequire(requireFn, e, m, module.id);\n        }\n\n        //If there are dependencies, they are strings, so need\n        //to convert them to dependency values.\n        if (deps) {\n            deps = deps.map(function (depName) {\n                return r(depName);\n            });\n        }\n\n        //Call the factory with the right dependencies.\n        if (typeof factory === 'function') {\n            result = factory.apply(m.exports, deps);\n        } else {\n            result = factory;\n        }\n\n        if (result !== undefined) {\n            m.exports = result;\n            if (id) {\n                loaderCache[id] = m.exports;\n            }\n        }\n    }\n\n    stringRequire = function (systemRequire, exports, module, id, relId) {\n        //Split the ID by a ! so that\n        var index = id.indexOf('!'),\n            originalId = id,\n            prefix, plugin;\n\n        if (index === -1) {\n            id = normalize(id, relId);\n\n            //Straight module lookup. If it is one of the special dependencies,\n            //deal with it, otherwise, delegate to node.\n            if (id === 'require') {\n                return makeRequire(systemRequire, exports, module, relId);\n            } else if (id === 'exports') {\n                return exports;\n            } else if (id === 'module') {\n                return module;\n            } else if (loaderCache.hasOwnProperty(id)) {\n                return loaderCache[id];\n            } else if (defineCache[id]) {\n                runFactory.apply(null, defineCache[id]);\n                return loaderCache[id];\n            } else {\n                if(systemRequire) {\n                    return systemRequire(originalId);\n                } else {\n                    throw new Error('No module with ID: ' + id);\n                }\n            }\n        } else {\n            //There is a plugin in play.\n            prefix = id.substring(0, index);\n            id = id.substring(index + 1, id.length);\n\n            plugin = stringRequire(systemRequire, exports, module, prefix, relId);\n\n            if (plugin.normalize) {\n                id = plugin.normalize(id, makeNormalize(relId));\n            } else {\n                //Normalize the ID normally.\n                id = normalize(id, relId);\n            }\n\n            if (loaderCache[id]) {\n                return loaderCache[id];\n            } else {\n                plugin.load(id, makeRequire(systemRequire, exports, module, relId), makeLoad(id), {});\n\n                return loaderCache[id];\n            }\n        }\n    };\n\n    //Create a define function specific to the module asking for amdefine.\n    function define(id, deps, factory) {\n        if (Array.isArray(id)) {\n            factory = deps;\n            deps = id;\n            id = undefined;\n        } else if (typeof id !== 'string') {\n            factory = id;\n            id = deps = undefined;\n        }\n\n        if (deps && !Array.isArray(deps)) {\n            factory = deps;\n            deps = undefined;\n        }\n\n        if (!deps) {\n            deps = ['require', 'exports', 'module'];\n        }\n\n        //Set up properties for this module. If an ID, then use\n        //internal cache. If no ID, then use the external variables\n        //for this node module.\n        if (id) {\n            //Put the module in deep freeze until there is a\n            //require call for it.\n            defineCache[id] = [id, deps, factory];\n        } else {\n            runFactory(id, deps, factory);\n        }\n    }\n\n    //define.require, which has access to all the values in the\n    //cache. Useful for AMD modules that all have IDs in the file,\n    //but need to finally export a value to node based on one of those\n    //IDs.\n    define.require = function (id) {\n        if (loaderCache[id]) {\n            return loaderCache[id];\n        }\n\n        if (defineCache[id]) {\n            runFactory.apply(null, defineCache[id]);\n            return loaderCache[id];\n        }\n    };\n\n    define.amd = {};\n\n    return define;\n}\n\nmodule.exports = amdefine;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n  var MappingList = require('./mapping-list').MappingList;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n\n      if (source != null && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name != null && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      var mappings = this._mappings.toArray();\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this.toJSON());\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n  var quickSort = require('./quick-sort').quickSort;\n\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    return sourceMap.sections != null\n      ? new IndexedSourceMapConsumer(sourceMap)\n      : new BasicSourceMapConsumer(sourceMap);\n  }\n\n  SourceMapConsumer.fromSourceMap = function(aSourceMap) {\n    return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n  }\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype._charIsMappingSeparator =\n    function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n      var c = aStr.charAt(index);\n      return c === \";\" || c === \",\";\n    };\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      throw new Error(\"Subclasses must implement _parseMappings\");\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  SourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n  SourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source === null ? null : this._sources.at(mapping.source);\n        if (source != null && sourceRoot != null) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name === null ? null : this._names.at(mapping.name)\n        };\n      }, this).forEach(aCallback, context);\n    };\n\n  /**\n   * Returns all generated line and column information for the original source,\n   * line, and column provided. If no column is provided, returns all mappings\n   * corresponding to a either the line we are searching for or the next\n   * closest line that has any mappings. Otherwise, returns all mappings\n   * corresponding to the given line and either the column we are searching for\n   * or the next closest column that has any offsets.\n   *\n   * The only argument is an object with the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: Optional. the column number in the original source.\n   *\n   * and an array of objects is returned, each with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.allGeneratedPositionsFor =\n    function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n      var line = util.getArg(aArgs, 'line');\n\n      // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n      // returns the index of the closest mapping less than the needle. By\n      // setting needle.originalColumn to 0, we thus find the last mapping for\n      // the given line, provided such a mapping exists.\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: line,\n        originalColumn: util.getArg(aArgs, 'column', 0)\n      };\n\n      if (this.sourceRoot != null) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n      if (!this._sources.has(needle.source)) {\n        return [];\n      }\n      needle.source = this._sources.indexOf(needle.source);\n\n      var mappings = [];\n\n      var index = this._findMapping(needle,\n                                    this._originalMappings,\n                                    \"originalLine\",\n                                    \"originalColumn\",\n                                    util.compareByOriginalPositions,\n                                    binarySearch.LEAST_UPPER_BOUND);\n      if (index >= 0) {\n        var mapping = this._originalMappings[index];\n\n        if (aArgs.column === undefined) {\n          var originalLine = mapping.originalLine;\n\n          // Iterate until either we run out of mappings, or we run into\n          // a mapping for a different line than the one we found. Since\n          // mappings are sorted, this is guaranteed to find all mappings for\n          // the line we found.\n          while (mapping && mapping.originalLine === originalLine) {\n            mappings.push({\n              line: util.getArg(mapping, 'generatedLine', null),\n              column: util.getArg(mapping, 'generatedColumn', null),\n              lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n            });\n\n            mapping = this._originalMappings[++index];\n          }\n        } else {\n          var originalColumn = mapping.originalColumn;\n\n          // Iterate until either we run out of mappings, or we run into\n          // a mapping for a different line than the one we were searching for.\n          // Since mappings are sorted, this is guaranteed to find all mappings for\n          // the line we are searching for.\n          while (mapping &&\n                 mapping.originalLine === line &&\n                 mapping.originalColumn == originalColumn) {\n            mappings.push({\n              line: util.getArg(mapping, 'generatedLine', null),\n              column: util.getArg(mapping, 'generatedColumn', null),\n              lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n            });\n\n            mapping = this._originalMappings[++index];\n          }\n        }\n      }\n\n      return mappings;\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n  /**\n   * A BasicSourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: Optional. The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function BasicSourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    sources = sources.map(util.normalize);\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n  BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n  /**\n   * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns BasicSourceMapConsumer\n   */\n  BasicSourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n      var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      // Because we are modifying the entries (by converting string sources and\n      // names to indices into the sources and names ArraySets), we have to make\n      // a copy of the entry or else bad things happen. Shared mutable state\n      // strikes again! See github issue #191.\n\n      var generatedMappings = aSourceMap._mappings.toArray().slice();\n      var destGeneratedMappings = smc.__generatedMappings = [];\n      var destOriginalMappings = smc.__originalMappings = [];\n\n      for (var i = 0, length = generatedMappings.length; i < length; i++) {\n        var srcMapping = generatedMappings[i];\n        var destMapping = new Mapping;\n        destMapping.generatedLine = srcMapping.generatedLine;\n        destMapping.generatedColumn = srcMapping.generatedColumn;\n\n        if (srcMapping.source) {\n          destMapping.source = sources.indexOf(srcMapping.source);\n          destMapping.originalLine = srcMapping.originalLine;\n          destMapping.originalColumn = srcMapping.originalColumn;\n\n          if (srcMapping.name) {\n            destMapping.name = names.indexOf(srcMapping.name);\n          }\n\n          destOriginalMappings.push(destMapping);\n        }\n\n        destGeneratedMappings.push(destMapping);\n      }\n\n      quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  BasicSourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  /**\n   * Provide the JIT with a nice shape / hidden class.\n   */\n  function Mapping() {\n    this.generatedLine = 0;\n    this.generatedColumn = 0;\n    this.source = null;\n    this.originalLine = null;\n    this.originalColumn = null;\n    this.name = null;\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  BasicSourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var length = aStr.length;\n      var index = 0;\n      var cachedSegments = {};\n      var temp = {};\n      var originalMappings = [];\n      var generatedMappings = [];\n      var mapping, str, segment, end, value;\n\n      while (index < length) {\n        if (aStr.charAt(index) === ';') {\n          generatedLine++;\n          index++;\n          previousGeneratedColumn = 0;\n        }\n        else if (aStr.charAt(index) === ',') {\n          index++;\n        }\n        else {\n          mapping = new Mapping();\n          mapping.generatedLine = generatedLine;\n\n          // Because each offset is encoded relative to the previous one,\n          // many segments often have the same encoding. We can exploit this\n          // fact by caching the parsed variable length fields of each segment,\n          // allowing us to avoid a second parse if we encounter the same\n          // segment again.\n          for (end = index; end < length; end++) {\n            if (this._charIsMappingSeparator(aStr, end)) {\n              break;\n            }\n          }\n          str = aStr.slice(index, end);\n\n          segment = cachedSegments[str];\n          if (segment) {\n            index += str.length;\n          } else {\n            segment = [];\n            while (index < end) {\n              base64VLQ.decode(aStr, index, temp);\n              value = temp.value;\n              index = temp.rest;\n              segment.push(value);\n            }\n\n            if (segment.length === 2) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            if (segment.length === 3) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            cachedSegments[str] = segment;\n          }\n\n          // Generated column.\n          mapping.generatedColumn = previousGeneratedColumn + segment[0];\n          previousGeneratedColumn = mapping.generatedColumn;\n\n          if (segment.length > 1) {\n            // Original source.\n            mapping.source = previousSource + segment[1];\n            previousSource += segment[1];\n\n            // Original line.\n            mapping.originalLine = previousOriginalLine + segment[2];\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n\n            // Original column.\n            mapping.originalColumn = previousOriginalColumn + segment[3];\n            previousOriginalColumn = mapping.originalColumn;\n\n            if (segment.length > 4) {\n              // Original name.\n              mapping.name = previousName + segment[4];\n              previousName += segment[4];\n            }\n          }\n\n          generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            originalMappings.push(mapping);\n          }\n        }\n      }\n\n      quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n      this.__generatedMappings = generatedMappings;\n\n      quickSort(originalMappings, util.compareByOriginalPositions);\n      this.__originalMappings = originalMappings;\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  BasicSourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator, aBias) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n    };\n\n  /**\n   * Compute the last column for each generated mapping. The last column is\n   * inclusive.\n   */\n  BasicSourceMapConsumer.prototype.computeColumnSpans =\n    function SourceMapConsumer_computeColumnSpans() {\n      for (var index = 0; index < this._generatedMappings.length; ++index) {\n        var mapping = this._generatedMappings[index];\n\n        // Mappings do not contain a field for the last generated columnt. We\n        // can come up with an optimistic estimate, however, by assuming that\n        // mappings are contiguous (i.e. given two consecutive mappings, the\n        // first mapping ends where the second one starts).\n        if (index + 1 < this._generatedMappings.length) {\n          var nextMapping = this._generatedMappings[index + 1];\n\n          if (mapping.generatedLine === nextMapping.generatedLine) {\n            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n            continue;\n          }\n        }\n\n        // The last mapping for each line spans the entire line.\n        mapping.lastGeneratedColumn = Infinity;\n      }\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  BasicSourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var index = this._findMapping(\n        needle,\n        this._generatedMappings,\n        \"generatedLine\",\n        \"generatedColumn\",\n        util.compareByGeneratedPositionsDeflated,\n        util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n      );\n\n      if (index >= 0) {\n        var mapping = this._generatedMappings[index];\n\n        if (mapping.generatedLine === needle.generatedLine) {\n          var source = util.getArg(mapping, 'source', null);\n          if (source !== null) {\n            source = this._sources.at(source);\n            if (this.sourceRoot != null) {\n              source = util.join(this.sourceRoot, source);\n            }\n          }\n          var name = util.getArg(mapping, 'name', null);\n          if (name !== null) {\n            name = this._names.at(name);\n          }\n          return {\n            source: source,\n            line: util.getArg(mapping, 'originalLine', null),\n            column: util.getArg(mapping, 'originalColumn', null),\n            name: name\n          };\n        }\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  BasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n    function BasicSourceMapConsumer_hasContentsOfAllSources() {\n      if (!this.sourcesContent) {\n        return false;\n      }\n      return this.sourcesContent.length >= this._sources.size() &&\n        !this.sourcesContent.some(function (sc) { return sc == null; });\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * availible.\n   */\n  BasicSourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot != null) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot != null\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      // This function is used recursively from\n      // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n      // don't want to throw if we can't find the source - we just want to\n      // return null, so we provide a flag to exit gracefully.\n      if (nullOnMissing) {\n        return null;\n      }\n      else {\n        throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n      }\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  BasicSourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var source = util.getArg(aArgs, 'source');\n      if (this.sourceRoot != null) {\n        source = util.relative(this.sourceRoot, source);\n      }\n      if (!this._sources.has(source)) {\n        return {\n          line: null,\n          column: null,\n          lastColumn: null\n        };\n      }\n      source = this._sources.indexOf(source);\n\n      var needle = {\n        source: source,\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      var index = this._findMapping(\n        needle,\n        this._originalMappings,\n        \"originalLine\",\n        \"originalColumn\",\n        util.compareByOriginalPositions,\n        util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n      );\n\n      if (index >= 0) {\n        var mapping = this._originalMappings[index];\n\n        if (mapping.source === needle.source) {\n          return {\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          };\n        }\n      }\n\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    };\n\n  exports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n  /**\n   * An IndexedSourceMapConsumer instance represents a parsed source map which\n   * we can query for information. It differs from BasicSourceMapConsumer in\n   * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n   * input.\n   *\n   * The only parameter is a raw source map (either as a JSON string, or already\n   * parsed to an object). According to the spec for indexed source maps, they\n   * have the following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - file: Optional. The generated file this source map is associated with.\n   *   - sections: A list of section definitions.\n   *\n   * Each value under the \"sections\" field has two fields:\n   *   - offset: The offset into the original specified at which this section\n   *       begins to apply, defined as an object with a \"line\" and \"column\"\n   *       field.\n   *   - map: A source map definition. This source map could also be indexed,\n   *       but doesn't have to be.\n   *\n   * Instead of the \"map\" field, it's also possible to have a \"url\" field\n   * specifying a URL to retrieve a source map from, but that's currently\n   * unsupported.\n   *\n   * Here's an example source map, taken from the source map spec[0], but\n   * modified to omit a section which uses the \"url\" field.\n   *\n   *  {\n   *    version : 3,\n   *    file: \"app.js\",\n   *    sections: [{\n   *      offset: {line:100, column:10},\n   *      map: {\n   *        version : 3,\n   *        file: \"section.js\",\n   *        sources: [\"foo.js\", \"bar.js\"],\n   *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *        mappings: \"AAAA,E;;ABCDE;\"\n   *      }\n   *    }],\n   *  }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n   */\n  function IndexedSourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sections = util.getArg(sourceMap, 'sections');\n\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n\n    var lastOffset = {\n      line: -1,\n      column: 0\n    };\n    this._sections = sections.map(function (s) {\n      if (s.url) {\n        // The url field will require support for asynchronicity.\n        // See https://github.com/mozilla/source-map/issues/16\n        throw new Error('Support for url field in sections not implemented.');\n      }\n      var offset = util.getArg(s, 'offset');\n      var offsetLine = util.getArg(offset, 'line');\n      var offsetColumn = util.getArg(offset, 'column');\n\n      if (offsetLine < lastOffset.line ||\n          (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n        throw new Error('Section offsets must be ordered and non-overlapping.');\n      }\n      lastOffset = offset;\n\n      return {\n        generatedOffset: {\n          // The offset fields are 0-based, but we use 1-based indices when\n          // encoding/decoding from VLQ.\n          generatedLine: offsetLine + 1,\n          generatedColumn: offsetColumn + 1\n        },\n        consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n      }\n    });\n  }\n\n  IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n  IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  IndexedSourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      var sources = [];\n      for (var i = 0; i < this._sections.length; i++) {\n        for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n          sources.push(this._sections[i].consumer.sources[j]);\n        }\n      };\n      return sources;\n    }\n  });\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  IndexedSourceMapConsumer.prototype.originalPositionFor =\n    function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      // Find the section containing the generated position we're trying to map\n      // to an original position.\n      var sectionIndex = binarySearch.search(needle, this._sections,\n        function(needle, section) {\n          var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n          if (cmp) {\n            return cmp;\n          }\n\n          return (needle.generatedColumn -\n                  section.generatedOffset.generatedColumn);\n        });\n      var section = this._sections[sectionIndex];\n\n      if (!section) {\n        return {\n          source: null,\n          line: null,\n          column: null,\n          name: null\n        };\n      }\n\n      return section.consumer.originalPositionFor({\n        line: needle.generatedLine -\n          (section.generatedOffset.generatedLine - 1),\n        column: needle.generatedColumn -\n          (section.generatedOffset.generatedLine === needle.generatedLine\n           ? section.generatedOffset.generatedColumn - 1\n           : 0),\n        bias: aArgs.bias\n      });\n    };\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n    function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n      return this._sections.every(function (s) {\n        return s.consumer.hasContentsOfAllSources();\n      });\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  IndexedSourceMapConsumer.prototype.sourceContentFor =\n    function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n      for (var i = 0; i < this._sections.length; i++) {\n        var section = this._sections[i];\n\n        var content = section.consumer.sourceContentFor(aSource, true);\n        if (content) {\n          return content;\n        }\n      }\n      if (nullOnMissing) {\n        return null;\n      }\n      else {\n        throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n      }\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  IndexedSourceMapConsumer.prototype.generatedPositionFor =\n    function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n      for (var i = 0; i < this._sections.length; i++) {\n        var section = this._sections[i];\n\n        // Only consider this section if the requested source is in the list of\n        // sources of the consumer.\n        if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n          continue;\n        }\n        var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n        if (generatedPosition) {\n          var ret = {\n            line: generatedPosition.line +\n              (section.generatedOffset.generatedLine - 1),\n            column: generatedPosition.column +\n              (section.generatedOffset.generatedLine === generatedPosition.line\n               ? section.generatedOffset.generatedColumn - 1\n               : 0)\n          };\n          return ret;\n        }\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  IndexedSourceMapConsumer.prototype._parseMappings =\n    function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      this.__generatedMappings = [];\n      this.__originalMappings = [];\n      for (var i = 0; i < this._sections.length; i++) {\n        var section = this._sections[i];\n        var sectionMappings = section.consumer._generatedMappings;\n        for (var j = 0; j < sectionMappings.length; j++) {\n          var mapping = sectionMappings[i];\n\n          var source = section.consumer._sources.at(mapping.source);\n          if (section.consumer.sourceRoot !== null) {\n            source = util.join(section.consumer.sourceRoot, source);\n          }\n          this._sources.add(source);\n          source = this._sources.indexOf(source);\n\n          var name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n\n          // The mappings coming from the consumer for the section have\n          // generated positions relative to the start of the section, so we\n          // need to offset them to be relative to the start of the concatenated\n          // generated file.\n          var adjustedMapping = {\n            source: source,\n            generatedLine: mapping.generatedLine +\n              (section.generatedOffset.generatedLine - 1),\n            generatedColumn: mapping.column +\n              (section.generatedOffset.generatedLine === mapping.generatedLine)\n              ? section.generatedOffset.generatedColumn - 1\n              : 0,\n            originalLine: mapping.originalLine,\n            originalColumn: mapping.originalColumn,\n            name: name\n          };\n\n          this.__generatedMappings.push(adjustedMapping);\n          if (typeof adjustedMapping.originalLine === 'number') {\n            this.__originalMappings.push(adjustedMapping);\n          }\n        };\n      };\n\n      quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n      quickSort(this.__originalMappings, util.compareByOriginalPositions);\n    };\n\n  exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n});\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\n  var util = require('./util');\n\n  // Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n  // operating systems these days (capturing the result).\n  var REGEX_NEWLINE = /(\\r?\\n)/;\n\n  // Newline character code for charCodeAt() comparisons\n  var NEWLINE_CODE = 10;\n\n  // Private symbol for identifying `SourceNode`s when multiple versions of\n  // the source-map library are loaded. This MUST NOT CHANGE across\n  // versions!\n  var isSourceNode = \"$$$isSourceNode$$$\";\n\n  /**\n   * SourceNodes provide a way to abstract over interpolating/concatenating\n   * snippets of generated JavaScript source code while maintaining the line and\n   * column information associated with the original source code.\n   *\n   * @param aLine The original line number.\n   * @param aColumn The original column number.\n   * @param aSource The original source's filename.\n   * @param aChunks Optional. An array of strings which are snippets of\n   *        generated JS, or other SourceNodes.\n   * @param aName The original identifier.\n   */\n  function SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n    this.children = [];\n    this.sourceContents = {};\n    this.line = aLine == null ? null : aLine;\n    this.column = aColumn == null ? null : aColumn;\n    this.source = aSource == null ? null : aSource;\n    this.name = aName == null ? null : aName;\n    this[isSourceNode] = true;\n    if (aChunks != null) this.add(aChunks);\n  }\n\n  /**\n   * Creates a SourceNode from generated code and a SourceMapConsumer.\n   *\n   * @param aGeneratedCode The generated code\n   * @param aSourceMapConsumer The SourceMap for the generated code\n   * @param aRelativePath Optional. The path that relative sources in the\n   *        SourceMapConsumer should be relative to.\n   */\n  SourceNode.fromStringWithSourceMap =\n    function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n      // The SourceNode we want to fill with the generated code\n      // and the SourceMap\n      var node = new SourceNode();\n\n      // All even indices of this array are one line of the generated code,\n      // while all odd indices are the newlines between two adjacent lines\n      // (since `REGEX_NEWLINE` captures its match).\n      // Processed fragments are removed from this array, by calling `shiftNextLine`.\n      var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n      var shiftNextLine = function() {\n        var lineContents = remainingLines.shift();\n        // The last line of a file might not have a newline.\n        var newLine = remainingLines.shift() || \"\";\n        return lineContents + newLine;\n      };\n\n      // We need to remember the position of \"remainingLines\"\n      var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n      // The generate SourceNodes we need a code range.\n      // To extract it current and last mapping is used.\n      // Here we store the last mapping.\n      var lastMapping = null;\n\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        if (lastMapping !== null) {\n          // We add the code from \"lastMapping\" to \"mapping\":\n          // First check if there is a new line in between.\n          if (lastGeneratedLine < mapping.generatedLine) {\n            var code = \"\";\n            // Associate first line with \"lastMapping\"\n            addMappingWithCode(lastMapping, shiftNextLine());\n            lastGeneratedLine++;\n            lastGeneratedColumn = 0;\n            // The remaining code is added without mapping\n          } else {\n            // There is no new line in between.\n            // Associate the code between \"lastGeneratedColumn\" and\n            // \"mapping.generatedColumn\" with \"lastMapping\"\n            var nextLine = remainingLines[0];\n            var code = nextLine.substr(0, mapping.generatedColumn -\n                                          lastGeneratedColumn);\n            remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                                lastGeneratedColumn);\n            lastGeneratedColumn = mapping.generatedColumn;\n            addMappingWithCode(lastMapping, code);\n            // No more remaining code, continue\n            lastMapping = mapping;\n            return;\n          }\n        }\n        // We add the generated code until the first mapping\n        // to the SourceNode without any mapping.\n        // Each line is added as separate string.\n        while (lastGeneratedLine < mapping.generatedLine) {\n          node.add(shiftNextLine());\n          lastGeneratedLine++;\n        }\n        if (lastGeneratedColumn < mapping.generatedColumn) {\n          var nextLine = remainingLines[0];\n          node.add(nextLine.substr(0, mapping.generatedColumn));\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n        }\n        lastMapping = mapping;\n      }, this);\n      // We have processed all mappings.\n      if (remainingLines.length > 0) {\n        if (lastMapping) {\n          // Associate the remaining code in the current line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n        }\n        // and add the remaining lines without any mapping\n        node.add(remainingLines.join(\"\"));\n      }\n\n      // Copy sourcesContent into SourceNode\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aRelativePath != null) {\n            sourceFile = util.join(aRelativePath, sourceFile);\n          }\n          node.setSourceContent(sourceFile, content);\n        }\n      });\n\n      return node;\n\n      function addMappingWithCode(mapping, code) {\n        if (mapping === null || mapping.source === undefined) {\n          node.add(code);\n        } else {\n          var source = aRelativePath\n            ? util.join(aRelativePath, mapping.source)\n            : mapping.source;\n          node.add(new SourceNode(mapping.originalLine,\n                                  mapping.originalColumn,\n                                  source,\n                                  code,\n                                  mapping.name));\n        }\n      }\n    };\n\n  /**\n   * Add a chunk of generated JS to this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  SourceNode.prototype.add = function SourceNode_add(aChunk) {\n    if (Array.isArray(aChunk)) {\n      aChunk.forEach(function (chunk) {\n        this.add(chunk);\n      }, this);\n    }\n    else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      if (aChunk) {\n        this.children.push(aChunk);\n      }\n    }\n    else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  };\n\n  /**\n   * Add a chunk of generated JS to the beginning of this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n    if (Array.isArray(aChunk)) {\n      for (var i = aChunk.length-1; i >= 0; i--) {\n        this.prepend(aChunk[i]);\n      }\n    }\n    else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      this.children.unshift(aChunk);\n    }\n    else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  };\n\n  /**\n   * Walk over the tree of JS snippets in this node and its children. The\n   * walking function is called once for each snippet of JS and is passed that\n   * snippet and the its original associated source's line/column location.\n   *\n   * @param aFn The traversal function.\n   */\n  SourceNode.prototype.walk = function SourceNode_walk(aFn) {\n    var chunk;\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      chunk = this.children[i];\n      if (chunk[isSourceNode]) {\n        chunk.walk(aFn);\n      }\n      else {\n        if (chunk !== '') {\n          aFn(chunk, { source: this.source,\n                       line: this.line,\n                       column: this.column,\n                       name: this.name });\n        }\n      }\n    }\n  };\n\n  /**\n   * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n   * each of `this.children`.\n   *\n   * @param aSep The separator.\n   */\n  SourceNode.prototype.join = function SourceNode_join(aSep) {\n    var newChildren;\n    var i;\n    var len = this.children.length;\n    if (len > 0) {\n      newChildren = [];\n      for (i = 0; i < len-1; i++) {\n        newChildren.push(this.children[i]);\n        newChildren.push(aSep);\n      }\n      newChildren.push(this.children[i]);\n      this.children = newChildren;\n    }\n    return this;\n  };\n\n  /**\n   * Call String.prototype.replace on the very right-most source snippet. Useful\n   * for trimming whitespace from the end of a source node, etc.\n   *\n   * @param aPattern The pattern to replace.\n   * @param aReplacement The thing to replace the pattern with.\n   */\n  SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n    var lastChild = this.children[this.children.length - 1];\n    if (lastChild[isSourceNode]) {\n      lastChild.replaceRight(aPattern, aReplacement);\n    }\n    else if (typeof lastChild === 'string') {\n      this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n    }\n    else {\n      this.children.push(''.replace(aPattern, aReplacement));\n    }\n    return this;\n  };\n\n  /**\n   * Set the source content for a source file. This will be added to the SourceMapGenerator\n   * in the sourcesContent field.\n   *\n   * @param aSourceFile The filename of the source file\n   * @param aSourceContent The content of the source file\n   */\n  SourceNode.prototype.setSourceContent =\n    function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n    };\n\n  /**\n   * Walk over the tree of SourceNodes. The walking function is called for each\n   * source file content and is passed the filename and source content.\n   *\n   * @param aFn The traversal function.\n   */\n  SourceNode.prototype.walkSourceContents =\n    function SourceNode_walkSourceContents(aFn) {\n      for (var i = 0, len = this.children.length; i < len; i++) {\n        if (this.children[i][isSourceNode]) {\n          this.children[i].walkSourceContents(aFn);\n        }\n      }\n\n      var sources = Object.keys(this.sourceContents);\n      for (var i = 0, len = sources.length; i < len; i++) {\n        aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n      }\n    };\n\n  /**\n   * Return the string representation of this source node. Walks over the tree\n   * and concatenates all the various snippets together to one string.\n   */\n  SourceNode.prototype.toString = function SourceNode_toString() {\n    var str = \"\";\n    this.walk(function (chunk) {\n      str += chunk;\n    });\n    return str;\n  };\n\n  /**\n   * Returns the string representation of this source node along with a source\n   * map.\n   */\n  SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n    var generated = {\n      code: \"\",\n      line: 1,\n      column: 0\n    };\n    var map = new SourceMapGenerator(aArgs);\n    var sourceMappingActive = false;\n    var lastOriginalSource = null;\n    var lastOriginalLine = null;\n    var lastOriginalColumn = null;\n    var lastOriginalName = null;\n    this.walk(function (chunk, original) {\n      generated.code += chunk;\n      if (original.source !== null\n          && original.line !== null\n          && original.column !== null) {\n        if(lastOriginalSource !== original.source\n           || lastOriginalLine !== original.line\n           || lastOriginalColumn !== original.column\n           || lastOriginalName !== original.name) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n        lastOriginalSource = original.source;\n        lastOriginalLine = original.line;\n        lastOriginalColumn = original.column;\n        lastOriginalName = original.name;\n        sourceMappingActive = true;\n      } else if (sourceMappingActive) {\n        map.addMapping({\n          generated: {\n            line: generated.line,\n            column: generated.column\n          }\n        });\n        lastOriginalSource = null;\n        sourceMappingActive = false;\n      }\n      for (var idx = 0, length = chunk.length; idx < length; idx++) {\n        if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n          generated.line++;\n          generated.column = 0;\n          // Mappings end at eol\n          if (idx + 1 === length) {\n            lastOriginalSource = null;\n            sourceMappingActive = false;\n          } else if (sourceMappingActive) {\n            map.addMapping({\n              source: original.source,\n              original: {\n                line: original.line,\n                column: original.column\n              },\n              generated: {\n                line: generated.line,\n                column: generated.column\n              },\n              name: original.name\n            });\n          }\n        } else {\n          generated.column++;\n        }\n      }\n    });\n    this.walkSourceContents(function (sourceFile, sourceContent) {\n      map.setSourceContent(sourceFile, sourceContent);\n    });\n\n    return { code: generated.code, map: map };\n  };\n\n  exports.SourceNode = SourceNode;\n\n});\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./source-map/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./source-map/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./source-map/source-node').SourceNode;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n/*jslint node: true*/\n\"use strict\";\n\nvar esprima = require('esprima-fb');\nvar utils = require('./utils');\n\nvar getBoundaryNode = utils.getBoundaryNode;\nvar declareIdentInScope = utils.declareIdentInLocalScope;\nvar initScopeMetadata = utils.initScopeMetadata;\nvar Syntax = esprima.Syntax;\n\n/**\n * @param {object} node\n * @param {object} parentNode\n * @return {boolean}\n */\nfunction _nodeIsClosureScopeBoundary(node, parentNode) {\n  if (node.type === Syntax.Program) {\n    return true;\n  }\n\n  var parentIsFunction =\n    parentNode.type === Syntax.FunctionDeclaration\n    || parentNode.type === Syntax.FunctionExpression\n    || parentNode.type === Syntax.ArrowFunctionExpression;\n\n  var parentIsCurlylessArrowFunc =\n    parentNode.type === Syntax.ArrowFunctionExpression\n    && node === parentNode.body;\n\n  return parentIsFunction\n         && (node.type === Syntax.BlockStatement || parentIsCurlylessArrowFunc);\n}\n\nfunction _nodeIsBlockScopeBoundary(node, parentNode) {\n  if (node.type === Syntax.Program) {\n    return false;\n  }\n\n  return node.type === Syntax.BlockStatement\n         && parentNode.type === Syntax.CatchClause;\n}\n\n/**\n * @param {object} node\n * @param {array} path\n * @param {object} state\n */\nfunction traverse(node, path, state) {\n  /*jshint -W004*/\n  // Create a scope stack entry if this is the first node we've encountered in\n  // its local scope\n  var startIndex = null;\n  var parentNode = path[0];\n  if (!Array.isArray(node) && state.localScope.parentNode !== parentNode) {\n    if (_nodeIsClosureScopeBoundary(node, parentNode)) {\n      var scopeIsStrict = state.scopeIsStrict;\n      if (!scopeIsStrict\n          && (node.type === Syntax.BlockStatement\n              || node.type === Syntax.Program)) {\n          scopeIsStrict =\n            node.body.length > 0\n            && node.body[0].type === Syntax.ExpressionStatement\n            && node.body[0].expression.type === Syntax.Literal\n            && node.body[0].expression.value === 'use strict';\n      }\n\n      if (node.type === Syntax.Program) {\n        startIndex = state.g.buffer.length;\n        state = utils.updateState(state, {\n          scopeIsStrict: scopeIsStrict\n        });\n      } else {\n        startIndex = state.g.buffer.length + 1;\n        state = utils.updateState(state, {\n          localScope: {\n            parentNode: parentNode,\n            parentScope: state.localScope,\n            identifiers: {},\n            tempVarIndex: 0,\n            tempVars: []\n          },\n          scopeIsStrict: scopeIsStrict\n        });\n\n        // All functions have an implicit 'arguments' object in scope\n        declareIdentInScope('arguments', initScopeMetadata(node), state);\n\n        // Include function arg identifiers in the scope boundaries of the\n        // function\n        if (parentNode.params.length > 0) {\n          var param;\n          var metadata = initScopeMetadata(parentNode, path.slice(1), path[0]);\n          for (var i = 0; i < parentNode.params.length; i++) {\n            param = parentNode.params[i];\n            if (param.type === Syntax.Identifier) {\n              declareIdentInScope(param.name, metadata, state);\n            }\n          }\n        }\n\n        // Include rest arg identifiers in the scope boundaries of their\n        // functions\n        if (parentNode.rest) {\n          var metadata = initScopeMetadata(\n            parentNode,\n            path.slice(1),\n            path[0]\n          );\n          declareIdentInScope(parentNode.rest.name, metadata, state);\n        }\n\n        // Named FunctionExpressions scope their name within the body block of\n        // themselves only\n        if (parentNode.type === Syntax.FunctionExpression && parentNode.id) {\n          var metaData =\n            initScopeMetadata(parentNode, path.parentNodeslice, parentNode);\n          declareIdentInScope(parentNode.id.name, metaData, state);\n        }\n      }\n\n      // Traverse and find all local identifiers in this closure first to\n      // account for function/variable declaration hoisting\n      collectClosureIdentsAndTraverse(node, path, state);\n    }\n\n    if (_nodeIsBlockScopeBoundary(node, parentNode)) {\n      startIndex = state.g.buffer.length;\n      state = utils.updateState(state, {\n        localScope: {\n          parentNode: parentNode,\n          parentScope: state.localScope,\n          identifiers: {},\n          tempVarIndex: 0,\n          tempVars: []\n        }\n      });\n\n      if (parentNode.type === Syntax.CatchClause) {\n        var metadata = initScopeMetadata(\n          parentNode,\n          path.slice(1),\n          parentNode\n        );\n        declareIdentInScope(parentNode.param.name, metadata, state);\n      }\n      collectBlockIdentsAndTraverse(node, path, state);\n    }\n  }\n\n  // Only catchup() before and after traversing a child node\n  function traverser(node, path, state) {\n    node.range && utils.catchup(node.range[0], state);\n    traverse(node, path, state);\n    node.range && utils.catchup(node.range[1], state);\n  }\n\n  utils.analyzeAndTraverse(walker, traverser, node, path, state);\n\n  // Inject temp variables into the scope.\n  if (startIndex !== null) {\n    utils.injectTempVarDeclarations(state, startIndex);\n  }\n}\n\nfunction collectClosureIdentsAndTraverse(node, path, state) {\n  utils.analyzeAndTraverse(\n    visitLocalClosureIdentifiers,\n    collectClosureIdentsAndTraverse,\n    node,\n    path,\n    state\n  );\n}\n\nfunction collectBlockIdentsAndTraverse(node, path, state) {\n  utils.analyzeAndTraverse(\n    visitLocalBlockIdentifiers,\n    collectBlockIdentsAndTraverse,\n    node,\n    path,\n    state\n  );\n}\n\nfunction visitLocalClosureIdentifiers(node, path, state) {\n  var metaData;\n  switch (node.type) {\n    case Syntax.ArrowFunctionExpression:\n    case Syntax.FunctionExpression:\n      // Function expressions don't get their names (if there is one) added to\n      // the closure scope they're defined in\n      return false;\n    case Syntax.ClassDeclaration:\n    case Syntax.ClassExpression:\n    case Syntax.FunctionDeclaration:\n      if (node.id) {\n        metaData = initScopeMetadata(getBoundaryNode(path), path.slice(), node);\n        declareIdentInScope(node.id.name, metaData, state);\n      }\n      return false;\n    case Syntax.VariableDeclarator:\n      // Variables have function-local scope\n      if (path[0].kind === 'var') {\n        metaData = initScopeMetadata(getBoundaryNode(path), path.slice(), node);\n        declareIdentInScope(node.id.name, metaData, state);\n      }\n      break;\n  }\n}\n\nfunction visitLocalBlockIdentifiers(node, path, state) {\n  // TODO: Support 'let' here...maybe...one day...or something...\n  if (node.type === Syntax.CatchClause) {\n    return false;\n  }\n}\n\nfunction walker(node, path, state) {\n  var visitors = state.g.visitors;\n  for (var i = 0; i < visitors.length; i++) {\n    if (visitors[i].test(node, path, state)) {\n      return visitors[i](traverse, node, path, state);\n    }\n  }\n}\n\nvar _astCache = {};\n\nfunction getAstForSource(source, options) {\n  if (_astCache[source] && !options.disableAstCache) {\n    return _astCache[source];\n  }\n  var ast = esprima.parse(source, {\n    comment: true,\n    loc: true,\n    range: true,\n    sourceType: options.sourceType\n  });\n  if (!options.disableAstCache) {\n    _astCache[source] = ast;\n  }\n  return ast;\n}\n\n/**\n * Applies all available transformations to the source\n * @param {array} visitors\n * @param {string} source\n * @param {?object} options\n * @return {object}\n */\nfunction transform(visitors, source, options) {\n  options = options || {};\n  var ast;\n  try {\n    ast = getAstForSource(source, options);\n    } catch (e) {\n    e.message = 'Parse Error: ' + e.message;\n    throw e;\n  }\n  var state = utils.createState(source, ast, options);\n  state.g.visitors = visitors;\n\n  if (options.sourceMap) {\n    var SourceMapGenerator = require('source-map').SourceMapGenerator;\n    state.g.sourceMap = new SourceMapGenerator({file: options.filename || 'transformed.js'});\n  }\n\n  traverse(ast, [], state);\n  utils.catchup(source.length, state);\n\n  var ret = {code: state.g.buffer, extra: state.g.extra};\n  if (options.sourceMap) {\n    ret.sourceMap = state.g.sourceMap;\n    ret.sourceMapFilename =  options.filename || 'source.js';\n  }\n  return ret;\n}\n\nexports.transform = transform;\nexports.Syntax = Syntax;\n","/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        XHTMLEntities,\n        ClassPropertyType,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9,\n        Template: 10,\n        JSXIdentifier: 11,\n        JSXText: 12\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.JSXIdentifier] = 'JSXIdentifier';\n    TokenName[Token.JSXText] = 'JSXText';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n    TokenName[Token.Template] = 'Template';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AnyTypeAnnotation: 'AnyTypeAnnotation',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrayTypeAnnotation: 'ArrayTypeAnnotation',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AssignmentExpression: 'AssignmentExpression',\n        BinaryExpression: 'BinaryExpression',\n        BlockStatement: 'BlockStatement',\n        BooleanTypeAnnotation: 'BooleanTypeAnnotation',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ClassImplements: 'ClassImplements',\n        ClassProperty: 'ClassProperty',\n        ComprehensionBlock: 'ComprehensionBlock',\n        ComprehensionExpression: 'ComprehensionExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DeclareClass: 'DeclareClass',\n        DeclareFunction: 'DeclareFunction',\n        DeclareModule: 'DeclareModule',\n        DeclareVariable: 'DeclareVariable',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportDeclaration: 'ExportDeclaration',\n        ExportBatchSpecifier: 'ExportBatchSpecifier',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        ForStatement: 'ForStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        FunctionTypeAnnotation: 'FunctionTypeAnnotation',\n        FunctionTypeParam: 'FunctionTypeParam',\n        GenericTypeAnnotation: 'GenericTypeAnnotation',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        InterfaceDeclaration: 'InterfaceDeclaration',\n        InterfaceExtends: 'InterfaceExtends',\n        IntersectionTypeAnnotation: 'IntersectionTypeAnnotation',\n        LabeledStatement: 'LabeledStatement',\n        Literal: 'Literal',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        NewExpression: 'NewExpression',\n        NullableTypeAnnotation: 'NullableTypeAnnotation',\n        NumberTypeAnnotation: 'NumberTypeAnnotation',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        ObjectTypeAnnotation: 'ObjectTypeAnnotation',\n        ObjectTypeCallProperty: 'ObjectTypeCallProperty',\n        ObjectTypeIndexer: 'ObjectTypeIndexer',\n        ObjectTypeProperty: 'ObjectTypeProperty',\n        Program: 'Program',\n        Property: 'Property',\n        QualifiedTypeIdentifier: 'QualifiedTypeIdentifier',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        SpreadProperty: 'SpreadProperty',\n        StringLiteralTypeAnnotation: 'StringLiteralTypeAnnotation',\n        StringTypeAnnotation: 'StringTypeAnnotation',\n        SwitchCase: 'SwitchCase',\n        SwitchStatement: 'SwitchStatement',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TupleTypeAnnotation: 'TupleTypeAnnotation',\n        TryStatement: 'TryStatement',\n        TypeAlias: 'TypeAlias',\n        TypeAnnotation: 'TypeAnnotation',\n        TypeCastExpression: 'TypeCastExpression',\n        TypeofTypeAnnotation: 'TypeofTypeAnnotation',\n        TypeParameterDeclaration: 'TypeParameterDeclaration',\n        TypeParameterInstantiation: 'TypeParameterInstantiation',\n        UnaryExpression: 'UnaryExpression',\n        UnionTypeAnnotation: 'UnionTypeAnnotation',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        VoidTypeAnnotation: 'VoidTypeAnnotation',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        JSXIdentifier: 'JSXIdentifier',\n        JSXNamespacedName: 'JSXNamespacedName',\n        JSXMemberExpression: 'JSXMemberExpression',\n        JSXEmptyExpression: 'JSXEmptyExpression',\n        JSXExpressionContainer: 'JSXExpressionContainer',\n        JSXElement: 'JSXElement',\n        JSXClosingElement: 'JSXClosingElement',\n        JSXOpeningElement: 'JSXOpeningElement',\n        JSXAttribute: 'JSXAttribute',\n        JSXSpreadAttribute: 'JSXSpreadAttribute',\n        JSXText: 'JSXText',\n        YieldExpression: 'YieldExpression',\n        AwaitExpression: 'AwaitExpression'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    ClassPropertyType = {\n        'static': 'static',\n        prototype: 'prototype'\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken: 'Unexpected token %0',\n        UnexpectedNumber: 'Unexpected number',\n        UnexpectedString: 'Unexpected string',\n        UnexpectedIdentifier: 'Unexpected identifier',\n        UnexpectedReserved: 'Unexpected reserved word',\n        UnexpectedTemplate: 'Unexpected quasi %0',\n        UnexpectedEOS: 'Unexpected end of input',\n        NewlineAfterThrow: 'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp: 'Invalid regular expression: missing /',\n        InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n        InvalidLHSInFormalsList: 'Invalid left-hand side in formals list',\n        InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally: 'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalDuplicateClassProperty: 'Illegal duplicate property in class definition',\n        IllegalClassConstructorProperty: 'Illegal constructor property in class definition',\n        IllegalReturn: 'Illegal return statement',\n        IllegalSpread: 'Illegal spread element',\n        StrictModeWith: 'Strict mode code may not include a with statement',\n        StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n        StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        ParameterAfterRestParameter: 'Rest parameter must be final parameter of an argument list',\n        DefaultRestParameter: 'Rest parameter can not have a default value',\n        ElementAfterSpreadElement: 'Spread must be the final element of an element list',\n        PropertyAfterSpreadProperty: 'A rest property must be the final property of an object literal',\n        ObjectPatternAsRestParameter: 'Invalid rest parameter',\n        ObjectPatternAsSpread: 'Invalid spread argument',\n        StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n        StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty: 'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty: 'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet: 'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord: 'Use of future reserved word in strict mode',\n        MissingFromClause: 'Missing from clause',\n        NoAsAfterImportNamespace: 'Missing as after import *',\n        InvalidModuleSpecifier: 'Invalid module specifier',\n        IllegalImportDeclaration: 'Illegal import declaration',\n        IllegalExportDeclaration: 'Illegal export declaration',\n        NoUninitializedConst: 'Const must be initialized',\n        ComprehensionRequiresBlock: 'Comprehension must have at least one block',\n        ComprehensionError: 'Comprehension Error',\n        EachNotAllowed: 'Each is not supported',\n        InvalidJSXAttributeValue: 'JSX value should be either an expression or a quoted JSX text',\n        ExpectedJSXClosingTag: 'Expected corresponding JSX closing tag for %0',\n        AdjacentJSXElements: 'Adjacent JSX elements must be wrapped in an enclosing tag',\n        ConfusedAboutFunctionType: 'Unexpected token =>. It looks like ' +\n            'you are trying to write a function type, but you ended up ' +\n            'writing a grouped type followed by an =>, which is a syntax ' +\n            'error. Remember, function type parameters are named so function ' +\n            'types look like (name1: type1, name2: type2) => returnType. You ' +\n            'probably wrote (type1) => returnType'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]'),\n        LeadingZeros: new RegExp('^0+(?!$)')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        /* istanbul ignore if */\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function StringMap() {\n        this.$data = {};\n    }\n\n    StringMap.prototype.get = function (key) {\n        key = '$' + key;\n        return this.$data[key];\n    };\n\n    StringMap.prototype.set = function (key, value) {\n        key = '$' + key;\n        this.$data[key] = value;\n        return this;\n    };\n\n    StringMap.prototype.has = function (key) {\n        key = '$' + key;\n        return Object.prototype.hasOwnProperty.call(this.$data, key);\n    };\n\n    StringMap.prototype.delete = function (key) {\n        key = '$' + key;\n        return delete this.$data[key];\n    };\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 32) ||  // space\n            (ch === 9) ||      // tab\n            (ch === 0xB) ||\n            (ch === 0xC) ||\n            (ch === 0xA0) ||\n            (ch >= 0x1680 && '\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\uFEFF'.indexOf(String.fromCharCode(ch)) > 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 10) || (ch === 13) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n            (ch >= 65 && ch <= 90) ||         // A..Z\n            (ch >= 97 && ch <= 122) ||        // a..z\n            (ch >= 48 && ch <= 57) ||         // 0..9\n            (ch === 92) ||                    // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' is only treated as a keyword in strict mode.\n        // 'let' is for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function addComment(type, value, start, end, loc) {\n        var comment;\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function skipSingleLineComment() {\n        var start, loc, ch, comment;\n\n        start = index - 2;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart - 2\n            }\n        };\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            ++index;\n            if (isLineTerminator(ch)) {\n                if (extra.comments) {\n                    comment = source.slice(start + 2, index - 1);\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    addComment('Line', comment, start, index - 1, loc);\n                }\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                return;\n            }\n        }\n\n        if (extra.comments) {\n            comment = source.slice(start + 2, index);\n            loc.end = {\n                line: lineNumber,\n                column: index - lineStart\n            };\n            addComment('Line', comment, start, index, loc);\n        }\n    }\n\n    function skipMultiLineComment() {\n        var start, loc, ch, comment;\n\n        if (extra.comments) {\n            start = index - 2;\n            loc = {\n                start: {\n                    line: lineNumber,\n                    column: index - lineStart - 2\n                }\n            };\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isLineTerminator(ch)) {\n                if (ch === 13 && source.charCodeAt(index + 1) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                ++index;\n                lineStart = index;\n                if (index >= length) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else if (ch === 42) {\n                // Block comment ends with '*/' (char #42, char #47).\n                if (source.charCodeAt(index + 1) === 47) {\n                    ++index;\n                    ++index;\n                    if (extra.comments) {\n                        comment = source.slice(start + 2, index - 2);\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        addComment('Block', comment, start, index, loc);\n                    }\n                    return;\n                }\n                ++index;\n            } else {\n                ++index;\n            }\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    function skipComment() {\n        var ch;\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n            } else if (ch === 47) { // 47 is '/'\n                ch = source.charCodeAt(index + 1);\n                if (ch === 47) {\n                    ++index;\n                    ++index;\n                    skipSingleLineComment();\n                } else if (ch === 42) {  // 42 is '*'\n                    ++index;\n                    ++index;\n                    skipMultiLineComment();\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function scanUnicodeCodePointEscape() {\n        var ch, code, cu1, cu2;\n\n        ch = source[index];\n        code = 0;\n\n        // At least, one hex digit is required.\n        if (ch === '}') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        while (index < length) {\n            ch = source[index++];\n            if (!isHexDigit(ch)) {\n                break;\n            }\n            code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n        }\n\n        if (code > 0x10FFFF || ch !== '}') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        // UTF-16 Encoding\n        if (code <= 0xFFFF) {\n            return String.fromCharCode(code);\n        }\n        cu1 = ((code - 0x10000) >> 10) + 0xD800;\n        cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n        return String.fromCharCode(cu1, cu2);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (char #92, char #117) denotes an escaped character.\n        if (ch === 92) {\n            if (source.charCodeAt(index) !== 117) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (char #92, char #117) denotes an escaped character.\n            if (ch === 92) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 117) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 92) {\n                // Blackslash (char #92) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (char #92) starts an escaped character.\n        id = (source.charCodeAt(index) === 92) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        if (state.inJSXTag || state.inJSXChild) {\n            // Don't need to check for '{' and '}' as it's already handled\n            // correctly by default.\n            switch (code) {\n            case 60:  // <\n            case 62:  // >\n                ++index;\n                return {\n                    type: Token.Punctuator,\n                    value: String.fromCharCode(code),\n                    lineNumber: lineNumber,\n                    lineStart: lineStart,\n                    range: [start, index]\n                };\n            }\n        }\n\n        switch (code) {\n        // Check for most common single-character punctuators.\n        case 40:   // ( open bracket\n        case 41:   // ) close bracket\n        case 59:   // ; semicolon\n        case 44:   // , comma\n        case 91:   // [\n        case 93:   // ]\n        case 58:   // :\n        case 63:   // ?\n        case 126:  // ~\n            ++index;\n            if (extra.tokenize && code === 40) {\n                extra.openParenToken = extra.tokens.length;\n            }\n\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n\n        case 123:  // { open curly brace\n        case 125:  // } close curly brace\n            ++index;\n            if (extra.tokenize && code === 123) {\n                extra.openCurlyToken = extra.tokens.length;\n            }\n\n            // lookahead2 function can cause tokens to be scanned twice and in doing so\n            // would wreck the curly stack by pushing the same token onto the stack twice.\n            // curlyLastIndex ensures each token is pushed or popped exactly once\n            if (index > state.curlyLastIndex) {\n                state.curlyLastIndex = index;\n                if (code === 123) {\n                    state.curlyStack.push('{');\n                } else {\n                    state.curlyStack.pop();\n                }\n            }\n\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (char #61) marks an assignment or comparison operator.\n            if (code2 === 61) {\n                switch (code) {\n                case 37:  // %\n                case 38:  // &\n                case 42:  // *:\n                case 43:  // +\n                case 45:  // -\n                case 47:  // /\n                case 60:  // <\n                case 62:  // >\n                case 94:  // ^\n                case 124: // |\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n\n                case 33: // !\n                case 61: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 61) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        range: [start, index]\n                    };\n                default:\n                    break;\n                }\n            }\n            break;\n        }\n\n        // Peek more characters.\n\n        ch2 = source[index + 1];\n        ch3 = source[index + 2];\n        ch4 = source[index + 3];\n\n        // 4-character punctuator: >>>=\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '>') {\n            if (ch4 === '=') {\n                index += 4;\n                return {\n                    type: Token.Punctuator,\n                    value: '>>>=',\n                    lineNumber: lineNumber,\n                    lineStart: lineStart,\n                    range: [start, index]\n                };\n            }\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '>' && !state.inType) {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '>>>',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '<' && ch2 === '<' && ch3 === '=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '<<=',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '>' && ch2 === '>' && ch3 === '=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '>>=',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '.' && ch2 === '.' && ch3 === '.') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: '...',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n\n        // Don't match these tokens if we're in a type, since they never can\n        // occur and can mess up types like Map<string, Array<string>>\n        if (ch1 === ch2 && ('+-<>&|'.indexOf(ch1) >= 0) && !state.inType) {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch1 + ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '=' && ch2 === '>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: '=>',\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        if (ch1 === '.') {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanBinaryLiteral(start) {\n        var ch, number;\n\n        number = '';\n\n        while (index < length) {\n            ch = source[index];\n            if (ch !== '0' && ch !== '1') {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            // only 0b or 0B\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (index < length) {\n            ch = source.charCodeAt(index);\n            /* istanbul ignore else */\n            if (isIdentifierStart(ch) || isDecimalDigit(ch)) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 2),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanOctalLiteral(prefix, start) {\n        var number, octal;\n\n        if (isOctalDigit(prefix)) {\n            octal = true;\n            number = '0' + source[index++];\n        } else {\n            octal = false;\n            ++index;\n            number = '';\n        }\n\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (!octal && number.length === 0) {\n            // only 0o or 0O\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            // Octal number in ES6 starts with '0o'.\n            // Binary number in ES6 starts with '0b'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (ch === 'b' || ch === 'B') {\n                    ++index;\n                    return scanBinaryLiteral(start);\n                }\n                if (ch === 'o' || ch === 'O' || isOctalDigit(ch)) {\n                    return scanOctalLiteral(ch, start);\n                }\n                // decimal number starts with '0' such as '09' is illegal.\n                if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        if (source[index] === '{') {\n                            ++index;\n                            str += scanUnicodeCodePointEscape();\n                        } else {\n                            restore = index;\n                            unescaped = scanHexEscape(ch);\n                            if (unescaped) {\n                                str += unescaped;\n                            } else {\n                                index = restore;\n                                str += ch;\n                            }\n                        }\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            /* istanbul ignore else */\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch === '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanTemplate() {\n        var cooked = '', ch, start, terminated, head, tail, restore, unescaped, code, octal;\n\n        terminated = false;\n        tail = false;\n        start = index;\n        head = (source[index] === '`');\n\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n            if (ch === '`') {\n                tail = true;\n                terminated = true;\n                break;\n            } else if (ch === '$') {\n                if (source[index] === '{') {\n                    ++index;\n                    terminated = true;\n                    break;\n                }\n                cooked += ch;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        cooked += '\\n';\n                        break;\n                    case 'r':\n                        cooked += '\\r';\n                        break;\n                    case 't':\n                        cooked += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        if (source[index] === '{') {\n                            ++index;\n                            cooked += scanUnicodeCodePointEscape();\n                        } else {\n                            restore = index;\n                            unescaped = scanHexEscape(ch);\n                            if (unescaped) {\n                                cooked += unescaped;\n                            } else {\n                                index = restore;\n                                cooked += ch;\n                            }\n                        }\n                        break;\n                    case 'b':\n                        cooked += '\\b';\n                        break;\n                    case 'f':\n                        cooked += '\\f';\n                        break;\n                    case 'v':\n                        cooked += '\\v';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            /* istanbul ignore else */\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            cooked += String.fromCharCode(code);\n                        } else {\n                            cooked += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch === '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                ++lineNumber;\n                if (ch === '\\r' && source[index] === '\\n') {\n                    ++index;\n                }\n                lineStart = index;\n                cooked += '\\n';\n            } else {\n                cooked += ch;\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (index > state.curlyLastIndex) {\n            state.curlyLastIndex = index;\n            if (!tail) {\n                state.curlyStack.push('template');\n            }\n\n            if (!head) {\n                state.curlyStack.pop();\n            }\n        }\n\n        return {\n            type: Token.Template,\n            value: {\n                cooked: cooked,\n                raw: source.slice(start + 1, index - ((tail) ? 1 : 2))\n            },\n            head: head,\n            tail: tail,\n            octal: octal,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function testRegExp(pattern, flags) {\n        var tmp = pattern,\n            value;\n\n        if (flags.indexOf('u') >= 0) {\n            // Replace each astral symbol and every Unicode code point\n            // escape sequence with a single ASCII symbol to avoid throwing on\n            // regular expressions that are only valid in combination with the\n            // `/u` flag.\n            // Note: replacing with the ASCII symbol `x` might cause false\n            // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n            // perfectly valid pattern that is equivalent to `[a-b]`, but it\n            // would be replaced by `[x-b]` which throws an error.\n            tmp = tmp\n                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                    if (parseInt($1, 16) <= 0x10FFFF) {\n                        return 'x';\n                    }\n                    throwError({}, Messages.InvalidRegExp);\n                })\n                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n        }\n\n        // First, detect invalid regular expressions.\n        try {\n            value = new RegExp(tmp);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n\n        // Return a regular expression object for this pattern-flag pair, or\n        // `null` in case the current environment doesn't support the flags it\n        // uses.\n        try {\n            return new RegExp(pattern, flags);\n        } catch (exception) {\n            return null;\n        }\n    }\n\n    function scanRegExpBody() {\n        var ch, str, classMarker, terminated, body;\n\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        classMarker = false;\n        terminated = false;\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (ch === '\\\\') {\n                ch = source[index++];\n                // ECMA-262 7.8.5\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n                str += ch;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnterminatedRegExp);\n            } else if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        body = str.substr(1, str.length - 2);\n        return {\n            value: body,\n            literal: str\n        };\n    }\n\n    function scanRegExpFlags() {\n        var ch, str, flags, restore;\n\n        str = '';\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                } else {\n                    str += '\\\\';\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        return {\n            value: flags,\n            literal: str\n        };\n    }\n\n    function scanRegExp() {\n        var start, body, flags, value;\n\n        lookahead = null;\n        skipComment();\n        start = index;\n\n        body = scanRegExpBody();\n        flags = scanRegExpFlags();\n        value = testRegExp(body.value, flags.value);\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                regex: {\n                    pattern: body.value,\n                    flags: flags.value\n                },\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [start, index]\n            };\n        }\n\n        return {\n            literal: body.literal + flags.literal,\n            value: value,\n            regex: {\n                pattern: body.value,\n                flags: flags.value\n            },\n            range: [start, index]\n        };\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return scanRegExp();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return scanRegExp();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return scanRegExp();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return scanRegExp();\n            }\n            return scanRegExp();\n        }\n        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n            return scanRegExp();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        if (!state.inJSXChild) {\n            skipComment();\n        }\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                range: [index, index]\n            };\n        }\n\n        if (state.inJSXChild) {\n            return advanceJSXChild();\n        }\n\n        ch = source.charCodeAt(index);\n\n        // Very common: ( and ) and ;\n        if (ch === 40 || ch === 41 || ch === 58) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (#39) or double quote (#34).\n        if (ch === 39 || ch === 34) {\n            if (state.inJSXTag) {\n                return scanJSXStringLiteral();\n            }\n            return scanStringLiteral();\n        }\n\n        if (state.inJSXTag && isJSXIdentifierStart(ch)) {\n            return scanJSXIdentifier();\n        }\n\n        // Template literals start with backtick (#96) for template head\n        // or close curly (#125) for template middle or template tail.\n        if (ch === 96 || (ch === 125 && state.curlyStack[state.curlyStack.length - 1] === 'template')) {\n            return scanTemplate();\n        }\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Dot (.) char #46 can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 46) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) char #47 can also start a regex.\n        if (extra.tokenize && ch === 47) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.range[1];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = advance();\n\n        index = token.range[1];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function lookahead2() {\n        var adv, pos, line, start, result;\n\n        // If we are collecting the tokens, don't grab the next one yet.\n        /* istanbul ignore next */\n        adv = (typeof extra.advance === 'function') ? extra.advance : advance;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n\n        // Scan for the next immediate token.\n        /* istanbul ignore if */\n        if (lookahead === null) {\n            lookahead = adv();\n        }\n        index = lookahead.range[1];\n        lineNumber = lookahead.lineNumber;\n        lineStart = lookahead.lineStart;\n\n        // Grab the token right after.\n        result = adv();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return result;\n    }\n\n    function rewind(token) {\n        index = token.range[0];\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n        lookahead = token;\n    }\n\n    function markerCreate() {\n        if (!extra.loc && !extra.range) {\n            return undefined;\n        }\n        skipComment();\n        return {offset: index, line: lineNumber, col: index - lineStart};\n    }\n\n    function markerCreatePreserveWhitespace() {\n        if (!extra.loc && !extra.range) {\n            return undefined;\n        }\n        return {offset: index, line: lineNumber, col: index - lineStart};\n    }\n\n    function processComment(node) {\n        var lastChild,\n            trailingComments,\n            bottomRight = extra.bottomRightStack,\n            last = bottomRight[bottomRight.length - 1];\n\n        if (node.type === Syntax.Program) {\n            /* istanbul ignore else */\n            if (node.body.length > 0) {\n                return;\n            }\n        }\n\n        if (extra.trailingComments.length > 0) {\n            if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                trailingComments = extra.trailingComments;\n                extra.trailingComments = [];\n            } else {\n                extra.trailingComments.length = 0;\n            }\n        } else {\n            if (last && last.trailingComments && last.trailingComments[0].range[0] >= node.range[1]) {\n                trailingComments = last.trailingComments;\n                delete last.trailingComments;\n            }\n        }\n\n        // Eating the stack.\n        if (last) {\n            while (last && last.range[0] >= node.range[0]) {\n                lastChild = last;\n                last = bottomRight.pop();\n            }\n        }\n\n        if (lastChild) {\n            if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = lastChild.leadingComments;\n                delete lastChild.leadingComments;\n            }\n        } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n            node.leadingComments = extra.leadingComments;\n            extra.leadingComments = [];\n        }\n\n        if (trailingComments) {\n            node.trailingComments = trailingComments;\n        }\n\n        bottomRight.push(node);\n    }\n\n    function markerApply(marker, node) {\n        if (extra.range) {\n            node.range = [marker.offset, index];\n        }\n        if (extra.loc) {\n            node.loc = {\n                start: {\n                    line: marker.line,\n                    column: marker.col\n                },\n                end: {\n                    line: lineNumber,\n                    column: index - lineStart\n                }\n            };\n            node = delegate.postProcess(node);\n        }\n        if (extra.attachComment) {\n            processComment(node);\n        }\n        return node;\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        postProcess: function (node) {\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createForOfStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForOfStatement,\n                left: left,\n                right: right,\n                body: body\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body, rest, generator, expression,\n                                             isAsync, returnType, typeParameters) {\n            var funDecl = {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: generator,\n                expression: expression,\n                returnType: returnType,\n                typeParameters: typeParameters\n            };\n\n            if (isAsync) {\n                funDecl.async = true;\n            }\n\n            return funDecl;\n        },\n\n        createFunctionExpression: function (id, params, defaults, body, rest, generator, expression,\n                                            isAsync, returnType, typeParameters) {\n            var funExpr = {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: generator,\n                expression: expression,\n                returnType: returnType,\n                typeParameters: typeParameters\n            };\n\n            if (isAsync) {\n                funExpr.async = true;\n            }\n\n            return funExpr;\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name,\n                // Only here to initialize the shape of the object to ensure\n                // that the 'typeAnnotation' key is ordered before others that\n                // are added later (like 'loc' and 'range'). This just helps\n                // keep the shape of Identifier nodes consistent with everything\n                // else.\n                typeAnnotation: undefined,\n                optional: undefined\n            };\n        },\n\n        createTypeAnnotation: function (typeAnnotation) {\n            return {\n                type: Syntax.TypeAnnotation,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createTypeCast: function (expression, typeAnnotation) {\n            return {\n                type: Syntax.TypeCastExpression,\n                expression: expression,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createFunctionTypeAnnotation: function (params, returnType, rest, typeParameters) {\n            return {\n                type: Syntax.FunctionTypeAnnotation,\n                params: params,\n                returnType: returnType,\n                rest: rest,\n                typeParameters: typeParameters\n            };\n        },\n\n        createFunctionTypeParam: function (name, typeAnnotation, optional) {\n            return {\n                type: Syntax.FunctionTypeParam,\n                name: name,\n                typeAnnotation: typeAnnotation,\n                optional: optional\n            };\n        },\n\n        createNullableTypeAnnotation: function (typeAnnotation) {\n            return {\n                type: Syntax.NullableTypeAnnotation,\n                typeAnnotation: typeAnnotation\n            };\n        },\n\n        createArrayTypeAnnotation: function (elementType) {\n            return {\n                type: Syntax.ArrayTypeAnnotation,\n                elementType: elementType\n            };\n        },\n\n        createGenericTypeAnnotation: function (id, typeParameters) {\n            return {\n                type: Syntax.GenericTypeAnnotation,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createQualifiedTypeIdentifier: function (qualification, id) {\n            return {\n                type: Syntax.QualifiedTypeIdentifier,\n                qualification: qualification,\n                id: id\n            };\n        },\n\n        createTypeParameterDeclaration: function (params) {\n            return {\n                type: Syntax.TypeParameterDeclaration,\n                params: params\n            };\n        },\n\n        createTypeParameterInstantiation: function (params) {\n            return {\n                type: Syntax.TypeParameterInstantiation,\n                params: params\n            };\n        },\n\n        createAnyTypeAnnotation: function () {\n            return {\n                type: Syntax.AnyTypeAnnotation\n            };\n        },\n\n        createBooleanTypeAnnotation: function () {\n            return {\n                type: Syntax.BooleanTypeAnnotation\n            };\n        },\n\n        createNumberTypeAnnotation: function () {\n            return {\n                type: Syntax.NumberTypeAnnotation\n            };\n        },\n\n        createStringTypeAnnotation: function () {\n            return {\n                type: Syntax.StringTypeAnnotation\n            };\n        },\n\n        createStringLiteralTypeAnnotation: function (token) {\n            return {\n                type: Syntax.StringLiteralTypeAnnotation,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n        },\n\n        createVoidTypeAnnotation: function () {\n            return {\n                type: Syntax.VoidTypeAnnotation\n            };\n        },\n\n        createTypeofTypeAnnotation: function (argument) {\n            return {\n                type: Syntax.TypeofTypeAnnotation,\n                argument: argument\n            };\n        },\n\n        createTupleTypeAnnotation: function (types) {\n            return {\n                type: Syntax.TupleTypeAnnotation,\n                types: types\n            };\n        },\n\n        createObjectTypeAnnotation: function (properties, indexers, callProperties) {\n            return {\n                type: Syntax.ObjectTypeAnnotation,\n                properties: properties,\n                indexers: indexers,\n                callProperties: callProperties\n            };\n        },\n\n        createObjectTypeIndexer: function (id, key, value, isStatic) {\n            return {\n                type: Syntax.ObjectTypeIndexer,\n                id: id,\n                key: key,\n                value: value,\n                static: isStatic\n            };\n        },\n\n        createObjectTypeCallProperty: function (value, isStatic) {\n            return {\n                type: Syntax.ObjectTypeCallProperty,\n                value: value,\n                static: isStatic\n            };\n        },\n\n        createObjectTypeProperty: function (key, value, optional, isStatic) {\n            return {\n                type: Syntax.ObjectTypeProperty,\n                key: key,\n                value: value,\n                optional: optional,\n                static: isStatic\n            };\n        },\n\n        createUnionTypeAnnotation: function (types) {\n            return {\n                type: Syntax.UnionTypeAnnotation,\n                types: types\n            };\n        },\n\n        createIntersectionTypeAnnotation: function (types) {\n            return {\n                type: Syntax.IntersectionTypeAnnotation,\n                types: types\n            };\n        },\n\n        createTypeAlias: function (id, typeParameters, right) {\n            return {\n                type: Syntax.TypeAlias,\n                id: id,\n                typeParameters: typeParameters,\n                right: right\n            };\n        },\n\n        createInterface: function (id, typeParameters, body, extended) {\n            return {\n                type: Syntax.InterfaceDeclaration,\n                id: id,\n                typeParameters: typeParameters,\n                body: body,\n                extends: extended\n            };\n        },\n\n        createInterfaceExtends: function (id, typeParameters) {\n            return {\n                type: Syntax.InterfaceExtends,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createDeclareFunction: function (id) {\n            return {\n                type: Syntax.DeclareFunction,\n                id: id\n            };\n        },\n\n        createDeclareVariable: function (id) {\n            return {\n                type: Syntax.DeclareVariable,\n                id: id\n            };\n        },\n\n        createDeclareModule: function (id, body) {\n            return {\n                type: Syntax.DeclareModule,\n                id: id,\n                body: body\n            };\n        },\n\n        createJSXAttribute: function (name, value) {\n            return {\n                type: Syntax.JSXAttribute,\n                name: name,\n                value: value || null\n            };\n        },\n\n        createJSXSpreadAttribute: function (argument) {\n            return {\n                type: Syntax.JSXSpreadAttribute,\n                argument: argument\n            };\n        },\n\n        createJSXIdentifier: function (name) {\n            return {\n                type: Syntax.JSXIdentifier,\n                name: name\n            };\n        },\n\n        createJSXNamespacedName: function (namespace, name) {\n            return {\n                type: Syntax.JSXNamespacedName,\n                namespace: namespace,\n                name: name\n            };\n        },\n\n        createJSXMemberExpression: function (object, property) {\n            return {\n                type: Syntax.JSXMemberExpression,\n                object: object,\n                property: property\n            };\n        },\n\n        createJSXElement: function (openingElement, closingElement, children) {\n            return {\n                type: Syntax.JSXElement,\n                openingElement: openingElement,\n                closingElement: closingElement,\n                children: children\n            };\n        },\n\n        createJSXEmptyExpression: function () {\n            return {\n                type: Syntax.JSXEmptyExpression\n            };\n        },\n\n        createJSXExpressionContainer: function (expression) {\n            return {\n                type: Syntax.JSXExpressionContainer,\n                expression: expression\n            };\n        },\n\n        createJSXOpeningElement: function (name, attributes, selfClosing) {\n            return {\n                type: Syntax.JSXOpeningElement,\n                name: name,\n                selfClosing: selfClosing,\n                attributes: attributes\n            };\n        },\n\n        createJSXClosingElement: function (name) {\n            return {\n                type: Syntax.JSXClosingElement,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            var object = {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.range[0], token.range[1])\n            };\n            if (token.regex) {\n                object.regex = token.regex;\n            }\n            return object;\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value, method, shorthand, computed) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind,\n                method: method,\n                shorthand: shorthand,\n                computed: computed\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        },\n\n        createTemplateElement: function (value, tail) {\n            return {\n                type: Syntax.TemplateElement,\n                value: value,\n                tail: tail\n            };\n        },\n\n        createTemplateLiteral: function (quasis, expressions) {\n            return {\n                type: Syntax.TemplateLiteral,\n                quasis: quasis,\n                expressions: expressions\n            };\n        },\n\n        createSpreadElement: function (argument) {\n            return {\n                type: Syntax.SpreadElement,\n                argument: argument\n            };\n        },\n\n        createSpreadProperty: function (argument) {\n            return {\n                type: Syntax.SpreadProperty,\n                argument: argument\n            };\n        },\n\n        createTaggedTemplateExpression: function (tag, quasi) {\n            return {\n                type: Syntax.TaggedTemplateExpression,\n                tag: tag,\n                quasi: quasi\n            };\n        },\n\n        createArrowFunctionExpression: function (params, defaults, body, rest, expression, isAsync) {\n            var arrowExpr = {\n                type: Syntax.ArrowFunctionExpression,\n                id: null,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: rest,\n                generator: false,\n                expression: expression\n            };\n\n            if (isAsync) {\n                arrowExpr.async = true;\n            }\n\n            return arrowExpr;\n        },\n\n        createMethodDefinition: function (propertyType, kind, key, value, computed) {\n            return {\n                type: Syntax.MethodDefinition,\n                key: key,\n                value: value,\n                kind: kind,\n                'static': propertyType === ClassPropertyType.static,\n                computed: computed\n            };\n        },\n\n        createClassProperty: function (key, typeAnnotation, computed, isStatic) {\n            return {\n                type: Syntax.ClassProperty,\n                key: key,\n                typeAnnotation: typeAnnotation,\n                computed: computed,\n                static: isStatic\n            };\n        },\n\n        createClassBody: function (body) {\n            return {\n                type: Syntax.ClassBody,\n                body: body\n            };\n        },\n\n        createClassImplements: function (id, typeParameters) {\n            return {\n                type: Syntax.ClassImplements,\n                id: id,\n                typeParameters: typeParameters\n            };\n        },\n\n        createClassExpression: function (id, superClass, body, typeParameters, superTypeParameters, implemented) {\n            return {\n                type: Syntax.ClassExpression,\n                id: id,\n                superClass: superClass,\n                body: body,\n                typeParameters: typeParameters,\n                superTypeParameters: superTypeParameters,\n                implements: implemented\n            };\n        },\n\n        createClassDeclaration: function (id, superClass, body, typeParameters, superTypeParameters, implemented) {\n            return {\n                type: Syntax.ClassDeclaration,\n                id: id,\n                superClass: superClass,\n                body: body,\n                typeParameters: typeParameters,\n                superTypeParameters: superTypeParameters,\n                implements: implemented\n            };\n        },\n\n        createExportSpecifier: function (id, name) {\n            return {\n                type: Syntax.ExportSpecifier,\n                id: id,\n                name: name\n            };\n        },\n\n        createExportBatchSpecifier: function () {\n            return {\n                type: Syntax.ExportBatchSpecifier\n            };\n        },\n\n        createImportDefaultSpecifier: function (id) {\n            return {\n                type: Syntax.ImportDefaultSpecifier,\n                id: id\n            };\n        },\n\n        createImportNamespaceSpecifier: function (id) {\n            return {\n                type: Syntax.ImportNamespaceSpecifier,\n                id: id\n            };\n        },\n\n        createExportDeclaration: function (isDefault, declaration, specifiers, src, exportKind) {\n            return {\n                type: Syntax.ExportDeclaration,\n                'default': !!isDefault,\n                declaration: declaration,\n                specifiers: specifiers,\n                source: src,\n                exportKind: exportKind\n            };\n        },\n\n        createImportSpecifier: function (id, name) {\n            return {\n                type: Syntax.ImportSpecifier,\n                id: id,\n                name: name\n            };\n        },\n\n        createImportDeclaration: function (specifiers, src, importKind) {\n            return {\n                type: Syntax.ImportDeclaration,\n                specifiers: specifiers,\n                source: src,\n                importKind: importKind\n            };\n        },\n\n        createYieldExpression: function (argument, dlg) {\n            return {\n                type: Syntax.YieldExpression,\n                argument: argument,\n                delegate: dlg\n            };\n        },\n\n        createAwaitExpression: function (argument) {\n            return {\n                type: Syntax.AwaitExpression,\n                argument: argument\n            };\n        },\n\n        createComprehensionExpression: function (filter, blocks, body) {\n            return {\n                type: Syntax.ComprehensionExpression,\n                filter: filter,\n                blocks: blocks,\n                body: body\n            };\n        }\n\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, idx) {\n                    assert(idx < args.length, 'Message reference must be in range');\n                    return args[idx];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.range[0];\n            error.lineNumber = token.lineNumber;\n            error.column = token.range[0] - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral || token.type === Token.JSXText) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        if (token.type === Token.Template) {\n            throwError(token, Messages.UnexpectedTemplate, token.value.raw);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword, contextual) {\n        var token = lex();\n        if (token.type !== (contextual ? Token.Identifier : Token.Keyword) ||\n                token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified contextual keyword.\n    // If not, an exception will be thrown.\n\n    function expectContextualKeyword(keyword) {\n        return expectKeyword(keyword, true);\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword, contextual) {\n        var expectedType = contextual ? Token.Identifier : Token.Keyword;\n        return lookahead.type === expectedType && lookahead.value === keyword;\n    }\n\n    // Return true if the next token matches the specified contextual keyword\n\n    function matchContextualKeyword(keyword) {\n        return matchKeyword(keyword, true);\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    // Note that 'yield' is treated as a keyword in strict mode, but a\n    // contextual keyword (identifier) in non-strict mode, so we need to\n    // use matchKeyword('yield', false) and matchKeyword('yield', true)\n    // (i.e. matchContextualKeyword) appropriately.\n    function matchYield() {\n        return state.yieldAllowed && matchKeyword('yield', !strict);\n    }\n\n    function matchAsync() {\n        var backtrackToken = lookahead, matches = false;\n\n        if (matchContextualKeyword('async')) {\n            lex(); // Make sure peekLineTerminator() starts after 'async'.\n            matches = !peekLineTerminator();\n            rewind(backtrackToken); // Revert the lex().\n        }\n\n        return matches;\n    }\n\n    function matchAwait() {\n        return state.awaitAllowed && matchContextualKeyword('await');\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (match(';')) {\n            lex();\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    function isAssignableLeftHandSide(expr) {\n        return isLeftHandSide(expr) || expr.type === Syntax.ObjectPattern || expr.type === Syntax.ArrayPattern;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], blocks = [], filter = null, tmp, possiblecomprehension = true,\n            marker = markerCreate();\n\n        expect('[');\n        while (!match(']')) {\n            if (lookahead.value === 'for' &&\n                    lookahead.type === Token.Keyword) {\n                if (!possiblecomprehension) {\n                    throwError({}, Messages.ComprehensionError);\n                }\n                matchKeyword('for');\n                tmp = parseForStatement({ignoreBody: true});\n                tmp.of = tmp.type === Syntax.ForOfStatement;\n                tmp.type = Syntax.ComprehensionBlock;\n                if (tmp.left.kind) { // can't be let or const\n                    throwError({}, Messages.ComprehensionError);\n                }\n                blocks.push(tmp);\n            } else if (lookahead.value === 'if' &&\n                           lookahead.type === Token.Keyword) {\n                if (!possiblecomprehension) {\n                    throwError({}, Messages.ComprehensionError);\n                }\n                expectKeyword('if');\n                expect('(');\n                filter = parseExpression();\n                expect(')');\n            } else if (lookahead.value === ',' &&\n                           lookahead.type === Token.Punctuator) {\n                possiblecomprehension = false; // no longer allowed.\n                lex();\n                elements.push(null);\n            } else {\n                tmp = parseSpreadOrAssignmentExpression();\n                elements.push(tmp);\n                if (tmp && tmp.type === Syntax.SpreadElement) {\n                    if (!match(']')) {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                } else if (!(match(']') || matchKeyword('for') || matchKeyword('if'))) {\n                    expect(','); // this lexes.\n                    possiblecomprehension = false;\n                }\n            }\n        }\n\n        expect(']');\n\n        if (filter && !blocks.length) {\n            throwError({}, Messages.ComprehensionRequiresBlock);\n        }\n\n        if (blocks.length) {\n            if (elements.length !== 1) {\n                throwError({}, Messages.ComprehensionError);\n            }\n            return markerApply(marker, delegate.createComprehensionExpression(filter, blocks, elements[0]));\n        }\n        return markerApply(marker, delegate.createArrayExpression(elements));\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(options) {\n        var previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            params, defaults, body, marker = markerCreate();\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = options.generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = options.async;\n        params = options.params || [];\n        defaults = options.defaults || [];\n\n        body = parseConciseBody();\n        if (options.name && strict && isRestrictedWord(params[0].name)) {\n            throwErrorTolerant(options.name, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(marker, delegate.createFunctionExpression(\n            null,\n            params,\n            defaults,\n            body,\n            options.rest || null,\n            options.generator,\n            body.type !== Syntax.BlockStatement,\n            options.async,\n            options.returnType,\n            options.typeParameters\n        ));\n    }\n\n\n    function parsePropertyMethodFunction(options) {\n        var previousStrict, tmp, method;\n\n        previousStrict = strict;\n        strict = true;\n\n        tmp = parseParams();\n\n        if (tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, tmp.message);\n        }\n\n        method = parsePropertyFunction({\n            params: tmp.params,\n            defaults: tmp.defaults,\n            rest: tmp.rest,\n            generator: options.generator,\n            async: options.async,\n            returnType: tmp.returnType,\n            typeParameters: options.typeParameters\n        });\n\n        strict = previousStrict;\n\n        return method;\n    }\n\n\n    function parseObjectPropertyKey() {\n        var marker = markerCreate(),\n            token = lex(),\n            propertyKey,\n            result;\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (token.type === Token.Punctuator && token.value === '[') {\n            // For computed properties we should skip the [ and ], and\n            // capture in marker only the assignment expression itself.\n            marker = markerCreate();\n            propertyKey = parseAssignmentExpression();\n            result = markerApply(marker, propertyKey);\n            expect(']');\n            return result;\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, param, computed,\n            marker = markerCreate(), returnType, typeParameters;\n\n        token = lookahead;\n        computed = (token.value === '[' && token.type === Token.Punctuator);\n\n        if (token.type === Token.Identifier || computed || matchAsync()) {\n            id = parseObjectPropertyKey();\n\n            if (match(':')) {\n                lex();\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        id,\n                        parseAssignmentExpression(),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (match('(') || match('<')) {\n                if (match('<')) {\n                    typeParameters = parseTypeParameterDeclaration();\n                }\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        id,\n                        parsePropertyMethodFunction({\n                            generator: false,\n                            async: false,\n                            typeParameters: typeParameters\n                        }),\n                        true,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                expect('(');\n                expect(')');\n                if (match(':')) {\n                    returnType = parseTypeAnnotation();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'get',\n                        key,\n                        parsePropertyFunction({\n                            generator: false,\n                            async: false,\n                            returnType: returnType\n                        }),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (token.value === 'set') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                expect('(');\n                token = lookahead;\n                param = [ parseTypeAnnotatableIdentifier() ];\n                expect(')');\n                if (match(':')) {\n                    returnType = parseTypeAnnotation();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'set',\n                        key,\n                        parsePropertyFunction({\n                            params: param,\n                            generator: false,\n                            async: false,\n                            name: token,\n                            returnType: returnType\n                        }),\n                        false,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (token.value === 'async') {\n                computed = (lookahead.value === '[');\n                key = parseObjectPropertyKey();\n\n                if (match('<')) {\n                    typeParameters = parseTypeParameterDeclaration();\n                }\n\n                return markerApply(\n                    marker,\n                    delegate.createProperty(\n                        'init',\n                        key,\n                        parsePropertyMethodFunction({\n                            generator: false,\n                            async: true,\n                            typeParameters: typeParameters\n                        }),\n                        true,\n                        false,\n                        computed\n                    )\n                );\n            }\n\n            if (computed) {\n                // Computed properties can only be used with full notation.\n                throwUnexpected(lookahead);\n            }\n\n            return markerApply(\n                marker,\n                delegate.createProperty('init', id, id, false, true, false)\n            );\n        }\n\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            if (!match('*')) {\n                throwUnexpected(token);\n            }\n            lex();\n\n            computed = (lookahead.type === Token.Punctuator && lookahead.value === '[');\n\n            id = parseObjectPropertyKey();\n\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n\n            if (!match('(')) {\n                throwUnexpected(lex());\n            }\n\n            return markerApply(marker, delegate.createProperty(\n                'init',\n                id,\n                parsePropertyMethodFunction({\n                    generator: true,\n                    typeParameters: typeParameters\n                }),\n                true,\n                false,\n                computed\n            ));\n        }\n        key = parseObjectPropertyKey();\n        if (match(':')) {\n            lex();\n            return markerApply(marker, delegate.createProperty('init', key, parseAssignmentExpression(), false, false, false));\n        }\n        if (match('(') || match('<')) {\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n            return markerApply(marker, delegate.createProperty(\n                'init',\n                key,\n                parsePropertyMethodFunction({\n                    generator: false,\n                    typeParameters: typeParameters\n                }),\n                true,\n                false,\n                false\n            ));\n        }\n        throwUnexpected(lex());\n    }\n\n    function parseObjectSpreadProperty() {\n        var marker = markerCreate();\n        expect('...');\n        return markerApply(marker, delegate.createSpreadProperty(parseAssignmentExpression()));\n    }\n\n    function getFieldName(key) {\n        var toString = String;\n        if (key.type === Syntax.Identifier) {\n            return key.name;\n        }\n        return toString(key.value);\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, kind, storedKind, map = new StringMap(),\n            marker = markerCreate(), toString = String;\n\n        expect('{');\n\n        while (!match('}')) {\n            if (match('...')) {\n                property = parseObjectSpreadProperty();\n            } else {\n                property = parseObjectProperty();\n\n                if (property.key.type === Syntax.Identifier) {\n                    name = property.key.name;\n                } else {\n                    name = toString(property.key.value);\n                }\n                kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n                if (map.has(name)) {\n                    storedKind = map.get(name);\n                    if (storedKind === PropertyKind.Data) {\n                        if (strict && kind === PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                        } else if (kind !== PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.AccessorDataProperty);\n                        }\n                    } else {\n                        if (kind === PropertyKind.Data) {\n                            throwErrorTolerant({}, Messages.AccessorDataProperty);\n                        } else if (storedKind & kind) {\n                            throwErrorTolerant({}, Messages.AccessorGetSet);\n                        }\n                    }\n                    map.set(name, storedKind | kind);\n                } else {\n                    map.set(name, kind);\n                }\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return markerApply(marker, delegate.createObjectExpression(properties));\n    }\n\n    function parseTemplateElement(option) {\n        var marker, token;\n\n        if (lookahead.type !== Token.Template || (option.head && !lookahead.head)) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        marker = markerCreate();\n        token = lex();\n\n        if (strict && token.octal) {\n            throwError(token, Messages.StrictOctalLiteral);\n        }\n        return markerApply(marker, delegate.createTemplateElement({ raw: token.value.raw, cooked: token.value.cooked }, token.tail));\n    }\n\n    function parseTemplateLiteral() {\n        var quasi, quasis, expressions, marker = markerCreate();\n\n        quasi = parseTemplateElement({ head: true });\n        quasis = [ quasi ];\n        expressions = [];\n\n        while (!quasi.tail) {\n            expressions.push(parseExpression());\n            quasi = parseTemplateElement({ head: false });\n            quasis.push(quasi);\n        }\n\n        return markerApply(marker, delegate.createTemplateLiteral(quasis, expressions));\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr, marker, typeAnnotation;\n\n        expect('(');\n\n        ++state.parenthesizedCount;\n\n        marker = markerCreate();\n\n        expr = parseExpression();\n\n        if (match(':')) {\n            typeAnnotation = parseTypeAnnotation();\n            expr = markerApply(marker, delegate.createTypeCast(\n                expr,\n                typeAnnotation\n            ));\n        }\n\n        expect(')');\n\n        return expr;\n    }\n\n    function matchAsyncFuncExprOrDecl() {\n        var token;\n\n        if (matchAsync()) {\n            token = lookahead2();\n            if (token.type === Token.Keyword && token.value === 'function') {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var marker, type, token, expr;\n\n        type = lookahead.type;\n\n        if (type === Token.Identifier) {\n            marker = markerCreate();\n            return markerApply(marker, delegate.createIdentifier(lex().value));\n        }\n\n        if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            marker = markerCreate();\n            return markerApply(marker, delegate.createLiteral(lex()));\n        }\n\n        if (type === Token.Keyword) {\n            if (matchKeyword('this')) {\n                marker = markerCreate();\n                lex();\n                return markerApply(marker, delegate.createThisExpression());\n            }\n\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n\n            if (matchKeyword('class')) {\n                return parseClassExpression();\n            }\n\n            if (matchKeyword('super')) {\n                marker = markerCreate();\n                lex();\n                return markerApply(marker, delegate.createIdentifier('super'));\n            }\n        }\n\n        if (type === Token.BooleanLiteral) {\n            marker = markerCreate();\n            token = lex();\n            token.value = (token.value === 'true');\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (type === Token.NullLiteral) {\n            marker = markerCreate();\n            token = lex();\n            token.value = null;\n            return markerApply(marker, delegate.createLiteral(token));\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('/') || match('/=')) {\n            marker = markerCreate();\n            expr = delegate.createLiteral(scanRegExp());\n            peek();\n            return markerApply(marker, expr);\n        }\n\n        if (type === Token.Template) {\n            return parseTemplateLiteral();\n        }\n\n        if (match('<')) {\n            return parseJSXElement();\n        }\n\n        throwUnexpected(lex());\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [], arg;\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                arg = parseSpreadOrAssignmentExpression();\n                args.push(arg);\n\n                if (arg.type === Syntax.SpreadElement) {\n                    if (match(')')) {\n                        break;\n                    } else {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                }\n\n                if (match(')')) {\n                    break;\n                } else {\n                    expect(',');\n                    if (match(')')) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseSpreadOrAssignmentExpression() {\n        if (match('...')) {\n            var marker = markerCreate();\n            lex();\n            return markerApply(marker, delegate.createSpreadElement(parseAssignmentExpression()));\n        }\n        return parseAssignmentExpression();\n    }\n\n    function parseNonComputedProperty() {\n        var marker = markerCreate(),\n            token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, marker = markerCreate();\n\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return markerApply(marker, delegate.createNewExpression(callee, args));\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, marker = markerCreate();\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[') || match('(') || (lookahead.type === Token.Template && lookahead.head)) {\n            if (match('(')) {\n                args = parseArguments();\n                expr = markerApply(marker, delegate.createCallExpression(expr, args));\n            } else if (match('[')) {\n                expr = markerApply(marker, delegate.createMemberExpression('[', expr, parseComputedMember()));\n            } else if (match('.')) {\n                expr = markerApply(marker, delegate.createMemberExpression('.', expr, parseNonComputedMember()));\n            } else {\n                expr = markerApply(marker, delegate.createTaggedTemplateExpression(expr, parseTemplateLiteral()));\n            }\n        }\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, marker = markerCreate();\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[') || (lookahead.type === Token.Template && lookahead.head)) {\n            if (match('[')) {\n                expr = markerApply(marker, delegate.createMemberExpression('[', expr, parseComputedMember()));\n            } else if (match('.')) {\n                expr = markerApply(marker, delegate.createMemberExpression('.', expr, parseNonComputedMember()));\n            } else {\n                expr = markerApply(marker, delegate.createTaggedTemplateExpression(expr, parseTemplateLiteral()));\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var marker = markerCreate(),\n            expr = parseLeftHandSideExpressionAllowCall(),\n            token;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return expr;\n        }\n\n        if ((match('++') || match('--')) && !peekLineTerminator()) {\n            // 11.3.1, 11.3.2\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPostfix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            token = lex();\n            expr = markerApply(marker, delegate.createPostfixExpression(token.value, expr));\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var marker, token, expr;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            return parsePostfixExpression();\n        }\n\n        if (match('++') || match('--')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            return markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n        }\n\n        if (match('+') || match('-') || match('~') || match('!')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            return markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n        }\n\n        if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            marker = markerCreate();\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = markerApply(marker, delegate.createUnaryExpression(token.value, expr));\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n            return expr;\n        }\n\n        return parsePostfixExpression();\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var expr, token, prec, previousAllowIn, stack, right, operator, left, i,\n            marker, markers;\n\n        previousAllowIn = state.allowIn;\n        state.allowIn = true;\n\n        marker = markerCreate();\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, previousAllowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, markerCreate()];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, previousAllowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers.pop();\n                markerApply(marker, expr);\n                stack.push(expr);\n                markers.push(marker);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(markerCreate());\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        state.allowIn = previousAllowIn;\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            markerApply(marker, expr);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, marker = markerCreate();\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = markerApply(marker, delegate.createConditionalExpression(expr, consequent, alternate));\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    // 12.14.5 AssignmentPattern\n\n    function reinterpretAsAssignmentBindingPattern(expr) {\n        var i, len, property, element;\n\n        if (expr.type === Syntax.ObjectExpression) {\n            expr.type = Syntax.ObjectPattern;\n            for (i = 0, len = expr.properties.length; i < len; i += 1) {\n                property = expr.properties[i];\n                if (property.type === Syntax.SpreadProperty) {\n                    if (i < len - 1) {\n                        throwError({}, Messages.PropertyAfterSpreadProperty);\n                    }\n                    reinterpretAsAssignmentBindingPattern(property.argument);\n                } else {\n                    if (property.kind !== 'init') {\n                        throwError({}, Messages.InvalidLHSInAssignment);\n                    }\n                    reinterpretAsAssignmentBindingPattern(property.value);\n                }\n            }\n        } else if (expr.type === Syntax.ArrayExpression) {\n            expr.type = Syntax.ArrayPattern;\n            for (i = 0, len = expr.elements.length; i < len; i += 1) {\n                element = expr.elements[i];\n                /* istanbul ignore else */\n                if (element) {\n                    reinterpretAsAssignmentBindingPattern(element);\n                }\n            }\n        } else if (expr.type === Syntax.Identifier) {\n            if (isRestrictedWord(expr.name)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n        } else if (expr.type === Syntax.SpreadElement) {\n            reinterpretAsAssignmentBindingPattern(expr.argument);\n            if (expr.argument.type === Syntax.ObjectPattern) {\n                throwError({}, Messages.ObjectPatternAsSpread);\n            }\n        } else {\n            /* istanbul ignore else */\n            if (expr.type !== Syntax.MemberExpression && expr.type !== Syntax.CallExpression && expr.type !== Syntax.NewExpression) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n        }\n    }\n\n    // 13.2.3 BindingPattern\n\n    function reinterpretAsDestructuredParameter(options, expr) {\n        var i, len, property, element;\n\n        if (expr.type === Syntax.ObjectExpression) {\n            expr.type = Syntax.ObjectPattern;\n            for (i = 0, len = expr.properties.length; i < len; i += 1) {\n                property = expr.properties[i];\n                if (property.type === Syntax.SpreadProperty) {\n                    if (i < len - 1) {\n                        throwError({}, Messages.PropertyAfterSpreadProperty);\n                    }\n                    reinterpretAsDestructuredParameter(options, property.argument);\n                } else {\n                    if (property.kind !== 'init') {\n                        throwError({}, Messages.InvalidLHSInFormalsList);\n                    }\n                    reinterpretAsDestructuredParameter(options, property.value);\n                }\n            }\n        } else if (expr.type === Syntax.ArrayExpression) {\n            expr.type = Syntax.ArrayPattern;\n            for (i = 0, len = expr.elements.length; i < len; i += 1) {\n                element = expr.elements[i];\n                if (element) {\n                    reinterpretAsDestructuredParameter(options, element);\n                }\n            }\n        } else if (expr.type === Syntax.Identifier) {\n            validateParam(options, expr, expr.name);\n        } else if (expr.type === Syntax.SpreadElement) {\n            // BindingRestElement only allows BindingIdentifier\n            if (expr.argument.type !== Syntax.Identifier) {\n                throwError({}, Messages.InvalidLHSInFormalsList);\n            }\n            validateParam(options, expr.argument, expr.argument.name);\n        } else {\n            throwError({}, Messages.InvalidLHSInFormalsList);\n        }\n    }\n\n    function reinterpretAsCoverFormalsList(expressions) {\n        var i, len, param, params, defaults, defaultCount, options, rest;\n\n        params = [];\n        defaults = [];\n        defaultCount = 0;\n        rest = null;\n        options = {\n            paramSet: new StringMap()\n        };\n\n        for (i = 0, len = expressions.length; i < len; i += 1) {\n            param = expressions[i];\n            if (param.type === Syntax.Identifier) {\n                params.push(param);\n                defaults.push(null);\n                validateParam(options, param, param.name);\n            } else if (param.type === Syntax.ObjectExpression || param.type === Syntax.ArrayExpression) {\n                reinterpretAsDestructuredParameter(options, param);\n                params.push(param);\n                defaults.push(null);\n            } else if (param.type === Syntax.SpreadElement) {\n                assert(i === len - 1, 'It is guaranteed that SpreadElement is last element by parseExpression');\n                if (param.argument.type !== Syntax.Identifier) {\n                    throwError({}, Messages.InvalidLHSInFormalsList);\n                }\n                reinterpretAsDestructuredParameter(options, param.argument);\n                rest = param.argument;\n            } else if (param.type === Syntax.AssignmentExpression) {\n                params.push(param.left);\n                defaults.push(param.right);\n                ++defaultCount;\n                validateParam(options, param.left, param.left.name);\n            } else {\n                return null;\n            }\n        }\n\n        if (options.message === Messages.StrictParamDupe) {\n            throwError(\n                strict ? options.stricted : options.firstRestricted,\n                options.message\n            );\n        }\n\n        if (defaultCount === 0) {\n            defaults = [];\n        }\n\n        return {\n            params: params,\n            defaults: defaults,\n            rest: rest,\n            stricted: options.stricted,\n            firstRestricted: options.firstRestricted,\n            message: options.message\n        };\n    }\n\n    function parseArrowFunctionExpression(options, marker) {\n        var previousStrict, previousYieldAllowed, previousAwaitAllowed, body;\n\n        expect('=>');\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = false;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = !!options.async;\n        body = parseConciseBody();\n\n        if (strict && options.firstRestricted) {\n            throwError(options.firstRestricted, options.message);\n        }\n        if (strict && options.stricted) {\n            throwErrorTolerant(options.stricted, options.message);\n        }\n\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(marker, delegate.createArrowFunctionExpression(\n            options.params,\n            options.defaults,\n            body,\n            options.rest,\n            body.type !== Syntax.BlockStatement,\n            !!options.async\n        ));\n    }\n\n    function parseAssignmentExpression() {\n        var marker, expr, token, params, oldParenthesizedCount,\n            startsWithParen = false, backtrackToken = lookahead,\n            possiblyAsync = false;\n\n        if (matchYield()) {\n            return parseYieldExpression();\n        }\n\n        if (matchAwait()) {\n            return parseAwaitExpression();\n        }\n\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        marker = markerCreate();\n\n        if (matchAsyncFuncExprOrDecl()) {\n            return parseFunctionExpression();\n        }\n\n        if (matchAsync()) {\n            // We can't be completely sure that this 'async' token is\n            // actually a contextual keyword modifying a function\n            // expression, so we might have to un-lex() it later by\n            // calling rewind(backtrackToken).\n            possiblyAsync = true;\n            lex();\n        }\n\n        if (match('(')) {\n            token = lookahead2();\n            if ((token.type === Token.Punctuator && token.value === ')') || token.value === '...') {\n                params = parseParams();\n                if (!match('=>')) {\n                    throwUnexpected(lex());\n                }\n                params.async = possiblyAsync;\n                return parseArrowFunctionExpression(params, marker);\n            }\n            startsWithParen = true;\n        }\n\n        token = lookahead;\n\n        // If the 'async' keyword is not followed by a '(' character or an\n        // identifier, then it can't be an arrow function modifier, and we\n        // should interpret it as a normal identifer.\n        if (possiblyAsync && !match('(') && token.type !== Token.Identifier) {\n            possiblyAsync = false;\n            rewind(backtrackToken);\n        }\n\n        expr = parseConditionalExpression();\n\n        if (match('=>') &&\n                (state.parenthesizedCount === oldParenthesizedCount ||\n                state.parenthesizedCount === (oldParenthesizedCount + 1))) {\n            if (expr.type === Syntax.Identifier) {\n                params = reinterpretAsCoverFormalsList([ expr ]);\n            } else if (expr.type === Syntax.AssignmentExpression ||\n                    expr.type === Syntax.ArrayExpression ||\n                    expr.type === Syntax.ObjectExpression) {\n                if (!startsWithParen) {\n                    throwUnexpected(lex());\n                }\n                params = reinterpretAsCoverFormalsList([ expr ]);\n            } else if (expr.type === Syntax.SequenceExpression) {\n                params = reinterpretAsCoverFormalsList(expr.expressions);\n            }\n            if (params) {\n                params.async = possiblyAsync;\n                return parseArrowFunctionExpression(params, marker);\n            }\n        }\n\n        // If we haven't returned by now, then the 'async' keyword was not\n        // a function modifier, and we should rewind and interpret it as a\n        // normal identifier.\n        if (possiblyAsync) {\n            possiblyAsync = false;\n            rewind(backtrackToken);\n            expr = parseConditionalExpression();\n        }\n\n        if (matchAssign()) {\n            // 11.13.1\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            // ES.next draf 11.13 Runtime Semantics step 1\n            if (match('=') && (expr.type === Syntax.ObjectExpression || expr.type === Syntax.ArrayExpression)) {\n                reinterpretAsAssignmentBindingPattern(expr);\n            } else if (!isLeftHandSide(expr)) {\n                throwError({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = markerApply(marker, delegate.createAssignmentExpression(lex().value, expr, parseAssignmentExpression()));\n        }\n\n        return expr;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var marker, expr, expressions, sequence, spreadFound, possibleArrow;\n\n        marker = markerCreate();\n        expr = parseAssignmentExpression();\n        expressions = [ expr ];\n\n        if (match(',')) {\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n\n                lex();\n\n                if (match(')')) {\n                    possibleArrow = lookahead2();\n                    if (\n                        possibleArrow.type === Token.Punctuator &&\n                        possibleArrow.value === '=>'\n                    ) {\n                        break;\n                    }\n                }\n\n                expr = parseSpreadOrAssignmentExpression();\n                expressions.push(expr);\n\n                if (expr.type === Syntax.SpreadElement) {\n                    spreadFound = true;\n                    if (!match(')')) {\n                        throwError({}, Messages.ElementAfterSpreadElement);\n                    }\n                    break;\n                }\n            }\n\n            if (expressions.length > 1) {\n                sequence = markerApply(marker, delegate.createSequenceExpression(expressions));\n            }\n        }\n\n        if (spreadFound && lookahead2().value !== '=>') {\n            throwError({}, Messages.IllegalSpread);\n        }\n\n        return sequence || expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, marker = markerCreate();\n\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return markerApply(marker, delegate.createBlockStatement(block));\n    }\n\n    // 12.2 Variable Statement\n\n    function parseTypeParameterDeclaration() {\n        var marker = markerCreate(), paramTypes = [];\n\n        expect('<');\n        while (!match('>')) {\n            paramTypes.push(parseTypeAnnotatableIdentifier());\n            if (!match('>')) {\n                expect(',');\n            }\n        }\n        expect('>');\n\n        return markerApply(marker, delegate.createTypeParameterDeclaration(\n            paramTypes\n        ));\n    }\n\n    function parseTypeParameterInstantiation() {\n        var marker = markerCreate(), oldInType = state.inType, paramTypes = [];\n\n        state.inType = true;\n\n        expect('<');\n        while (!match('>')) {\n            paramTypes.push(parseType());\n            if (!match('>')) {\n                expect(',');\n            }\n        }\n        expect('>');\n\n        state.inType = oldInType;\n\n        return markerApply(marker, delegate.createTypeParameterInstantiation(\n            paramTypes\n        ));\n    }\n\n    function parseObjectTypeIndexer(marker, isStatic) {\n        var id, key, value;\n\n        expect('[');\n        id = parseObjectPropertyKey();\n        expect(':');\n        key = parseType();\n        expect(']');\n        expect(':');\n        value = parseType();\n\n        return markerApply(marker, delegate.createObjectTypeIndexer(\n            id,\n            key,\n            value,\n            isStatic\n        ));\n    }\n\n    function parseObjectTypeMethodish(marker) {\n        var params = [], rest = null, returnType, typeParameters = null;\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        expect('(');\n        while (lookahead.type === Token.Identifier) {\n            params.push(parseFunctionTypeParam());\n            if (!match(')')) {\n                expect(',');\n            }\n        }\n\n        if (match('...')) {\n            lex();\n            rest = parseFunctionTypeParam();\n        }\n        expect(')');\n        expect(':');\n        returnType = parseType();\n\n        return markerApply(marker, delegate.createFunctionTypeAnnotation(\n            params,\n            returnType,\n            rest,\n            typeParameters\n        ));\n    }\n\n    function parseObjectTypeMethod(marker, isStatic, key) {\n        var optional = false, value;\n        value = parseObjectTypeMethodish(marker);\n\n        return markerApply(marker, delegate.createObjectTypeProperty(\n            key,\n            value,\n            optional,\n            isStatic\n        ));\n    }\n\n    function parseObjectTypeCallProperty(marker, isStatic) {\n        var valueMarker = markerCreate();\n        return markerApply(marker, delegate.createObjectTypeCallProperty(\n            parseObjectTypeMethodish(valueMarker),\n            isStatic\n        ));\n    }\n\n    function parseObjectType(allowStatic) {\n        var callProperties = [], indexers = [], marker, optional = false,\n            properties = [], propertyKey, propertyTypeAnnotation,\n            token, isStatic, matchStatic;\n\n        expect('{');\n\n        while (!match('}')) {\n            marker = markerCreate();\n            matchStatic =\n                   strict\n                   ? matchKeyword('static')\n                   : matchContextualKeyword('static');\n\n            if (allowStatic && matchStatic) {\n                token = lex();\n                isStatic = true;\n            }\n\n            if (match('[')) {\n                indexers.push(parseObjectTypeIndexer(marker, isStatic));\n            } else if (match('(') || match('<')) {\n                callProperties.push(parseObjectTypeCallProperty(marker, allowStatic));\n            } else {\n                if (isStatic && match(':')) {\n                    propertyKey = markerApply(marker, delegate.createIdentifier(token));\n                    throwErrorTolerant(token, Messages.StrictReservedWord);\n                } else {\n                    propertyKey = parseObjectPropertyKey();\n                }\n                if (match('<') || match('(')) {\n                    // This is a method property\n                    properties.push(parseObjectTypeMethod(marker, isStatic, propertyKey));\n                } else {\n                    if (match('?')) {\n                        lex();\n                        optional = true;\n                    }\n                    expect(':');\n                    propertyTypeAnnotation = parseType();\n                    properties.push(markerApply(marker, delegate.createObjectTypeProperty(\n                        propertyKey,\n                        propertyTypeAnnotation,\n                        optional,\n                        isStatic\n                    )));\n                }\n            }\n\n            if (match(';') || match(',')) {\n                lex();\n            } else if (!match('}')) {\n                throwUnexpected(lookahead);\n            }\n        }\n\n        expect('}');\n\n        return delegate.createObjectTypeAnnotation(\n            properties,\n            indexers,\n            callProperties\n        );\n    }\n\n    function parseGenericType() {\n        var marker = markerCreate(),\n            typeParameters = null, typeIdentifier;\n\n        typeIdentifier = parseVariableIdentifier();\n\n        while (match('.')) {\n            expect('.');\n            typeIdentifier = markerApply(marker, delegate.createQualifiedTypeIdentifier(\n                typeIdentifier,\n                parseVariableIdentifier()\n            ));\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterInstantiation();\n        }\n\n        return markerApply(marker, delegate.createGenericTypeAnnotation(\n            typeIdentifier,\n            typeParameters\n        ));\n    }\n\n    function parseVoidType() {\n        var marker = markerCreate();\n        expectKeyword('void');\n        return markerApply(marker, delegate.createVoidTypeAnnotation());\n    }\n\n    function parseTypeofType() {\n        var argument, marker = markerCreate();\n        expectKeyword('typeof');\n        argument = parsePrimaryType();\n        return markerApply(marker, delegate.createTypeofTypeAnnotation(\n            argument\n        ));\n    }\n\n    function parseTupleType() {\n        var marker = markerCreate(), types = [];\n        expect('[');\n        // We allow trailing commas\n        while (index < length && !match(']')) {\n            types.push(parseType());\n            if (match(']')) {\n                break;\n            }\n            expect(',');\n        }\n        expect(']');\n        return markerApply(marker, delegate.createTupleTypeAnnotation(\n            types\n        ));\n    }\n\n    function parseFunctionTypeParam() {\n        var marker = markerCreate(), name, optional = false, typeAnnotation;\n        name = parseVariableIdentifier();\n        if (match('?')) {\n            lex();\n            optional = true;\n        }\n        expect(':');\n        typeAnnotation = parseType();\n        return markerApply(marker, delegate.createFunctionTypeParam(\n            name,\n            typeAnnotation,\n            optional\n        ));\n    }\n\n    function parseFunctionTypeParams() {\n        var ret = { params: [], rest: null };\n        while (lookahead.type === Token.Identifier) {\n            ret.params.push(parseFunctionTypeParam());\n            if (!match(')')) {\n                expect(',');\n            }\n        }\n\n        if (match('...')) {\n            lex();\n            ret.rest = parseFunctionTypeParam();\n        }\n        return ret;\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    function parsePrimaryType() {\n        var params = null, returnType = null,\n            marker = markerCreate(), rest = null, tmp,\n            typeParameters, token, type, isGroupedType = false;\n\n        switch (lookahead.type) {\n        case Token.Identifier:\n            switch (lookahead.value) {\n            case 'any':\n                lex();\n                return markerApply(marker, delegate.createAnyTypeAnnotation());\n            case 'bool':  // fallthrough\n            case 'boolean':\n                lex();\n                return markerApply(marker, delegate.createBooleanTypeAnnotation());\n            case 'number':\n                lex();\n                return markerApply(marker, delegate.createNumberTypeAnnotation());\n            case 'string':\n                lex();\n                return markerApply(marker, delegate.createStringTypeAnnotation());\n            }\n            return markerApply(marker, parseGenericType());\n        case Token.Punctuator:\n            switch (lookahead.value) {\n            case '{':\n                return markerApply(marker, parseObjectType());\n            case '[':\n                return parseTupleType();\n            case '<':\n                typeParameters = parseTypeParameterDeclaration();\n                expect('(');\n                tmp = parseFunctionTypeParams();\n                params = tmp.params;\n                rest = tmp.rest;\n                expect(')');\n\n                expect('=>');\n\n                returnType = parseType();\n\n                return markerApply(marker, delegate.createFunctionTypeAnnotation(\n                    params,\n                    returnType,\n                    rest,\n                    typeParameters\n                ));\n            case '(':\n                lex();\n                // Check to see if this is actually a grouped type\n                if (!match(')') && !match('...')) {\n                    if (lookahead.type === Token.Identifier) {\n                        token = lookahead2();\n                        isGroupedType = token.value !== '?' && token.value !== ':';\n                    } else {\n                        isGroupedType = true;\n                    }\n                }\n\n                if (isGroupedType) {\n                    type = parseType();\n                    expect(')');\n\n                    // If we see a => next then someone was probably confused about\n                    // function types, so we can provide a better error message\n                    if (match('=>')) {\n                        throwError({}, Messages.ConfusedAboutFunctionType);\n                    }\n\n                    return type;\n                }\n\n                tmp = parseFunctionTypeParams();\n                params = tmp.params;\n                rest = tmp.rest;\n\n                expect(')');\n\n                expect('=>');\n\n                returnType = parseType();\n\n                return markerApply(marker, delegate.createFunctionTypeAnnotation(\n                    params,\n                    returnType,\n                    rest,\n                    null /* typeParameters */\n                ));\n            }\n            break;\n        case Token.Keyword:\n            switch (lookahead.value) {\n            case 'void':\n                return markerApply(marker, parseVoidType());\n            case 'typeof':\n                return markerApply(marker, parseTypeofType());\n            }\n            break;\n        case Token.StringLiteral:\n            token = lex();\n            if (token.octal) {\n                throwError(token, Messages.StrictOctalLiteral);\n            }\n            return markerApply(marker, delegate.createStringLiteralTypeAnnotation(\n                token\n            ));\n        }\n\n        throwUnexpected(lookahead);\n    }\n\n    function parsePostfixType() {\n        var marker = markerCreate(), t = parsePrimaryType();\n        if (match('[')) {\n            expect('[');\n            expect(']');\n            return markerApply(marker, delegate.createArrayTypeAnnotation(t));\n        }\n        return t;\n    }\n\n    function parsePrefixType() {\n        var marker = markerCreate();\n        if (match('?')) {\n            lex();\n            return markerApply(marker, delegate.createNullableTypeAnnotation(\n                parsePrefixType()\n            ));\n        }\n        return parsePostfixType();\n    }\n\n\n    function parseIntersectionType() {\n        var marker = markerCreate(), type, types;\n        type = parsePrefixType();\n        types = [type];\n        while (match('&')) {\n            lex();\n            types.push(parsePrefixType());\n        }\n\n        return types.length === 1 ?\n                type :\n                markerApply(marker, delegate.createIntersectionTypeAnnotation(\n                    types\n                ));\n    }\n\n    function parseUnionType() {\n        var marker = markerCreate(), type, types;\n        type = parseIntersectionType();\n        types = [type];\n        while (match('|')) {\n            lex();\n            types.push(parseIntersectionType());\n        }\n        return types.length === 1 ?\n                type :\n                markerApply(marker, delegate.createUnionTypeAnnotation(\n                    types\n                ));\n    }\n\n    function parseType() {\n        var oldInType = state.inType, type;\n        state.inType = true;\n\n        type = parseUnionType();\n\n        state.inType = oldInType;\n        return type;\n    }\n\n    function parseTypeAnnotation() {\n        var marker = markerCreate(), type;\n\n        expect(':');\n        type = parseType();\n\n        return markerApply(marker, delegate.createTypeAnnotation(type));\n    }\n\n    function parseVariableIdentifier() {\n        var marker = markerCreate(),\n            token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return markerApply(marker, delegate.createIdentifier(token.value));\n    }\n\n    function parseTypeAnnotatableIdentifier(requireTypeAnnotation, canBeOptionalParam) {\n        var marker = markerCreate(),\n            ident = parseVariableIdentifier(),\n            isOptionalParam = false;\n\n        if (canBeOptionalParam && match('?')) {\n            expect('?');\n            isOptionalParam = true;\n        }\n\n        if (requireTypeAnnotation || match(':')) {\n            ident.typeAnnotation = parseTypeAnnotation();\n            ident = markerApply(marker, ident);\n        }\n\n        if (isOptionalParam) {\n            ident.optional = true;\n            ident = markerApply(marker, ident);\n        }\n\n        return ident;\n    }\n\n    function parseVariableDeclaration(kind) {\n        var id,\n            marker = markerCreate(),\n            init = null,\n            typeAnnotationMarker = markerCreate();\n        if (match('{')) {\n            id = parseObjectInitialiser();\n            reinterpretAsAssignmentBindingPattern(id);\n            if (match(':')) {\n                id.typeAnnotation = parseTypeAnnotation();\n                markerApply(typeAnnotationMarker, id);\n            }\n        } else if (match('[')) {\n            id = parseArrayInitialiser();\n            reinterpretAsAssignmentBindingPattern(id);\n            if (match(':')) {\n                id.typeAnnotation = parseTypeAnnotation();\n                markerApply(typeAnnotationMarker, id);\n            }\n        } else {\n            /* istanbul ignore next */\n            id = state.allowKeyword ? parseNonComputedProperty() : parseTypeAnnotatableIdentifier();\n            // 12.2.1\n            if (strict && isRestrictedWord(id.name)) {\n                throwErrorTolerant({}, Messages.StrictVarName);\n            }\n        }\n\n        if (kind === 'const') {\n            if (!match('=')) {\n                throwError({}, Messages.NoUninitializedConst);\n            }\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return markerApply(marker, delegate.createVariableDeclarator(id, init));\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations, marker = markerCreate();\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, 'var'));\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, marker = markerCreate();\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, kind));\n    }\n\n    // people.mozilla.org/~jorendorff/es6-draft.html\n\n    function parseModuleSpecifier() {\n        var marker = markerCreate(),\n            specifier;\n\n        if (lookahead.type !== Token.StringLiteral) {\n            throwError({}, Messages.InvalidModuleSpecifier);\n        }\n        specifier = delegate.createLiteral(lex());\n        return markerApply(marker, specifier);\n    }\n\n    function parseExportBatchSpecifier() {\n        var marker = markerCreate();\n        expect('*');\n        return markerApply(marker, delegate.createExportBatchSpecifier());\n    }\n\n    function parseExportSpecifier() {\n        var id, name = null, marker = markerCreate();\n        if (matchKeyword('default')) {\n            lex();\n            id = markerApply(marker, delegate.createIdentifier('default'));\n            // export {default} from \"something\";\n        } else {\n            id = parseVariableIdentifier();\n        }\n        if (matchContextualKeyword('as')) {\n            lex();\n            name = parseNonComputedProperty();\n        }\n\n        return markerApply(marker, delegate.createExportSpecifier(id, name));\n    }\n\n    function parseExportDeclaration() {\n        var declaration = null,\n            possibleIdentifierToken, sourceElement,\n            isExportFromIdentifier,\n            src = null, specifiers = [],\n            marker = markerCreate(),\n            token2,\n            exportKind = 'value';\n\n        expectKeyword('export');\n\n        if (matchKeyword('default')) {\n            // covers:\n            // export default ...\n            lex();\n            if (matchKeyword('function') || matchKeyword('class')) {\n                possibleIdentifierToken = lookahead2();\n                if (isIdentifierName(possibleIdentifierToken)) {\n                    // covers:\n                    // export default function foo () {}\n                    // export default class foo {}\n                    sourceElement = parseSourceElement();\n                    return markerApply(marker, delegate.createExportDeclaration(true, sourceElement, [sourceElement.id], null, exportKind));\n                }\n                // covers:\n                // export default function () {}\n                // export default class {}\n                switch (lookahead.value) {\n                case 'class':\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseClassExpression(), [], null, exportKind));\n                case 'function':\n                    return markerApply(marker, delegate.createExportDeclaration(true, parseFunctionExpression(), [], null, exportKind));\n                }\n            }\n\n            if (matchContextualKeyword('from')) {\n                throwError({}, Messages.UnexpectedToken, lookahead.value);\n            }\n\n            // covers:\n            // export default {};\n            // export default [];\n            if (match('{')) {\n                declaration = parseObjectInitialiser();\n            } else if (match('[')) {\n                declaration = parseArrayInitialiser();\n            } else {\n                declaration = parseAssignmentExpression();\n            }\n            consumeSemicolon();\n            return markerApply(marker, delegate.createExportDeclaration(true, declaration, [], null, exportKind));\n        }\n\n        // non-default export\n        if (lookahead.type === Token.Keyword || matchContextualKeyword('type')) {\n            // covers:\n            // export var f = 1;\n            switch (lookahead.value) {\n            case 'type':\n                exportKind = 'type';\n\n                token2 = lookahead2();\n                if (token2.type === Token.Punctuator && token2.value === '{') {\n                    lex();\n                    break;\n                }\n                // falls through\n            case 'let':\n            case 'const':\n            case 'var':\n            case 'class':\n            case 'function':\n                return markerApply(marker, delegate.createExportDeclaration(false, parseSourceElement(), specifiers, null, exportKind));\n            }\n        }\n\n        if (match('*')) {\n            // covers:\n            // export * from \"foo\";\n            specifiers.push(parseExportBatchSpecifier());\n\n            if (!matchContextualKeyword('from')) {\n                throwError({}, lookahead.value ?\n                        Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n            }\n            lex();\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n\n            return markerApply(marker, delegate.createExportDeclaration(false, null, specifiers, src, exportKind));\n        }\n\n        expect('{');\n        if (!match('}')) {\n            do {\n                isExportFromIdentifier = isExportFromIdentifier || matchKeyword('default');\n                specifiers.push(parseExportSpecifier());\n            } while (match(',') && lex());\n        }\n        expect('}');\n\n        if (matchContextualKeyword('from')) {\n            // covering:\n            // export {default} from \"foo\";\n            // export {foo} from \"foo\";\n            lex();\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n        } else if (isExportFromIdentifier) {\n            // covering:\n            // export {default}; // missing fromClause\n            throwError({}, lookahead.value ?\n                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n        } else {\n            // cover\n            // export {foo};\n            consumeSemicolon();\n        }\n        return markerApply(marker, delegate.createExportDeclaration(false, declaration, specifiers, src, exportKind));\n    }\n\n\n    function parseImportSpecifier() {\n        // import {<foo as bar>} ...;\n        var id, name = null, marker = markerCreate();\n\n        id = parseNonComputedProperty();\n        if (matchContextualKeyword('as')) {\n            lex();\n            name = parseVariableIdentifier();\n        }\n\n        return markerApply(marker, delegate.createImportSpecifier(id, name));\n    }\n\n    function parseNamedImports() {\n        var specifiers = [];\n        // {foo, bar as bas}\n        expect('{');\n        if (!match('}')) {\n            do {\n                specifiers.push(parseImportSpecifier());\n            } while (match(',') && lex());\n        }\n        expect('}');\n        return specifiers;\n    }\n\n    function parseImportDefaultSpecifier() {\n        // import <foo> ...;\n        var id, marker = markerCreate();\n\n        id = parseNonComputedProperty();\n\n        return markerApply(marker, delegate.createImportDefaultSpecifier(id));\n    }\n\n    function parseImportNamespaceSpecifier() {\n        // import <* as foo> ...;\n        var id, marker = markerCreate();\n\n        expect('*');\n        if (!matchContextualKeyword('as')) {\n            throwError({}, Messages.NoAsAfterImportNamespace);\n        }\n        lex();\n        id = parseNonComputedProperty();\n\n        return markerApply(marker, delegate.createImportNamespaceSpecifier(id));\n    }\n\n    function parseImportDeclaration() {\n        var specifiers, src, marker = markerCreate(), importKind = 'value',\n            token2;\n\n        expectKeyword('import');\n\n        if (matchContextualKeyword('type')) {\n            token2 = lookahead2();\n            if ((token2.type === Token.Identifier && token2.value !== 'from') ||\n                    (token2.type === Token.Punctuator &&\n                        (token2.value === '{' || token2.value === '*'))) {\n                importKind = 'type';\n                lex();\n            }\n        } else if (matchKeyword('typeof')) {\n            importKind = 'typeof';\n            lex();\n        }\n\n        specifiers = [];\n\n        if (lookahead.type === Token.StringLiteral) {\n            // covers:\n            // import \"foo\";\n            src = parseModuleSpecifier();\n            consumeSemicolon();\n            return markerApply(marker, delegate.createImportDeclaration(specifiers, src, importKind));\n        }\n\n        if (!matchKeyword('default') && isIdentifierName(lookahead)) {\n            // covers:\n            // import foo\n            // import foo, ...\n            specifiers.push(parseImportDefaultSpecifier());\n            if (match(',')) {\n                lex();\n            }\n        }\n        if (match('*')) {\n            // covers:\n            // import foo, * as foo\n            // import * as foo\n            specifiers.push(parseImportNamespaceSpecifier());\n        } else if (match('{')) {\n            // covers:\n            // import foo, {bar}\n            // import {bar}\n            specifiers = specifiers.concat(parseNamedImports());\n        }\n\n        if (!matchContextualKeyword('from')) {\n            throwError({}, lookahead.value ?\n                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);\n        }\n        lex();\n        src = parseModuleSpecifier();\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createImportDeclaration(specifiers, src, importKind));\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        var marker = markerCreate();\n        expect(';');\n        return markerApply(marker, delegate.createEmptyStatement());\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var marker = markerCreate(), expr = parseExpression();\n        consumeSemicolon();\n        return markerApply(marker, delegate.createExpressionStatement(expr));\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate, marker = markerCreate();\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return markerApply(marker, delegate.createIfStatement(test, consequent, alternate));\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration, marker = markerCreate();\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return markerApply(marker, delegate.createDoWhileStatement(body, test));\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration, marker = markerCreate();\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return markerApply(marker, delegate.createWhileStatement(test, body));\n    }\n\n    function parseForVariableDeclaration() {\n        var marker = markerCreate(),\n            token = lex(),\n            declarations = parseVariableDeclarationList();\n\n        return markerApply(marker, delegate.createVariableDeclaration(declarations, token.value));\n    }\n\n    function parseForStatement(opts) {\n        var init, test, update, left, right, body, operator, oldInIteration,\n            marker = markerCreate();\n        init = test = update = null;\n        expectKeyword('for');\n\n        // http://wiki.ecmascript.org/doku.php?id=proposals:iterators_and_generators&s=each\n        if (matchContextualKeyword('each')) {\n            throwError({}, Messages.EachNotAllowed);\n        }\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let') || matchKeyword('const')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = true;\n\n                if (init.declarations.length === 1) {\n                    if (matchKeyword('in') || matchContextualKeyword('of')) {\n                        operator = lookahead;\n                        if (!((operator.value === 'in' || init.kind !== 'var') && init.declarations[0].init)) {\n                            lex();\n                            left = init;\n                            right = parseExpression();\n                            init = null;\n                        }\n                    }\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = true;\n\n                if (matchContextualKeyword('of')) {\n                    operator = lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                } else if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isAssignableLeftHandSide(init)) {\n                        throwError({}, Messages.InvalidLHSInForIn);\n                    }\n                    operator = lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        if (!(opts !== undefined && opts.ignoreBody)) {\n            body = parseStatement();\n        }\n\n        state.inIteration = oldInIteration;\n\n        if (typeof left === 'undefined') {\n            return markerApply(marker, delegate.createForStatement(init, test, update, body));\n        }\n\n        if (operator.value === 'in') {\n            return markerApply(marker, delegate.createForInStatement(left, right, body));\n        }\n        return markerApply(marker, delegate.createForOfStatement(left, right, body));\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, marker = markerCreate();\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 59) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return markerApply(marker, delegate.createContinueStatement(null));\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return markerApply(marker, delegate.createContinueStatement(null));\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            if (!state.labelSet.has(label.name)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return markerApply(marker, delegate.createContinueStatement(label));\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, marker = markerCreate();\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (char #59).\n        if (source.charCodeAt(index) === 59) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return markerApply(marker, delegate.createBreakStatement(null));\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return markerApply(marker, delegate.createBreakStatement(null));\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            if (!state.labelSet.has(label.name)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return markerApply(marker, delegate.createBreakStatement(label));\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null, marker = markerCreate();\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 32) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return markerApply(marker, delegate.createReturnStatement(argument));\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return markerApply(marker, delegate.createReturnStatement(null));\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createReturnStatement(argument));\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body, marker = markerCreate();\n\n        if (strict) {\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return markerApply(marker, delegate.createWithStatement(object, body));\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test,\n            consequent = [],\n            sourceElement,\n            marker = markerCreate();\n\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            consequent.push(sourceElement);\n        }\n\n        return markerApply(marker, delegate.createSwitchCase(test, consequent));\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound, marker = markerCreate();\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return markerApply(marker, delegate.createSwitchStatement(discriminant, cases));\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createSwitchStatement(discriminant, cases));\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument, marker = markerCreate();\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createThrowStatement(argument));\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, marker = markerCreate();\n\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseExpression();\n        // 12.14.1\n        if (strict && param.type === Syntax.Identifier && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return markerApply(marker, delegate.createCatchClause(param, body));\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null, marker = markerCreate();\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return markerApply(marker, delegate.createTryStatement(block, [], handlers, finalizer));\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        var marker = markerCreate();\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDebuggerStatement());\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            marker,\n            expr,\n            labeledBody;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return parseEmptyStatement();\n            case '{':\n                return parseBlock();\n            case '(':\n                return parseExpressionStatement();\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return parseBreakStatement();\n            case 'continue':\n                return parseContinueStatement();\n            case 'debugger':\n                return parseDebuggerStatement();\n            case 'do':\n                return parseDoWhileStatement();\n            case 'for':\n                return parseForStatement();\n            case 'function':\n                return parseFunctionDeclaration();\n            case 'class':\n                return parseClassDeclaration();\n            case 'if':\n                return parseIfStatement();\n            case 'return':\n                return parseReturnStatement();\n            case 'switch':\n                return parseSwitchStatement();\n            case 'throw':\n                return parseThrowStatement();\n            case 'try':\n                return parseTryStatement();\n            case 'var':\n                return parseVariableStatement();\n            case 'while':\n                return parseWhileStatement();\n            case 'with':\n                return parseWithStatement();\n            default:\n                break;\n            }\n        }\n\n        if (matchAsyncFuncExprOrDecl()) {\n            return parseFunctionDeclaration();\n        }\n\n        marker = markerCreate();\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            if (state.labelSet.has(expr.name)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet.set(expr.name, true);\n            labeledBody = parseStatement();\n            state.labelSet.delete(expr.name);\n            return markerApply(marker, delegate.createLabeledStatement(expr, labeledBody));\n        }\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createExpressionStatement(expr));\n    }\n\n    // 13 Function Definition\n\n    function parseConciseBody() {\n        if (match('{')) {\n            return parseFunctionSourceElements();\n        }\n        return parseAssignmentExpression();\n    }\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, oldParenthesizedCount,\n            marker = markerCreate();\n\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.range[0] + 1, token.range[1] - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n        oldParenthesizedCount = state.parenthesizedCount;\n\n        state.labelSet = new StringMap();\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n        state.parenthesizedCount = 0;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n        state.parenthesizedCount = oldParenthesizedCount;\n\n        return markerApply(marker, delegate.createBlockStatement(sourceElements));\n    }\n\n    function validateParam(options, param, name) {\n        if (strict) {\n            if (isRestrictedWord(name)) {\n                options.stricted = param;\n                options.message = Messages.StrictParamName;\n            }\n            if (options.paramSet.has(name)) {\n                options.stricted = param;\n                options.message = Messages.StrictParamDupe;\n            }\n        } else if (!options.firstRestricted) {\n            if (isRestrictedWord(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictParamName;\n            } else if (isStrictModeReservedWord(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictReservedWord;\n            } else if (options.paramSet.has(name)) {\n                options.firstRestricted = param;\n                options.message = Messages.StrictParamDupe;\n            }\n        }\n        options.paramSet.set(name, true);\n    }\n\n    function parseParam(options) {\n        var marker, token, rest, param, def;\n\n        token = lookahead;\n        if (token.value === '...') {\n            token = lex();\n            rest = true;\n        }\n\n        if (match('[')) {\n            marker = markerCreate();\n            param = parseArrayInitialiser();\n            reinterpretAsDestructuredParameter(options, param);\n            if (match(':')) {\n                param.typeAnnotation = parseTypeAnnotation();\n                markerApply(marker, param);\n            }\n        } else if (match('{')) {\n            marker = markerCreate();\n            if (rest) {\n                throwError({}, Messages.ObjectPatternAsRestParameter);\n            }\n            param = parseObjectInitialiser();\n            reinterpretAsDestructuredParameter(options, param);\n            if (match(':')) {\n                param.typeAnnotation = parseTypeAnnotation();\n                markerApply(marker, param);\n            }\n        } else {\n            param =\n                rest\n                ? parseTypeAnnotatableIdentifier(\n                    false, /* requireTypeAnnotation */\n                    false /* canBeOptionalParam */\n                )\n                : parseTypeAnnotatableIdentifier(\n                    false, /* requireTypeAnnotation */\n                    true /* canBeOptionalParam */\n                );\n\n            validateParam(options, token, token.value);\n        }\n\n        if (match('=')) {\n            if (rest) {\n                throwErrorTolerant(lookahead, Messages.DefaultRestParameter);\n            }\n            lex();\n            def = parseAssignmentExpression();\n            ++options.defaultCount;\n        }\n\n        if (rest) {\n            if (!match(')')) {\n                throwError({}, Messages.ParameterAfterRestParameter);\n            }\n            options.rest = param;\n            return false;\n        }\n\n        options.params.push(param);\n        options.defaults.push(def);\n        return !match(')');\n    }\n\n    function parseParams(firstRestricted) {\n        var options, marker = markerCreate();\n\n        options = {\n            params: [],\n            defaultCount: 0,\n            defaults: [],\n            rest: null,\n            firstRestricted: firstRestricted\n        };\n\n        expect('(');\n\n        if (!match(')')) {\n            options.paramSet = new StringMap();\n            while (index < length) {\n                if (!parseParam(options)) {\n                    break;\n                }\n                expect(',');\n                if (!options.rest && match(')')) {\n                    break;\n                }\n            }\n        }\n\n        expect(')');\n\n        if (options.defaultCount === 0) {\n            options.defaults = [];\n        }\n\n        if (match(':')) {\n            options.returnType = parseTypeAnnotation();\n        }\n\n        return markerApply(marker, options);\n    }\n\n    function parseFunctionDeclaration() {\n        var id, body, token, tmp, firstRestricted, message, generator, isAsync,\n            previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            marker = markerCreate(), typeParameters;\n\n        isAsync = false;\n        if (matchAsync()) {\n            lex();\n            isAsync = true;\n        }\n\n        expectKeyword('function');\n\n        generator = false;\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        token = lookahead;\n\n        id = parseVariableIdentifier();\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = isAsync;\n\n        body = parseFunctionSourceElements();\n\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, message);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(\n            marker,\n            delegate.createFunctionDeclaration(\n                id,\n                tmp.params,\n                tmp.defaults,\n                body,\n                tmp.rest,\n                generator,\n                false,\n                isAsync,\n                tmp.returnType,\n                typeParameters\n            )\n        );\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, firstRestricted, message, tmp, body, generator, isAsync,\n            previousStrict, previousYieldAllowed, previousAwaitAllowed,\n            marker = markerCreate(), typeParameters;\n\n        isAsync = false;\n        if (matchAsync()) {\n            lex();\n            isAsync = true;\n        }\n\n        expectKeyword('function');\n\n        generator = false;\n\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        if (!match('(')) {\n            if (!match('<')) {\n                token = lookahead;\n                id = parseVariableIdentifier();\n\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        throwErrorTolerant(token, Messages.StrictFunctionName);\n                    }\n                } else {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictFunctionName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    }\n                }\n            }\n\n            if (match('<')) {\n                typeParameters = parseTypeParameterDeclaration();\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        previousYieldAllowed = state.yieldAllowed;\n        state.yieldAllowed = generator;\n        previousAwaitAllowed = state.awaitAllowed;\n        state.awaitAllowed = isAsync;\n\n        body = parseFunctionSourceElements();\n\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && tmp.stricted) {\n            throwErrorTolerant(tmp.stricted, message);\n        }\n        strict = previousStrict;\n        state.yieldAllowed = previousYieldAllowed;\n        state.awaitAllowed = previousAwaitAllowed;\n\n        return markerApply(\n            marker,\n            delegate.createFunctionExpression(\n                id,\n                tmp.params,\n                tmp.defaults,\n                body,\n                tmp.rest,\n                generator,\n                false,\n                isAsync,\n                tmp.returnType,\n                typeParameters\n            )\n        );\n    }\n\n    function parseYieldExpression() {\n        var delegateFlag, expr, marker = markerCreate();\n\n        expectKeyword('yield', !strict);\n\n        delegateFlag = false;\n        if (match('*')) {\n            lex();\n            delegateFlag = true;\n        }\n\n        expr = parseAssignmentExpression();\n\n        return markerApply(marker, delegate.createYieldExpression(expr, delegateFlag));\n    }\n\n    function parseAwaitExpression() {\n        var expr, marker = markerCreate();\n        expectContextualKeyword('await');\n        expr = parseAssignmentExpression();\n        return markerApply(marker, delegate.createAwaitExpression(expr));\n    }\n\n    // 14 Functions and classes\n\n    // 14.1 Functions is defined above (13 in ES5)\n    // 14.2 Arrow Functions Definitions is defined in (7.3 assignments)\n\n    // 14.3 Method Definitions\n    // 14.3.7\n    function specialMethod(methodDefinition) {\n        return methodDefinition.kind === 'get' ||\n               methodDefinition.kind === 'set' ||\n               methodDefinition.value.generator;\n    }\n\n    function parseMethodDefinition(key, isStatic, generator, computed) {\n        var token, param, propType,\n            isAsync, typeParameters, tokenValue, returnType;\n\n        propType = isStatic ? ClassPropertyType.static : ClassPropertyType.prototype;\n\n        if (generator) {\n            return delegate.createMethodDefinition(\n                propType,\n                '',\n                key,\n                parsePropertyMethodFunction({ generator: true }),\n                computed\n            );\n        }\n\n        tokenValue = key.type === 'Identifier' && key.name;\n\n        if (tokenValue === 'get' && !match('(')) {\n            key = parseObjectPropertyKey();\n\n            expect('(');\n            expect(')');\n            if (match(':')) {\n                returnType = parseTypeAnnotation();\n            }\n            return delegate.createMethodDefinition(\n                propType,\n                'get',\n                key,\n                parsePropertyFunction({ generator: false, returnType: returnType }),\n                computed\n            );\n        }\n        if (tokenValue === 'set' && !match('(')) {\n            key = parseObjectPropertyKey();\n\n            expect('(');\n            token = lookahead;\n            param = [ parseTypeAnnotatableIdentifier() ];\n            expect(')');\n            if (match(':')) {\n                returnType = parseTypeAnnotation();\n            }\n            return delegate.createMethodDefinition(\n                propType,\n                'set',\n                key,\n                parsePropertyFunction({\n                    params: param,\n                    generator: false,\n                    name: token,\n                    returnType: returnType\n                }),\n                computed\n            );\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        isAsync = tokenValue === 'async' && !match('(');\n        if (isAsync) {\n            key = parseObjectPropertyKey();\n        }\n\n        return delegate.createMethodDefinition(\n            propType,\n            '',\n            key,\n            parsePropertyMethodFunction({\n                generator: false,\n                async: isAsync,\n                typeParameters: typeParameters\n            }),\n            computed\n        );\n    }\n\n    function parseClassProperty(key, computed, isStatic) {\n        var typeAnnotation;\n\n        typeAnnotation = parseTypeAnnotation();\n        expect(';');\n\n        return delegate.createClassProperty(\n            key,\n            typeAnnotation,\n            computed,\n            isStatic\n        );\n    }\n\n    function parseClassElement() {\n        var computed = false, generator = false, key, marker = markerCreate(),\n            isStatic = false, possiblyOpenBracketToken;\n        if (match(';')) {\n            lex();\n            return undefined;\n        }\n\n        if (lookahead.value === 'static') {\n            lex();\n            isStatic = true;\n        }\n\n        if (match('*')) {\n            lex();\n            generator = true;\n        }\n\n        possiblyOpenBracketToken = lookahead;\n        if (matchContextualKeyword('get') || matchContextualKeyword('set')) {\n            possiblyOpenBracketToken = lookahead2();\n        }\n\n        if (possiblyOpenBracketToken.type === Token.Punctuator\n                && possiblyOpenBracketToken.value === '[') {\n            computed = true;\n        }\n\n        key = parseObjectPropertyKey();\n\n        if (!generator && lookahead.value === ':') {\n            return markerApply(marker, parseClassProperty(key, computed, isStatic));\n        }\n\n        return markerApply(marker, parseMethodDefinition(\n            key,\n            isStatic,\n            generator,\n            computed\n        ));\n    }\n\n    function parseClassBody() {\n        var classElement, classElements = [], existingProps = {},\n            marker = markerCreate(), propName, propType;\n\n        existingProps[ClassPropertyType.static] = new StringMap();\n        existingProps[ClassPropertyType.prototype] = new StringMap();\n\n        expect('{');\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            classElement = parseClassElement(existingProps);\n\n            if (typeof classElement !== 'undefined') {\n                classElements.push(classElement);\n\n                propName = !classElement.computed && getFieldName(classElement.key);\n                if (propName !== false) {\n                    propType = classElement.static ?\n                                ClassPropertyType.static :\n                                ClassPropertyType.prototype;\n\n                    if (classElement.type === Syntax.MethodDefinition) {\n                        if (propName === 'constructor' && !classElement.static) {\n                            if (specialMethod(classElement)) {\n                                throwError(classElement, Messages.IllegalClassConstructorProperty);\n                            }\n                            if (existingProps[ClassPropertyType.prototype].has('constructor')) {\n                                throwError(classElement.key, Messages.IllegalDuplicateClassProperty);\n                            }\n                        }\n                        existingProps[propType].set(propName, true);\n                    }\n                }\n            }\n        }\n\n        expect('}');\n\n        return markerApply(marker, delegate.createClassBody(classElements));\n    }\n\n    function parseClassImplements() {\n        var id, implemented = [], marker, typeParameters;\n        if (strict) {\n            expectKeyword('implements');\n        } else {\n            expectContextualKeyword('implements');\n        }\n        while (index < length) {\n            marker = markerCreate();\n            id = parseVariableIdentifier();\n            if (match('<')) {\n                typeParameters = parseTypeParameterInstantiation();\n            } else {\n                typeParameters = null;\n            }\n            implemented.push(markerApply(marker, delegate.createClassImplements(\n                id,\n                typeParameters\n            )));\n            if (!match(',')) {\n                break;\n            }\n            expect(',');\n        }\n        return implemented;\n    }\n\n    function parseClassExpression() {\n        var id, implemented, previousYieldAllowed, superClass = null,\n            superTypeParameters, marker = markerCreate(), typeParameters,\n            matchImplements;\n\n        expectKeyword('class');\n\n        matchImplements =\n                strict\n                ? matchKeyword('implements')\n                : matchContextualKeyword('implements');\n\n        if (!matchKeyword('extends') && !matchImplements && !match('{')) {\n            id = parseVariableIdentifier();\n        }\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n            previousYieldAllowed = state.yieldAllowed;\n            state.yieldAllowed = false;\n            superClass = parseLeftHandSideExpressionAllowCall();\n            if (match('<')) {\n                superTypeParameters = parseTypeParameterInstantiation();\n            }\n            state.yieldAllowed = previousYieldAllowed;\n        }\n\n        if (strict ? matchKeyword('implements') : matchContextualKeyword('implements')) {\n            implemented = parseClassImplements();\n        }\n\n        return markerApply(marker, delegate.createClassExpression(\n            id,\n            superClass,\n            parseClassBody(),\n            typeParameters,\n            superTypeParameters,\n            implemented\n        ));\n    }\n\n    function parseClassDeclaration() {\n        var id, implemented, previousYieldAllowed, superClass = null,\n            superTypeParameters, marker = markerCreate(), typeParameters;\n\n        expectKeyword('class');\n\n        id = parseVariableIdentifier();\n\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n            previousYieldAllowed = state.yieldAllowed;\n            state.yieldAllowed = false;\n            superClass = parseLeftHandSideExpressionAllowCall();\n            if (match('<')) {\n                superTypeParameters = parseTypeParameterInstantiation();\n            }\n            state.yieldAllowed = previousYieldAllowed;\n        }\n\n        if (strict ? matchKeyword('implements') : matchContextualKeyword('implements')) {\n            implemented = parseClassImplements();\n        }\n\n        return markerApply(marker, delegate.createClassDeclaration(\n            id,\n            superClass,\n            parseClassBody(),\n            typeParameters,\n            superTypeParameters,\n            implemented\n        ));\n    }\n\n    // 15 Program\n\n    function parseSourceElement() {\n        var token;\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            case 'export':\n                throwErrorTolerant({}, Messages.IllegalExportDeclaration);\n                return parseExportDeclaration();\n            case 'import':\n                throwErrorTolerant({}, Messages.IllegalImportDeclaration);\n                return parseImportDeclaration();\n            case 'interface':\n                if (lookahead2().type === Token.Identifier) {\n                    return parseInterface();\n                }\n                return parseStatement();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (matchContextualKeyword('type')\n                && lookahead2().type === Token.Identifier) {\n            return parseTypeAlias();\n        }\n\n        if (matchContextualKeyword('interface')\n                && lookahead2().type === Token.Identifier) {\n            return parseInterface();\n        }\n\n        if (matchContextualKeyword('declare')) {\n            token = lookahead2();\n            if (token.type === Token.Keyword) {\n                switch (token.value) {\n                case 'class':\n                    return parseDeclareClass();\n                case 'function':\n                    return parseDeclareFunction();\n                case 'var':\n                    return parseDeclareVariable();\n                }\n            } else if (token.type === Token.Identifier\n                    && token.value === 'module') {\n                return parseDeclareModule();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseProgramElement() {\n        var isModule = extra.sourceType === 'module' || extra.sourceType === 'nonStrictModule';\n\n        if (isModule && lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'export':\n                return parseExportDeclaration();\n            case 'import':\n                return parseImportDeclaration();\n            }\n        }\n\n        return parseSourceElement();\n    }\n\n    function parseProgramElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseProgramElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.range[0] + 1, token.range[1] - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseProgramElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, marker = markerCreate();\n        strict = extra.sourceType === 'module';\n        peek();\n        body = parseProgramElements();\n        return markerApply(marker, delegate.createProgram(body));\n    }\n\n    // 16 JSX\n\n    XHTMLEntities = {\n        quot: '\\u0022',\n        amp: '&',\n        apos: '\\u0027',\n        lt: '<',\n        gt: '>',\n        nbsp: '\\u00A0',\n        iexcl: '\\u00A1',\n        cent: '\\u00A2',\n        pound: '\\u00A3',\n        curren: '\\u00A4',\n        yen: '\\u00A5',\n        brvbar: '\\u00A6',\n        sect: '\\u00A7',\n        uml: '\\u00A8',\n        copy: '\\u00A9',\n        ordf: '\\u00AA',\n        laquo: '\\u00AB',\n        not: '\\u00AC',\n        shy: '\\u00AD',\n        reg: '\\u00AE',\n        macr: '\\u00AF',\n        deg: '\\u00B0',\n        plusmn: '\\u00B1',\n        sup2: '\\u00B2',\n        sup3: '\\u00B3',\n        acute: '\\u00B4',\n        micro: '\\u00B5',\n        para: '\\u00B6',\n        middot: '\\u00B7',\n        cedil: '\\u00B8',\n        sup1: '\\u00B9',\n        ordm: '\\u00BA',\n        raquo: '\\u00BB',\n        frac14: '\\u00BC',\n        frac12: '\\u00BD',\n        frac34: '\\u00BE',\n        iquest: '\\u00BF',\n        Agrave: '\\u00C0',\n        Aacute: '\\u00C1',\n        Acirc: '\\u00C2',\n        Atilde: '\\u00C3',\n        Auml: '\\u00C4',\n        Aring: '\\u00C5',\n        AElig: '\\u00C6',\n        Ccedil: '\\u00C7',\n        Egrave: '\\u00C8',\n        Eacute: '\\u00C9',\n        Ecirc: '\\u00CA',\n        Euml: '\\u00CB',\n        Igrave: '\\u00CC',\n        Iacute: '\\u00CD',\n        Icirc: '\\u00CE',\n        Iuml: '\\u00CF',\n        ETH: '\\u00D0',\n        Ntilde: '\\u00D1',\n        Ograve: '\\u00D2',\n        Oacute: '\\u00D3',\n        Ocirc: '\\u00D4',\n        Otilde: '\\u00D5',\n        Ouml: '\\u00D6',\n        times: '\\u00D7',\n        Oslash: '\\u00D8',\n        Ugrave: '\\u00D9',\n        Uacute: '\\u00DA',\n        Ucirc: '\\u00DB',\n        Uuml: '\\u00DC',\n        Yacute: '\\u00DD',\n        THORN: '\\u00DE',\n        szlig: '\\u00DF',\n        agrave: '\\u00E0',\n        aacute: '\\u00E1',\n        acirc: '\\u00E2',\n        atilde: '\\u00E3',\n        auml: '\\u00E4',\n        aring: '\\u00E5',\n        aelig: '\\u00E6',\n        ccedil: '\\u00E7',\n        egrave: '\\u00E8',\n        eacute: '\\u00E9',\n        ecirc: '\\u00EA',\n        euml: '\\u00EB',\n        igrave: '\\u00EC',\n        iacute: '\\u00ED',\n        icirc: '\\u00EE',\n        iuml: '\\u00EF',\n        eth: '\\u00F0',\n        ntilde: '\\u00F1',\n        ograve: '\\u00F2',\n        oacute: '\\u00F3',\n        ocirc: '\\u00F4',\n        otilde: '\\u00F5',\n        ouml: '\\u00F6',\n        divide: '\\u00F7',\n        oslash: '\\u00F8',\n        ugrave: '\\u00F9',\n        uacute: '\\u00FA',\n        ucirc: '\\u00FB',\n        uuml: '\\u00FC',\n        yacute: '\\u00FD',\n        thorn: '\\u00FE',\n        yuml: '\\u00FF',\n        OElig: '\\u0152',\n        oelig: '\\u0153',\n        Scaron: '\\u0160',\n        scaron: '\\u0161',\n        Yuml: '\\u0178',\n        fnof: '\\u0192',\n        circ: '\\u02C6',\n        tilde: '\\u02DC',\n        Alpha: '\\u0391',\n        Beta: '\\u0392',\n        Gamma: '\\u0393',\n        Delta: '\\u0394',\n        Epsilon: '\\u0395',\n        Zeta: '\\u0396',\n        Eta: '\\u0397',\n        Theta: '\\u0398',\n        Iota: '\\u0399',\n        Kappa: '\\u039A',\n        Lambda: '\\u039B',\n        Mu: '\\u039C',\n        Nu: '\\u039D',\n        Xi: '\\u039E',\n        Omicron: '\\u039F',\n        Pi: '\\u03A0',\n        Rho: '\\u03A1',\n        Sigma: '\\u03A3',\n        Tau: '\\u03A4',\n        Upsilon: '\\u03A5',\n        Phi: '\\u03A6',\n        Chi: '\\u03A7',\n        Psi: '\\u03A8',\n        Omega: '\\u03A9',\n        alpha: '\\u03B1',\n        beta: '\\u03B2',\n        gamma: '\\u03B3',\n        delta: '\\u03B4',\n        epsilon: '\\u03B5',\n        zeta: '\\u03B6',\n        eta: '\\u03B7',\n        theta: '\\u03B8',\n        iota: '\\u03B9',\n        kappa: '\\u03BA',\n        lambda: '\\u03BB',\n        mu: '\\u03BC',\n        nu: '\\u03BD',\n        xi: '\\u03BE',\n        omicron: '\\u03BF',\n        pi: '\\u03C0',\n        rho: '\\u03C1',\n        sigmaf: '\\u03C2',\n        sigma: '\\u03C3',\n        tau: '\\u03C4',\n        upsilon: '\\u03C5',\n        phi: '\\u03C6',\n        chi: '\\u03C7',\n        psi: '\\u03C8',\n        omega: '\\u03C9',\n        thetasym: '\\u03D1',\n        upsih: '\\u03D2',\n        piv: '\\u03D6',\n        ensp: '\\u2002',\n        emsp: '\\u2003',\n        thinsp: '\\u2009',\n        zwnj: '\\u200C',\n        zwj: '\\u200D',\n        lrm: '\\u200E',\n        rlm: '\\u200F',\n        ndash: '\\u2013',\n        mdash: '\\u2014',\n        lsquo: '\\u2018',\n        rsquo: '\\u2019',\n        sbquo: '\\u201A',\n        ldquo: '\\u201C',\n        rdquo: '\\u201D',\n        bdquo: '\\u201E',\n        dagger: '\\u2020',\n        Dagger: '\\u2021',\n        bull: '\\u2022',\n        hellip: '\\u2026',\n        permil: '\\u2030',\n        prime: '\\u2032',\n        Prime: '\\u2033',\n        lsaquo: '\\u2039',\n        rsaquo: '\\u203A',\n        oline: '\\u203E',\n        frasl: '\\u2044',\n        euro: '\\u20AC',\n        image: '\\u2111',\n        weierp: '\\u2118',\n        real: '\\u211C',\n        trade: '\\u2122',\n        alefsym: '\\u2135',\n        larr: '\\u2190',\n        uarr: '\\u2191',\n        rarr: '\\u2192',\n        darr: '\\u2193',\n        harr: '\\u2194',\n        crarr: '\\u21B5',\n        lArr: '\\u21D0',\n        uArr: '\\u21D1',\n        rArr: '\\u21D2',\n        dArr: '\\u21D3',\n        hArr: '\\u21D4',\n        forall: '\\u2200',\n        part: '\\u2202',\n        exist: '\\u2203',\n        empty: '\\u2205',\n        nabla: '\\u2207',\n        isin: '\\u2208',\n        notin: '\\u2209',\n        ni: '\\u220B',\n        prod: '\\u220F',\n        sum: '\\u2211',\n        minus: '\\u2212',\n        lowast: '\\u2217',\n        radic: '\\u221A',\n        prop: '\\u221D',\n        infin: '\\u221E',\n        ang: '\\u2220',\n        and: '\\u2227',\n        or: '\\u2228',\n        cap: '\\u2229',\n        cup: '\\u222A',\n        'int': '\\u222B',\n        there4: '\\u2234',\n        sim: '\\u223C',\n        cong: '\\u2245',\n        asymp: '\\u2248',\n        ne: '\\u2260',\n        equiv: '\\u2261',\n        le: '\\u2264',\n        ge: '\\u2265',\n        sub: '\\u2282',\n        sup: '\\u2283',\n        nsub: '\\u2284',\n        sube: '\\u2286',\n        supe: '\\u2287',\n        oplus: '\\u2295',\n        otimes: '\\u2297',\n        perp: '\\u22A5',\n        sdot: '\\u22C5',\n        lceil: '\\u2308',\n        rceil: '\\u2309',\n        lfloor: '\\u230A',\n        rfloor: '\\u230B',\n        lang: '\\u2329',\n        rang: '\\u232A',\n        loz: '\\u25CA',\n        spades: '\\u2660',\n        clubs: '\\u2663',\n        hearts: '\\u2665',\n        diams: '\\u2666'\n    };\n\n    function getQualifiedJSXName(object) {\n        if (object.type === Syntax.JSXIdentifier) {\n            return object.name;\n        }\n        if (object.type === Syntax.JSXNamespacedName) {\n            return object.namespace.name + ':' + object.name.name;\n        }\n        /* istanbul ignore else */\n        if (object.type === Syntax.JSXMemberExpression) {\n            return (\n                getQualifiedJSXName(object.object) + '.' +\n                getQualifiedJSXName(object.property)\n            );\n        }\n        /* istanbul ignore next */\n        throwUnexpected(object);\n    }\n\n    function isJSXIdentifierStart(ch) {\n        // exclude backslash (\\)\n        return (ch !== 92) && isIdentifierStart(ch);\n    }\n\n    function isJSXIdentifierPart(ch) {\n        // exclude backslash (\\) and add hyphen (-)\n        return (ch !== 92) && (ch === 45 || isIdentifierPart(ch));\n    }\n\n    function scanJSXIdentifier() {\n        var ch, start, value = '';\n\n        start = index;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isJSXIdentifierPart(ch)) {\n                break;\n            }\n            value += source[index++];\n        }\n\n        return {\n            type: Token.JSXIdentifier,\n            value: value,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanJSXEntity() {\n        var ch, str = '', start = index, count = 0, code;\n        ch = source[index];\n        assert(ch === '&', 'Entity must start with an ampersand');\n        index++;\n        while (index < length && count++ < 10) {\n            ch = source[index++];\n            if (ch === ';') {\n                break;\n            }\n            str += ch;\n        }\n\n        // Well-formed entity (ending was found).\n        if (ch === ';') {\n            // Numeric entity.\n            if (str[0] === '#') {\n                if (str[1] === 'x') {\n                    code = +('0' + str.substr(1));\n                } else {\n                    // Removing leading zeros in order to avoid treating as octal in old browsers.\n                    code = +str.substr(1).replace(Regex.LeadingZeros, '');\n                }\n\n                if (!isNaN(code)) {\n                    return String.fromCharCode(code);\n                }\n            /* istanbul ignore else */\n            } else if (XHTMLEntities[str]) {\n                return XHTMLEntities[str];\n            }\n        }\n\n        // Treat non-entity sequences as regular text.\n        index = start + 1;\n        return '&';\n    }\n\n    function scanJSXText(stopChars) {\n        var ch, str = '', start;\n        start = index;\n        while (index < length) {\n            ch = source[index];\n            if (stopChars.indexOf(ch) !== -1) {\n                break;\n            }\n            if (ch === '&') {\n                str += scanJSXEntity();\n            } else {\n                index++;\n                if (ch === '\\r' && source[index] === '\\n') {\n                    str += ch;\n                    ch = source[index];\n                    index++;\n                }\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    ++lineNumber;\n                    lineStart = index;\n                }\n                str += ch;\n            }\n        }\n        return {\n            type: Token.JSXText,\n            value: str,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            range: [start, index]\n        };\n    }\n\n    function scanJSXStringLiteral() {\n        var innerToken, quote, start;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        innerToken = scanJSXText([quote]);\n\n        if (quote !== source[index]) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        ++index;\n\n        innerToken.range = [start, index];\n\n        return innerToken;\n    }\n\n    /**\n     * Between JSX opening and closing tags (e.g. <foo>HERE</foo>), anything that\n     * is not another JSX tag and is not an expression wrapped by {} is text.\n     */\n    function advanceJSXChild() {\n        var ch = source.charCodeAt(index);\n\n        // '<' 60, '>' 62, '{' 123, '}' 125\n        if (ch !== 60 && ch !== 62 && ch !== 123 && ch !== 125) {\n            return scanJSXText(['<', '>', '{', '}']);\n        }\n\n        return scanPunctuator();\n    }\n\n    function parseJSXIdentifier() {\n        var token, marker = markerCreate();\n\n        if (lookahead.type !== Token.JSXIdentifier) {\n            throwUnexpected(lookahead);\n        }\n\n        token = lex();\n        return markerApply(marker, delegate.createJSXIdentifier(token.value));\n    }\n\n    function parseJSXNamespacedName() {\n        var namespace, name, marker = markerCreate();\n\n        namespace = parseJSXIdentifier();\n        expect(':');\n        name = parseJSXIdentifier();\n\n        return markerApply(marker, delegate.createJSXNamespacedName(namespace, name));\n    }\n\n    function parseJSXMemberExpression() {\n        var marker = markerCreate(),\n            expr = parseJSXIdentifier();\n\n        while (match('.')) {\n            lex();\n            expr = markerApply(marker, delegate.createJSXMemberExpression(expr, parseJSXIdentifier()));\n        }\n\n        return expr;\n    }\n\n    function parseJSXElementName() {\n        if (lookahead2().value === ':') {\n            return parseJSXNamespacedName();\n        }\n        if (lookahead2().value === '.') {\n            return parseJSXMemberExpression();\n        }\n\n        return parseJSXIdentifier();\n    }\n\n    function parseJSXAttributeName() {\n        if (lookahead2().value === ':') {\n            return parseJSXNamespacedName();\n        }\n\n        return parseJSXIdentifier();\n    }\n\n    function parseJSXAttributeValue() {\n        var value, marker;\n        if (match('{')) {\n            value = parseJSXExpressionContainer();\n            if (value.expression.type === Syntax.JSXEmptyExpression) {\n                throwError(\n                    value,\n                    'JSX attributes must only be assigned a non-empty ' +\n                        'expression'\n                );\n            }\n        } else if (match('<')) {\n            value = parseJSXElement();\n        } else if (lookahead.type === Token.JSXText) {\n            marker = markerCreate();\n            value = markerApply(marker, delegate.createLiteral(lex()));\n        } else {\n            throwError({}, Messages.InvalidJSXAttributeValue);\n        }\n        return value;\n    }\n\n    function parseJSXEmptyExpression() {\n        var ch, marker = markerCreatePreserveWhitespace();\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 125) {\n                break;\n            } else if (isLineTerminator(ch)) {\n                if (ch === 13 && source.charCodeAt(index + 1) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n            }\n            ++index;\n        }\n        return markerApply(marker, delegate.createJSXEmptyExpression());\n    }\n\n    function parseJSXExpressionContainer() {\n        var expression, origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = false;\n\n        expect('{');\n\n        if (match('}')) {\n            expression = parseJSXEmptyExpression();\n        } else {\n            expression = parseExpression();\n        }\n\n        state.inJSXChild = origInJSXChild;\n        state.inJSXTag = origInJSXTag;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createJSXExpressionContainer(expression));\n    }\n\n    function parseJSXSpreadAttribute() {\n        var expression, origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = false;\n\n        expect('{');\n        expect('...');\n\n        expression = parseAssignmentExpression();\n\n        state.inJSXChild = origInJSXChild;\n        state.inJSXTag = origInJSXTag;\n\n        expect('}');\n\n        return markerApply(marker, delegate.createJSXSpreadAttribute(expression));\n    }\n\n    function parseJSXAttribute() {\n        var name, marker;\n\n        if (match('{')) {\n            return parseJSXSpreadAttribute();\n        }\n\n        marker = markerCreate();\n\n        name = parseJSXAttributeName();\n\n        // HTML empty attribute\n        if (match('=')) {\n            lex();\n            return markerApply(marker, delegate.createJSXAttribute(name, parseJSXAttributeValue()));\n        }\n\n        return markerApply(marker, delegate.createJSXAttribute(name));\n    }\n\n    function parseJSXChild() {\n        var token, marker;\n        if (match('{')) {\n            token = parseJSXExpressionContainer();\n        } else if (lookahead.type === Token.JSXText) {\n            marker = markerCreatePreserveWhitespace();\n            token = markerApply(marker, delegate.createLiteral(lex()));\n        } else if (match('<')) {\n            token = parseJSXElement();\n        } else {\n            throwUnexpected(lookahead);\n        }\n        return token;\n    }\n\n    function parseJSXClosingElement() {\n        var name, origInJSXChild, origInJSXTag, marker = markerCreate();\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = true;\n        expect('<');\n        expect('/');\n        name = parseJSXElementName();\n        // Because advance() (called by lex() called by expect()) expects there\n        // to be a valid token after >, it needs to know whether to look for a\n        // standard JS token or an JSX text node\n        state.inJSXChild = origInJSXChild;\n        state.inJSXTag = origInJSXTag;\n        expect('>');\n        return markerApply(marker, delegate.createJSXClosingElement(name));\n    }\n\n    function parseJSXOpeningElement() {\n        var name, attributes = [], selfClosing = false, origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        state.inJSXChild = false;\n        state.inJSXTag = true;\n\n        expect('<');\n\n        name = parseJSXElementName();\n\n        while (index < length &&\n                lookahead.value !== '/' &&\n                lookahead.value !== '>') {\n            attributes.push(parseJSXAttribute());\n        }\n\n        state.inJSXTag = origInJSXTag;\n\n        if (lookahead.value === '/') {\n            expect('/');\n            // Because advance() (called by lex() called by expect()) expects\n            // there to be a valid token after >, it needs to know whether to\n            // look for a standard JS token or an JSX text node\n            state.inJSXChild = origInJSXChild;\n            expect('>');\n            selfClosing = true;\n        } else {\n            state.inJSXChild = true;\n            expect('>');\n        }\n        return markerApply(marker, delegate.createJSXOpeningElement(name, attributes, selfClosing));\n    }\n\n    function parseJSXElement() {\n        var openingElement, closingElement = null, children = [], origInJSXChild, origInJSXTag, marker = markerCreate();\n\n        origInJSXChild = state.inJSXChild;\n        origInJSXTag = state.inJSXTag;\n        openingElement = parseJSXOpeningElement();\n\n        if (!openingElement.selfClosing) {\n            while (index < length) {\n                state.inJSXChild = false; // Call lookahead2() with inJSXChild = false because </ should not be considered in the child\n                if (lookahead.value === '<' && lookahead2().value === '/') {\n                    break;\n                }\n                state.inJSXChild = true;\n                children.push(parseJSXChild());\n            }\n            state.inJSXChild = origInJSXChild;\n            state.inJSXTag = origInJSXTag;\n            closingElement = parseJSXClosingElement();\n            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n                throwError({}, Messages.ExpectedJSXClosingTag, getQualifiedJSXName(openingElement.name));\n            }\n        }\n\n        // When (erroneously) writing two adjacent tags like\n        //\n        //     var x = <div>one</div><div>two</div>;\n        //\n        // the default error message is a bit incomprehensible. Since it's\n        // rarely (never?) useful to write a less-than sign after an JSX\n        // element, we disallow it here in the parser in order to provide a\n        // better error message. (In the rare case that the less-than operator\n        // was intended, the left tag can be wrapped in parentheses.)\n        if (!origInJSXChild && match('<')) {\n            throwError(lookahead, Messages.AdjacentJSXElements);\n        }\n\n        return markerApply(marker, delegate.createJSXElement(openingElement, closingElement, children));\n    }\n\n    function parseTypeAlias() {\n        var id, marker = markerCreate(), typeParameters = null, right;\n        expectContextualKeyword('type');\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n        expect('=');\n        right = parseType();\n        consumeSemicolon();\n        return markerApply(marker, delegate.createTypeAlias(id, typeParameters, right));\n    }\n\n    function parseInterfaceExtends() {\n        var marker = markerCreate(), id, typeParameters = null;\n\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterInstantiation();\n        }\n\n        return markerApply(marker, delegate.createInterfaceExtends(\n            id,\n            typeParameters\n        ));\n    }\n\n    function parseInterfaceish(marker, allowStatic) {\n        var body, bodyMarker, extended = [], id,\n            typeParameters = null;\n\n        id = parseVariableIdentifier();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n\n        if (matchKeyword('extends')) {\n            expectKeyword('extends');\n\n            while (index < length) {\n                extended.push(parseInterfaceExtends());\n                if (!match(',')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        bodyMarker = markerCreate();\n        body = markerApply(bodyMarker, parseObjectType(allowStatic));\n\n        return markerApply(marker, delegate.createInterface(\n            id,\n            typeParameters,\n            body,\n            extended\n        ));\n    }\n\n    function parseInterface() {\n        var marker = markerCreate();\n\n        if (strict) {\n            expectKeyword('interface');\n        } else {\n            expectContextualKeyword('interface');\n        }\n\n        return parseInterfaceish(marker, /* allowStatic */false);\n    }\n\n    function parseDeclareClass() {\n        var marker = markerCreate(), ret;\n        expectContextualKeyword('declare');\n        expectKeyword('class');\n\n        ret = parseInterfaceish(marker, /* allowStatic */true);\n        ret.type = Syntax.DeclareClass;\n        return ret;\n    }\n\n    function parseDeclareFunction() {\n        var id, idMarker,\n            marker = markerCreate(), params, returnType, rest, tmp,\n            typeParameters = null, value, valueMarker;\n\n        expectContextualKeyword('declare');\n        expectKeyword('function');\n        idMarker = markerCreate();\n        id = parseVariableIdentifier();\n\n        valueMarker = markerCreate();\n        if (match('<')) {\n            typeParameters = parseTypeParameterDeclaration();\n        }\n        expect('(');\n        tmp = parseFunctionTypeParams();\n        params = tmp.params;\n        rest = tmp.rest;\n        expect(')');\n\n        expect(':');\n        returnType = parseType();\n\n        value = markerApply(valueMarker, delegate.createFunctionTypeAnnotation(\n            params,\n            returnType,\n            rest,\n            typeParameters\n        ));\n\n        id.typeAnnotation = markerApply(valueMarker, delegate.createTypeAnnotation(\n            value\n        ));\n        markerApply(idMarker, id);\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDeclareFunction(\n            id\n        ));\n    }\n\n    function parseDeclareVariable() {\n        var id, marker = markerCreate();\n        expectContextualKeyword('declare');\n        expectKeyword('var');\n        id = parseTypeAnnotatableIdentifier();\n\n        consumeSemicolon();\n\n        return markerApply(marker, delegate.createDeclareVariable(\n            id\n        ));\n    }\n\n    function parseDeclareModule() {\n        var body = [], bodyMarker, id, idMarker, marker = markerCreate(), token;\n        expectContextualKeyword('declare');\n        expectContextualKeyword('module');\n\n        if (lookahead.type === Token.StringLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            idMarker = markerCreate();\n            id = markerApply(idMarker, delegate.createLiteral(lex()));\n        } else {\n            id = parseVariableIdentifier();\n        }\n\n        bodyMarker = markerCreate();\n        expect('{');\n        while (index < length && !match('}')) {\n            token = lookahead2();\n            switch (token.value) {\n            case 'class':\n                body.push(parseDeclareClass());\n                break;\n            case 'function':\n                body.push(parseDeclareFunction());\n                break;\n            case 'var':\n                body.push(parseDeclareVariable());\n                break;\n            default:\n                throwUnexpected(lookahead);\n            }\n        }\n        expect('}');\n\n        return markerApply(marker, delegate.createDeclareModule(\n            id,\n            markerApply(bodyMarker, delegate.createBlockStatement(body))\n        ));\n    }\n\n    function collectToken() {\n        var loc, token, range, value, entry;\n\n        /* istanbul ignore else */\n        if (!state.inJSXChild) {\n            skipComment();\n        }\n\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = extra.advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            range = [token.range[0], token.range[1]];\n            value = source.slice(token.range[0], token.range[1]);\n            entry = {\n                type: TokenName[token.type],\n                value: value,\n                range: range,\n                loc: loc\n            };\n            if (token.regex) {\n                entry.regex = {\n                    pattern: token.regex.pattern,\n                    flags: token.regex.flags\n                };\n            }\n            extra.tokens.push(entry);\n        }\n\n        return token;\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = extra.scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (!extra.tokenize) {\n            /* istanbul ignore next */\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                regex: regex.regex,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (entry.regex) {\n                token.regex = {\n                    pattern: entry.regex.pattern,\n                    flags: entry.regex.flags\n                };\n            }\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function patch() {\n        if (typeof extra.tokens !== 'undefined') {\n            extra.advance = advance;\n            extra.scanRegExp = scanRegExp;\n\n            advance = collectToken;\n            scanRegExp = collectRegex;\n        }\n    }\n\n    function unpatch() {\n        if (typeof extra.scanRegExp === 'function') {\n            advance = extra.advance;\n            scanRegExp = extra.scanRegExp;\n        }\n    }\n\n    // This is used to modify the delegate.\n\n    function extend(object, properties) {\n        var entry, result = {};\n\n        for (entry in object) {\n            /* istanbul ignore else */\n            if (object.hasOwnProperty(entry)) {\n                result[entry] = object[entry];\n            }\n        }\n\n        for (entry in properties) {\n            /* istanbul ignore else */\n            if (properties.hasOwnProperty(entry)) {\n                result[entry] = properties[entry];\n            }\n        }\n\n        return result;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowKeyword: true,\n            allowIn: true,\n            labelSet: new StringMap(),\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1,\n            curlyStack: [],\n            curlyLastIndex: 0\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        patch();\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            unpatch();\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowKeyword: false,\n            allowIn: true,\n            labelSet: new StringMap(),\n            parenthesizedCount: 0,\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            inJSXChild: false,\n            inJSXTag: false,\n            inType: false,\n            lastCommentStart: -1,\n            yieldAllowed: false,\n            awaitAllowed: false,\n            curlyPosition: 0,\n            curlyStack: [],\n            curlyLastIndex: 0\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                delegate = extend(delegate, {\n                    'postProcess': function (node) {\n                        node.loc.source = toString(options.source);\n                        return node;\n                    }\n                });\n            }\n\n            extra.sourceType = options.sourceType;\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        patch();\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            unpatch();\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '15001.1001.0-dev-harmony-fb';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n   /* istanbul ignore next */\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","var Syntax = require('esprima-fb').Syntax;\r\nvar utils = require('jstransform/src/utils');\r\n\r\nmodule.exports = visitNode;\r\n\r\n/**\r\n * Visit tag node and desugar JSX.\r\n *\r\n * @see {@link https://github.com/facebook/jstransform}\r\n * @param {Function} traverse\r\n * @param {Object} object\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nfunction visitNode(traverse, object, path, state) {\r\n  var options = state.g.opts;\r\n  var factory = (options.factory);\r\n  var arrayChildren = options.arrayChildren\r\n  var openingEl = object.openingElement;\r\n  var closingEl = object.closingElement;\r\n  var nameObj = openingEl.name;\r\n  var attributes = openingEl.attributes;\r\n  var spreadFn = options.spreadFn;\r\n  var unknownTagPattern = options.unknownTagPattern;\r\n\r\n  if (!options.renameAttrs) {\r\n    options.renameAttrs = {};\r\n  }\r\n\r\n  utils.catchup(openingEl.range[0], state, trimLeft);\r\n\r\n  var tagName = nameObj.name;\r\n  var isJSXIdentifier = nameObj.type === Syntax.JSXIdentifier;\r\n  var knownTag = tagName[0] !== tagName[0].toUpperCase() && isJSXIdentifier;\r\n  var hasAtLeastOneSpreadAttribute = attributes.some(function (attr) {\r\n    return attr.type === Syntax.JSXSpreadAttribute;\r\n  });\r\n  var secondArg = false;\r\n\r\n  if (knownTag) {\r\n    utils.append(factory + \"('\", state); // DOM('div', ...)\r\n  } else if (options.passUnknownTagsToFactory) {\r\n    if (options.unknownTagsAsString) {\r\n      utils.append(factory + \"('\", state);\r\n    } else {\r\n      utils.append(factory + '(', state);\r\n    }\r\n  }\r\n\r\n  utils.move(nameObj.range[0], state);\r\n\r\n  if (knownTag) {\r\n    // DOM('div', ...)\r\n    utils.catchup(nameObj.range[1], state);\r\n    utils.append(\"'\", state);\r\n    secondArg = true\r\n  } else if (options.passUnknownTagsToFactory) {\r\n    // DOM(Component, ...)\r\n    utils.catchup(nameObj.range[1], state);\r\n    if (options.unknownTagsAsString) {\r\n      utils.append(\"'\", state);\r\n    }\r\n    secondArg = true\r\n  } else {\r\n    // Component(...)\r\n    tagName = unknownTagPattern.replace('{tag}', nameObj.name);\r\n    utils.append(tagName, state);\r\n    utils.move(\r\n      nameObj.range[1] + (tagName.length - nameObj.name.length),\r\n      state\r\n    );\r\n    utils.append('(', state);\r\n  }\r\n\r\n  if (hasAtLeastOneSpreadAttribute) {\r\n    if (options.passUnknownTagsToFactory || knownTag) {\r\n      utils.append(', ' + spreadFn + '({', state);\r\n    } else {\r\n      utils.append(spreadFn + '({', state);\r\n    }\r\n  } else if (attributes.length) {\r\n    if (secondArg) {\r\n      utils.append(', ', state);\r\n    }\r\n    utils.append('{', state);\r\n  }\r\n\r\n  var previousWasSpread = false;\r\n\r\n  attributes.forEach(function(attr, index) {\r\n    var isLast = (index === (attributes.length - 1));\r\n\r\n    if (attr.type === Syntax.JSXSpreadAttribute) {\r\n      // close the previous or initial object\r\n      if (!previousWasSpread) {\r\n        utils.append('}, ', state);\r\n      }\r\n\r\n      // Move to the expression start, ignoring everything except parenthesis\r\n      // and whitespace.\r\n      utils.catchup(attr.range[0], state, stripNonParen);\r\n      // Plus 1 to skip `{`.\r\n      utils.move(attr.range[0] + 1, state);\r\n      utils.catchup(attr.argument.range[0], state, stripNonParen);\r\n\r\n      traverse(attr.argument, path, state);\r\n\r\n      utils.catchup(attr.argument.range[1], state);\r\n\r\n      // Move to the end, ignoring parenthesis and the closing `}`\r\n      utils.catchup(attr.range[1] - 1, state, stripNonParen);\r\n\r\n      if (!isLast) {\r\n        utils.append(', ', state);\r\n      }\r\n\r\n      utils.move(attr.range[1], state);\r\n\r\n      previousWasSpread = true;\r\n\r\n      return;\r\n    }\r\n\r\n    // If the next attribute is a spread, we're effective last in this object\r\n    if (!isLast) {\r\n      isLast = attributes[index + 1].type === Syntax.JSXSpreadAttribute;\r\n    }\r\n\r\n    var name\r\n    if (attr.name.namespace) {\r\n      name = attr.name.namespace.name + ':' + attr.name.name.name\r\n    }\r\n    else {\r\n      name = attr.name.name;\r\n    }\r\n\r\n    utils.catchup(attr.range[0], state, trimLeft);\r\n\r\n    if (previousWasSpread) {\r\n      utils.append('{', state);\r\n    }\r\n\r\n    utils.append(quoteJSObjKey(name) + ': ', state);\r\n\r\n    if (attr.value) {\r\n      utils.move(attr.name.range[1], state);\r\n      utils.catchupNewlines(attr.value.range[0], state);\r\n      if (attr.value.type === Syntax.Literal) {\r\n        renderJSXLiteral(attr.value, isLast, state);\r\n      } else {\r\n        renderJSXExpressionContainer(traverse, attr.value, isLast, path, state);\r\n      }\r\n    } else {\r\n      state.g.buffer += 'true';\r\n      state.g.position = attr.name.range[1];\r\n      if (!isLast) {\r\n        utils.append(', ', state);\r\n      }\r\n    }\r\n\r\n    utils.catchup(attr.range[1], state, trimLeft);\r\n\r\n    previousWasSpread = false;\r\n  });\r\n\r\n  if (!openingEl.selfClosing) {\r\n    utils.catchup(openingEl.range[1] - 1, state, trimLeft);\r\n    utils.move(openingEl.range[1], state);\r\n  }\r\n\r\n  if (attributes.length && !previousWasSpread) {\r\n    utils.append('}', state);\r\n  }\r\n\r\n  if (hasAtLeastOneSpreadAttribute) {\r\n    utils.append(')', state);\r\n  }\r\n\r\n  // filter out whitespace\r\n  var children = object.children.filter(function(child) {\r\n    return !(child.type === Syntax.Literal\r\n    && typeof child.value === 'string'\r\n    && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/));\r\n  });\r\n\r\n  if (children.length) {\r\n    if (!attributes.length) {\r\n      if (secondArg) {\r\n        utils.append(', ', state);\r\n      }\r\n      utils.append('null', state);\r\n    }\r\n    var lastRenderableIndex;\r\n\r\n    children.forEach(function(child, index) {\r\n      if (child.type !== Syntax.JSXExpressionContainer ||\r\n        child.expression.type !== Syntax.JSXEmptyExpression) {\r\n        lastRenderableIndex = index;\r\n      }\r\n    });\r\n\r\n    if (lastRenderableIndex !== undefined) {\r\n      utils.append(', ', state);\r\n    }\r\n\r\n    if (arrayChildren && children.length) {\r\n      utils.append('[', state);\r\n    }\r\n\r\n    children.forEach(function(child, index) {\r\n      utils.catchup(child.range[0], state, trimLeft);\r\n\r\n      var isFirst = index === 0;\r\n      var isLast = index >= lastRenderableIndex;\r\n\r\n      if (child.type === Syntax.Literal) {\r\n        renderJSXLiteral(child, isLast, state);\r\n      } else if (child.type === Syntax.JSXExpressionContainer) {\r\n        renderJSXExpressionContainer(traverse, child, isLast, path, state);\r\n      } else {\r\n        traverse(child, path, state);\r\n        if (!isLast) {\r\n          utils.append(',', state);\r\n        }\r\n      }\r\n\r\n      utils.catchup(child.range[1], state, trimLeft);\r\n    });\r\n  }\r\n\r\n  if (openingEl.selfClosing) {\r\n    // everything up to />\r\n    utils.catchup(openingEl.range[1] - 2, state, trimLeft);\r\n    utils.move(openingEl.range[1], state);\r\n  } else {\r\n    // everything up to </close>\r\n    utils.catchup(closingEl.range[0], state, trimLeft);\r\n    utils.move(closingEl.range[1], state);\r\n  }\r\n\r\n  if (arrayChildren && children.length) {\r\n    utils.append(']', state);\r\n  }\r\n\r\n  utils.append(')', state);\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns true if node is JSX tag.\r\n *\r\n * @param {Object} object\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nvisitNode.test = function(object, path, state) {\r\n  return object.type === Syntax.JSXElement;\r\n};\r\n\r\n/**\r\n * Taken from {@link https://github.com/facebook/react/blob/0.10-stable/vendor/fbtransform/transforms/xjs.js}\r\n *\r\n * @param {Object} object\r\n * @param {Boolean} isLast\r\n * @param {Object} state\r\n * @param {Number} start\r\n * @param {Number} end\r\n * @private\r\n */\r\nfunction renderJSXLiteral(object, isLast, state, start, end) {\r\n  var lines = object.value.split(/\\r\\n|\\n|\\r/);\r\n\r\n  if (start) {\r\n    utils.append(start, state);\r\n  }\r\n\r\n  var lastNonEmptyLine = 0;\r\n\r\n  lines.forEach(function (line, index) {\r\n    if (line.match(/[^ \\t]/)) {\r\n      lastNonEmptyLine = index;\r\n    }\r\n  });\r\n\r\n  lines.forEach(function (line, index) {\r\n    var isFirstLine = index === 0;\r\n    var isLastLine = index === lines.length - 1;\r\n    var isLastNonEmptyLine = index === lastNonEmptyLine;\r\n\r\n    // replace rendered whitespace tabs with spaces\r\n    var trimmedLine = line.replace(/\\t/g, ' ');\r\n\r\n    // trim whitespace touching a newline\r\n    if (!isFirstLine) {\r\n      trimmedLine = trimmedLine.replace(/^[ ]+/, '');\r\n    }\r\n    if (!isLastLine) {\r\n      trimmedLine = trimmedLine.replace(/[ ]+$/, '');\r\n    }\r\n\r\n    if (!isFirstLine) {\r\n      utils.append(line.match(/^[ \\t]*/)[0], state);\r\n    }\r\n\r\n    if (trimmedLine || isLastNonEmptyLine) {\r\n      utils.append(\r\n        JSON.stringify(trimmedLine) +\r\n        (!isLastNonEmptyLine ? \" + ' ' +\" : ''),\r\n        state);\r\n\r\n      if (isLastNonEmptyLine) {\r\n        if (end) {\r\n          utils.append(end, state);\r\n        }\r\n        if (!isLast) {\r\n          utils.append(', ', state);\r\n        }\r\n      }\r\n\r\n      // only restore tail whitespace if line had literals\r\n      if (trimmedLine && !isLastLine) {\r\n        utils.append(line.match(/[ \\t]*$/)[0], state);\r\n      }\r\n    }\r\n\r\n    if (!isLastLine) {\r\n      utils.append('\\n', state);\r\n    }\r\n  });\r\n\r\n  utils.move(object.range[1], state);\r\n}\r\n\r\n/**\r\n * Taken from {@link https://github.com/facebook/react/blob/0.10-stable/vendor/fbtransform/transforms/xjs.js}\r\n *\r\n * @param {Function} traverse\r\n * @param {Object} object\r\n * @param {Boolean} isLast\r\n * @param {String} path\r\n * @param {Object} state\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nfunction renderJSXExpressionContainer(traverse, object, isLast, path, state) {\r\n  // Plus 1 to skip `{`.\r\n  utils.move(object.range[0] + 1, state);\r\n  traverse(object.expression, path, state);\r\n\r\n  if (!isLast && object.expression.type !== Syntax.JSXEmptyExpression) {\r\n    // If we need to append a comma, make sure to do so after the expression.\r\n    utils.catchup(object.expression.range[1], state, trimLeft);\r\n    utils.append(', ', state);\r\n  }\r\n\r\n  // Minus 1 to skip `}`.\r\n  utils.catchup(object.range[1] - 1, state, trimLeft);\r\n  utils.move(object.range[1], state);\r\n  return false;\r\n}\r\n\r\n/**\r\n * Quote invalid object literal keys.\r\n *\r\n * @param {String} name\r\n * @returns {String}\r\n * @private\r\n */\r\nfunction quoteJSObjKey(name) {\r\n  if (!/^[a-z_$][a-z\\d_$]*$/i.test(name)) {\r\n    return \"'\" + name + \"'\";\r\n  }\r\n  return name;\r\n}\r\n\r\n/**\r\n * Trim whitespace left of `val`.\r\n *\r\n * @param {String} val\r\n * @returns {String}\r\n * @private\r\n */\r\nfunction trimLeft(val) {\r\n  return val.replace(/^ +/, '');\r\n}\r\n\r\n/**\r\n * Removes all non-parenthesis characters\r\n */\r\nvar reNonParen = /([^\\(\\)])/g;\r\nfunction stripNonParen(value) {\r\n  return value.replace(reNonParen, '');\r\n}\r\n","/**\r\n * Trim all trailing spaces.\r\n *\r\n * @param {String} val\r\n * @returns {String}\r\n * @private\r\n */\r\nfunction trimTrailingSpaces(val) {\r\n  return val.replace(/[^\\S\\r\\n]+$/gm, \"\");\r\n}\r\n\r\nmodule.exports = trimTrailingSpaces;\r\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var Transform = require('readable-stream/transform')\n  , inherits  = require('util').inherits\n  , xtend     = require('xtend')\n\nfunction DestroyableTransform(opts) {\n  Transform.call(this, opts)\n  this._destroyed = false\n}\n\ninherits(DestroyableTransform, Transform)\n\nDestroyableTransform.prototype.destroy = function(err) {\n  if (this._destroyed) return\n  this._destroyed = true\n  \n  var self = this\n  process.nextTick(function() {\n    if (err)\n      self.emit('error', err)\n    self.emit('close')\n  })\n}\n\n// a noop _transform function\nfunction noop (chunk, enc, callback) {\n  callback(null, chunk)\n}\n\n\n// create a new export function, used by both the main export and\n// the .ctor export, contains common logic for dealing with arguments\nfunction through2 (construct) {\n  return function (options, transform, flush) {\n    if (typeof options == 'function') {\n      flush     = transform\n      transform = options\n      options   = {}\n    }\n\n    if (typeof transform != 'function')\n      transform = noop\n\n    if (typeof flush != 'function')\n      flush = null\n\n    return construct(options, transform, flush)\n  }\n}\n\n\n// main export, just make me a transform stream!\nmodule.exports = through2(function (options, transform, flush) {\n  var t2 = new DestroyableTransform(options)\n\n  t2._transform = transform\n\n  if (flush)\n    t2._flush = flush\n\n  return t2\n})\n\n\n// make me a reusable prototype that I can `new`, or implicitly `new`\n// with a constructor call\nmodule.exports.ctor = through2(function (options, transform, flush) {\n  function Through2 (override) {\n    if (!(this instanceof Through2))\n      return new Through2(override)\n\n    this.options = xtend(options, override)\n\n    DestroyableTransform.call(this, this.options)\n  }\n\n  inherits(Through2, DestroyableTransform)\n\n  Through2.prototype._transform = transform\n\n  if (flush)\n    Through2.prototype._flush = flush\n\n  return Through2\n})\n\n\nmodule.exports.obj = through2(function (options, transform, flush) {\n  var t2 = new DestroyableTransform(xtend({ objectMode: true, highWaterMark: 16 }, options))\n\n  t2._transform = transform\n\n  if (flush)\n    t2._flush = flush\n\n  return t2\n})\n","/*!\r\n * jsx-transform\r\n * https://github.com/alexmingoia/jsx-transform\r\n */\r\n\r\n/**\r\n * This module aims to be a standard and configurable implementation of JSX\r\n * decoupled from {@link https://github.com/facebook/react|React} for use with\r\n * {@link https://github.com/Raynos/mercury|Mercury} or other modules.\r\n *\r\n * JSX is a JavaScript syntax for composing virtual DOM elements.\r\n * See React's [documentation][0] for an explanation.\r\n *\r\n * For linting files containing JSX see\r\n * {@link https://github.com/STRML/JSXHint|JSXHint}.\r\n *\r\n * @module jsx-transform\r\n */\r\n\r\n'use strict';\r\n\r\nvar fs = require('fs');\r\nvar getExtension = require('path').extname;\r\nvar jstransform = require('jstransform').transform;\r\nvar visitNode = require('./visitor');\r\nvar trimTrailingSpaces = require('./trimTrailingSpaces');\r\nvar through = require('through2');\r\n\r\nmodule.exports = {\r\n  fromString: fromString,\r\n  fromFile: fromFile,\r\n  browserifyTransform: browserifyTransform,\r\n  visitor: visitNode\r\n};\r\n\r\n/**\r\n * Desugar JSX and return transformed string.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * var jsx = require('jsx-transform');\r\n *\r\n * jsx.fromString('<h1>Hello World</h1>', {\r\n *   factory: 'mercury.h'\r\n * });\r\n * // => 'mercury.h(\"h1\", null, [\"Hello World\"])'\r\n * ```\r\n *\r\n * @param {String} str\r\n * @param {Object=} options\r\n * @param {String} options.factory Factory function name for element creation.\r\n * @param {String=} options.spreadFn Name of function for use with spread\r\n * attributes (default: Object.assign).\r\n * @param {String=} options.unknownTagPattern uses given pattern for unknown\r\n * tags where `{tag}` is replaced by the tag name. Useful for rending mercury\r\n * components as `Component.render()` instead of `Component()`.\r\n * @param {Boolean=} options.passUnknownTagsToFactory Handle unknown tags\r\n * like known tags, and pass them as an object to `options.factory`. If\r\n * true, `createElement(Component)` instead of `Component()` (default: false).\r\n * @param {Boolean=} options.unknownTagsAsString Pass unknown tags as string\r\n * to `options.factory` (default: false).\r\n * @param {Boolean=} options.arrayChildren Pass children as array instead of\r\n * arguments (default: true).\r\n * @returns {String}\r\n */\r\nfunction fromString(str, options) {\r\n  options = processOptions(options);\r\n\r\n  var transformed = jstransform([visitNode], str, options).code;\r\n\r\n  return trimTrailingSpaces(transformed);\r\n}\r\n\r\n/**\r\n * @param {String} path\r\n * @param {Object=} options\r\n * @returns {String}\r\n */\r\nfunction fromFile(path, options) {\r\n  options = processOptions(options);\r\n  var transformed = jstransform([visitNode], fs.readFileSync(path, 'utf8'), options).code;\r\n  return trimTrailingSpaces(transformed);\r\n}\r\n\r\nfunction processOptions(options){\r\n  if (typeof options !== 'object') {\r\n    options = {};\r\n  }\r\n\r\n  if (typeof options.factory !== 'string') {\r\n    throw new Error('Missing options.factory function name.');\r\n  }\r\n\r\n  // parses the file as an ES6 module, except disabled implicit strict-mode\r\n  if (typeof options.sourceType === 'undefined') {\r\n    options.sourceType = 'nonStrictModule';\r\n  }\r\n\r\n  // defaults to true to keep existing behaviour (but inconsietent with babel and react-tools)\r\n  if (typeof options.arrayChildren === 'undefined') {\r\n    options.arrayChildren = true;\r\n  }\r\n\r\n  if (typeof options.spreadFn !== 'string') {\r\n    options.spreadFn = 'Object.assign';\r\n  }\r\n\r\n  if (typeof options.unknownTagPattern !== 'string') {\r\n    options.unknownTagPattern = '{tag}';\r\n  }\r\n\r\n  return options;\r\n}\r\n\r\n/**\r\n * Make a browserify transform.\r\n *\r\n * @example\r\n *\r\n * ```javascript\r\n * var browserify = require('browserify');\r\n * var jsxify = require('jsx-transform').browserifyTransform;\r\n *\r\n * browserify()\r\n *   .transform(jsxify, options)\r\n *   .bundle()\r\n * ```\r\n *\r\n * Use `.configure(options)` to return a configured transform:\r\n *\r\n * ```javascript\r\n * var browserify = require('browserify');\r\n * var jsxify = require('jsx-transform').browserifyTransform;\r\n *\r\n * browserify({\r\n *   transforms: [jsxify.configure(options)]\r\n * }).bundle()\r\n * ```\r\n *\r\n * Use in `package.json`:\r\n *\r\n * ```json\r\n * \"browserify\": {\r\n *   \"transform\": [\r\n *     [\"jsx-transform/browserify\", { \"factory\": \"h\" }]\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * @param {String=} filename\r\n * @param {Object=} options\r\n * @param {String=} options.extensions Array of file extensions to run\r\n * browserify transform on (default: `['.js', '.jsx', '.es', '.es6']`).\r\n * @returns {Function} browserify transform\r\n */\r\nfunction browserifyTransform(filename, options) {\r\n  return browserifyTransform.configure(options)(filename);\r\n}\r\n\r\nbrowserifyTransform.configure = function (options) {\r\n  if (typeof options.extensions === 'undefined') {\r\n    options.extensions = ['.js', '.jsx', '.es', '.es6'];\r\n  }\r\n\r\n  return function (filename) {\r\n    return through(function (buf, enc, next) {\r\n      try {\r\n        if (~options.extensions.indexOf(getExtension(filename))) {\r\n          this.push(fromString(buf.toString('utf8'), options));\r\n        } else {\r\n          this.push(buf.toString());\r\n        }\r\n        next();\r\n      } catch (err) {\r\n        next(err);\r\n      }\r\n    });\r\n  };\r\n}\r\n","'use strict';\n\nconst UNDEFINED_CODE_POINTS = [\n    0xfffe,\n    0xffff,\n    0x1fffe,\n    0x1ffff,\n    0x2fffe,\n    0x2ffff,\n    0x3fffe,\n    0x3ffff,\n    0x4fffe,\n    0x4ffff,\n    0x5fffe,\n    0x5ffff,\n    0x6fffe,\n    0x6ffff,\n    0x7fffe,\n    0x7ffff,\n    0x8fffe,\n    0x8ffff,\n    0x9fffe,\n    0x9ffff,\n    0xafffe,\n    0xaffff,\n    0xbfffe,\n    0xbffff,\n    0xcfffe,\n    0xcffff,\n    0xdfffe,\n    0xdffff,\n    0xefffe,\n    0xeffff,\n    0xffffe,\n    0xfffff,\n    0x10fffe,\n    0x10ffff\n];\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0d,\n    LINE_FEED: 0x0a,\n    FORM_FEED: 0x0c,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2d,\n    SOLIDUS: 0x2f,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3b,\n    LESS_THAN_SIGN: 0x3c,\n    EQUALS_SIGN: 0x3d,\n    GREATER_THAN_SIGN: 0x3e,\n    QUESTION_MARK: 0x3f,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5a,\n    RIGHT_SQUARE_BRACKET: 0x5d,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7a,\n    REPLACEMENT_CHARACTER: 0xfffd\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\n};\n\n//Surrogates\nexports.isSurrogate = function(cp) {\n    return cp >= 0xd800 && cp <= 0xdfff;\n};\n\nexports.isSurrogatePair = function(cp) {\n    return cp >= 0xdc00 && cp <= 0xdfff;\n};\n\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\n};\n\n//NOTE: excluding NULL and ASCII whitespace\nexports.isControlCodePoint = function(cp) {\n    return (\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f)\n    );\n};\n\nexports.isUndefinedCodePoint = function(cp) {\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\n};\n","'use strict';\n\nmodule.exports = {\n    controlCharacterInInputStream: 'control-character-in-input-stream',\n    noncharacterInInputStream: 'noncharacter-in-input-stream',\n    surrogateInInputStream: 'surrogate-in-input-stream',\n    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',\n    endTagWithAttributes: 'end-tag-with-attributes',\n    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',\n    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',\n    unexpectedNullCharacter: 'unexpected-null-character',\n    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',\n    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',\n    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',\n    missingEndTagName: 'missing-end-tag-name',\n    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',\n    unknownNamedCharacterReference: 'unknown-named-character-reference',\n    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',\n    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',\n    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',\n    eofBeforeTagName: 'eof-before-tag-name',\n    eofInTag: 'eof-in-tag',\n    missingAttributeValue: 'missing-attribute-value',\n    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',\n    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',\n    missingWhitespaceBetweenDoctypePublicAndSytemIdentifier:\n        'missing-whitespace-between-doctype-public-and-system-identifiers',\n    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',\n    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',\n    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',\n    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',\n    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',\n    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',\n    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',\n    cdataInHtmlContent: 'cdata-in-html-content',\n    incorrectlyOpenedComment: 'incorrectly-opened-comment',\n    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',\n    eofInDoctype: 'eof-in-doctype',\n    nestedComment: 'nested-comment',\n    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',\n    eofInComment: 'eof-in-comment',\n    incorrectlyClosedComment: 'incorrectly-closed-comment',\n    eofInCdata: 'eof-in-cdata',\n    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',\n    nullCharacterReference: 'null-character-reference',\n    surrogateCharacterReference: 'surrogate-character-reference',\n    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',\n    controlCharacterReference: 'control-character-reference',\n    noncharacterCharacterReference: 'noncharacter-character-reference',\n    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',\n    missingDoctypeName: 'missing-doctype-name',\n    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',\n    duplicateAttribute: 'duplicate-attribute',\n    nonConformingDoctype: 'non-conforming-doctype',\n    missingDoctype: 'missing-doctype',\n    misplacedDoctype: 'misplaced-doctype',\n    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',\n    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',\n    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',\n    openElementsLeftAfterEof: 'open-elements-left-after-eof',\n    abandonedHeadElementChild: 'abandoned-head-element-child',\n    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',\n    nestedNoscriptInHead: 'nested-noscript-in-head',\n    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'\n};\n","'use strict';\n\nconst unicode = require('../common/unicode');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor() {\n        this.html = null;\n\n        this.pos = -1;\n        this.lastGapPos = -1;\n        this.lastCharPos = -1;\n\n        this.gapStack = [];\n\n        this.skipNextNewLine = false;\n\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    }\n\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.lastCharPos) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n\n            if (unicode.isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n\n                //NOTE: add gap that should be avoided during retreat\n                this._addGap();\n\n                return unicode.getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n\n        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n\n        return cp;\n    }\n\n    dropParsedChunk() {\n        if (this.pos > this.bufferWaterline) {\n            this.lastCharPos -= this.pos;\n            this.html = this.html.substring(this.pos);\n            this.pos = 0;\n            this.lastGapPos = -1;\n            this.gapStack = [];\n        }\n    }\n\n    write(chunk, isLastChunk) {\n        if (this.html) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n    }\n\n    advance() {\n        this.pos++;\n\n        if (this.pos > this.lastCharPos) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n\n        let cp = this.html.charCodeAt(this.pos);\n\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (this.skipNextNewLine && cp === $.LINE_FEED) {\n            this.skipNextNewLine = false;\n            this._addGap();\n            return this.advance();\n        }\n\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n\n        this.skipNextNewLine = false;\n\n        if (unicode.isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange =\n            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);\n\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n\n        return cp;\n    }\n\n    _checkForProblematicCharacters(cp) {\n        if (unicode.isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        } else if (unicode.isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n\n    retreat() {\n        if (this.pos === this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n\n        this.pos--;\n    }\n}\n\nmodule.exports = Preprocessor;\n","'use strict';\n\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);","'use strict';\n\nconst Preprocessor = require('./preprocessor');\nconst unicode = require('../common/unicode');\nconst neTree = require('./named-entity-data');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\nconst $$ = unicode.CODE_POINT_SEQUENCES;\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = {\n    0x80: 0x20ac,\n    0x82: 0x201a,\n    0x83: 0x0192,\n    0x84: 0x201e,\n    0x85: 0x2026,\n    0x86: 0x2020,\n    0x87: 0x2021,\n    0x88: 0x02c6,\n    0x89: 0x2030,\n    0x8a: 0x0160,\n    0x8b: 0x2039,\n    0x8c: 0x0152,\n    0x8e: 0x017d,\n    0x91: 0x2018,\n    0x92: 0x2019,\n    0x93: 0x201c,\n    0x94: 0x201d,\n    0x95: 0x2022,\n    0x96: 0x2013,\n    0x97: 0x2014,\n    0x98: 0x02dc,\n    0x99: 0x2122,\n    0x9a: 0x0161,\n    0x9b: 0x203a,\n    0x9c: 0x0153,\n    0x9e: 0x017e,\n    0x9f: 0x0178\n};\n\n// Named entity tree flags\nconst HAS_DATA_FLAG = 1 << 0;\nconst DATA_DUPLET_FLAG = 1 << 1;\nconst HAS_BRANCHES_FLAG = 1 << 2;\nconst MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n//States\nconst DATA_STATE = 'DATA_STATE';\nconst RCDATA_STATE = 'RCDATA_STATE';\nconst RAWTEXT_STATE = 'RAWTEXT_STATE';\nconst SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';\nconst PLAINTEXT_STATE = 'PLAINTEXT_STATE';\nconst TAG_OPEN_STATE = 'TAG_OPEN_STATE';\nconst END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';\nconst TAG_NAME_STATE = 'TAG_NAME_STATE';\nconst RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';\nconst RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';\nconst RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';\nconst RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';\nconst RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';\nconst RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';\nconst SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';\nconst BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';\nconst ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';\nconst AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';\nconst BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';\nconst ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';\nconst AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';\nconst SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';\nconst BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';\nconst MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';\nconst COMMENT_START_STATE = 'COMMENT_START_STATE';\nconst COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';\nconst COMMENT_STATE = 'COMMENT_STATE';\nconst COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';\nconst COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';\nconst COMMENT_END_STATE = 'COMMENT_END_STATE';\nconst COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';\nconst DOCTYPE_STATE = 'DOCTYPE_STATE';\nconst BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';\nconst DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';\nconst AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';\nconst CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\nconst CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';\nconst CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';\nconst CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';\nconst NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';\nconst AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\n\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\n\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xffff) {\n        return String.fromCharCode(cp);\n    }\n\n    cp -= 0x10000;\n    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    const branchCount = neTree[++nodeIx];\n    let lo = ++nodeIx;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midCp = neTree[mid];\n\n        if (midCp < cp) {\n            lo = mid + 1;\n        } else if (midCp > cp) {\n            hi = mid - 1;\n        } else {\n            return neTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\n//Tokenizer\nclass Tokenizer {\n    constructor() {\n        this.preprocessor = new Preprocessor();\n\n        this.tokenQueue = [];\n\n        this.allowCDATA = false;\n\n        this.state = DATA_STATE;\n        this.returnState = '';\n\n        this.charRefCode = -1;\n        this.tempBuff = [];\n        this.lastStartTagName = '';\n\n        this.consumedAfterSnapshot = -1;\n        this.active = false;\n\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = null;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _errOnNextCodePoint(err) {\n        this._consume();\n        this._err(err);\n        this._unconsume();\n    }\n\n    //API\n    getNextToken() {\n        while (!this.tokenQueue.length && this.active) {\n            this.consumedAfterSnapshot = 0;\n\n            const cp = this._consume();\n\n            if (!this._ensureHibernation()) {\n                this[this.state](cp);\n            }\n        }\n\n        return this.tokenQueue.shift();\n    }\n\n    write(chunk, isLastChunk) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    }\n\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\n                this.preprocessor.retreat();\n            }\n\n            this.active = false;\n            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n\n    _unconsume() {\n        this.consumedAfterSnapshot--;\n        this.preprocessor.retreat();\n    }\n\n    _reconsumeInState(state) {\n        this.state = state;\n        this._unconsume();\n    }\n\n    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {\n        let consumedCount = 0;\n        let isMatch = true;\n        const patternLength = pattern.length;\n        let patternPos = 0;\n        let cp = startCp;\n        let patternCp = void 0;\n\n        for (; patternPos < patternLength; patternPos++) {\n            if (patternPos > 0) {\n                cp = this._consume();\n                consumedCount++;\n            }\n\n            if (cp === $.EOF) {\n                isMatch = false;\n                break;\n            }\n\n            patternCp = pattern[patternPos];\n\n            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n                isMatch = false;\n                break;\n            }\n        }\n\n        if (!isMatch) {\n            while (consumedCount--) {\n                this._unconsume();\n            }\n        }\n\n        return isMatch;\n    }\n\n    //Temp buffer\n    _isTempBufferEqualToScriptString() {\n        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.tempBuff.length; i++) {\n            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: Tokenizer.START_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createEndTagToken() {\n        this.currentToken = {\n            type: Tokenizer.END_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createCommentToken() {\n        this.currentToken = {\n            type: Tokenizer.COMMENT_TOKEN,\n            data: ''\n        };\n    }\n\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: Tokenizer.DOCTYPE_TOKEN,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null\n        };\n    }\n\n    _createCharacterToken(type, ch) {\n        this.currentCharacterToken = {\n            type: type,\n            chars: ch\n        };\n    }\n\n    _createEOFToken() {\n        this.currentToken = { type: Tokenizer.EOF_TOKEN };\n    }\n\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: ''\n        };\n    }\n\n    _leaveAttrName(toState) {\n        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {\n            this.currentToken.attrs.push(this.currentAttr);\n        } else {\n            this._err(ERR.duplicateAttribute);\n        }\n\n        this.state = toState;\n    }\n\n    _leaveAttrValue(toState) {\n        this.state = toState;\n    }\n\n    //Token emission\n    _emitCurrentToken() {\n        this._emitCurrentCharacterToken();\n\n        const ct = this.currentToken;\n\n        this.currentToken = null;\n\n        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n        if (ct.type === Tokenizer.START_TAG_TOKEN) {\n            this.lastStartTagName = ct.tagName;\n        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n        }\n\n        this.tokenQueue.push(ct);\n    }\n\n    _emitCurrentCharacterToken() {\n        if (this.currentCharacterToken) {\n            this.tokenQueue.push(this.currentCharacterToken);\n            this.currentCharacterToken = null;\n        }\n    }\n\n    _emitEOFToken() {\n        this._createEOFToken();\n        this._emitCurrentToken();\n    }\n\n    //Characters emission\n\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {\n            this._emitCurrentCharacterToken();\n        }\n\n        if (this.currentCharacterToken) {\n            this.currentCharacterToken.chars += ch;\n        } else {\n            this._createCharacterToken(type, ch);\n        }\n    }\n\n    _emitCodePoint(cp) {\n        let type = Tokenizer.CHARACTER_TOKEN;\n\n        if (isWhitespace(cp)) {\n            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n        } else if (cp === $.NULL) {\n            type = Tokenizer.NULL_CHARACTER_TOKEN;\n        }\n\n        this._appendCharToCurrentCharacterToken(type, toChar(cp));\n    }\n\n    _emitSeveralCodePoints(codePoints) {\n        for (let i = 0; i < codePoints.length; i++) {\n            this._emitCodePoint(codePoints[i]);\n        }\n    }\n\n    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n    //So we can avoid additional checks here.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n    }\n\n    // Character reference helpers\n    _matchNamedCharacterReference(startCp) {\n        let result = null;\n        let excess = 1;\n        let i = findNamedEntityTreeBranch(0, startCp);\n\n        this.tempBuff.push(startCp);\n\n        while (i > -1) {\n            const current = neTree[i];\n            const inNode = current < MAX_BRANCH_MARKER_VALUE;\n            const nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n            if (nodeWithData) {\n                //NOTE: we use greedy search, so we continue lookup at this point\n                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n                excess = 0;\n            }\n\n            const cp = this._consume();\n\n            this.tempBuff.push(cp);\n            excess++;\n\n            if (cp === $.EOF) {\n                break;\n            }\n\n            if (inNode) {\n                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n            } else {\n                i = cp === current ? ++i : -1;\n            }\n        }\n\n        while (excess--) {\n            this.tempBuff.pop();\n            this._unconsume();\n        }\n\n        return result;\n    }\n\n    _isCharacterReferenceInAttribute() {\n        return (\n            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE\n        );\n    }\n\n    _isCharacterReferenceAttributeQuirk(withSemicolon) {\n        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {\n            const nextCp = this._consume();\n\n            this._unconsume();\n\n            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n        }\n\n        return false;\n    }\n\n    _flushCodePointsConsumedAsCharacterReference() {\n        if (this._isCharacterReferenceInAttribute()) {\n            for (let i = 0; i < this.tempBuff.length; i++) {\n                this.currentAttr.value += toChar(this.tempBuff[i]);\n            }\n        } else {\n            this._emitSeveralCodePoints(this.tempBuff);\n        }\n\n        this.tempBuff = [];\n    }\n\n    // State machine\n\n    // Data state\n    //------------------------------------------------------------------\n    [DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = TAG_OPEN_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = DATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitCodePoint(cp);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    //  RCDATA state\n    //------------------------------------------------------------------\n    [RCDATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.AMPERSAND) {\n            this.returnState = RCDATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = RCDATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    [RAWTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    [PLAINTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Tag open state\n    //------------------------------------------------------------------\n    [TAG_OPEN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.state = MARKUP_DECLARATION_OPEN_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.QUESTION_MARK) {\n            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('<');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._emitChars('<');\n            this._reconsumeInState(DATA_STATE);\n        }\n    }\n\n    // End tag open state\n    //------------------------------------------------------------------\n    [END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingEndTagName);\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('</');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Tag name state\n    //------------------------------------------------------------------\n    [TAG_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentToken.tagName += toChar(cp);\n        }\n    }\n\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    [RCDATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RCDATA_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this.state = DATA_STATE;\n                    this._emitCurrentToken();\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RAWTEXT_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n            this._emitChars('<!');\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                } else if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                } else if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this.tempBuff = [];\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE\n                : SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n            this._emitChars('/');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_ESCAPED_STATE\n                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Before attribute name state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.EQUALS_SIGN) {\n            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n            this._createAttr('=');\n            this.state = ATTRIBUTE_NAME_STATE;\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Attribute name state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n            this._unconsume();\n        } else if (cp === $.EQUALS_SIGN) {\n            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n        } else if (isAsciiUpper(cp)) {\n            this.currentAttr.name += toAsciiLowerChar(cp);\n        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\n            this._err(ERR.unexpectedCharacterInAttributeName);\n            this.currentAttr.name += toChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentAttr.name += toChar(cp);\n        }\n    }\n\n    // After attribute name state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.EQUALS_SIGN) {\n            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Before attribute value state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingAttributeValue);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n        }\n    }\n\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (\n            cp === $.QUOTATION_MARK ||\n            cp === $.APOSTROPHE ||\n            cp === $.LESS_THAN_SIGN ||\n            cp === $.EQUALS_SIGN ||\n            cp === $.GRAVE_ACCENT\n        ) {\n            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n            this.currentAttr.value += toChar(cp);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.SOLIDUS) {\n            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBetweenAttributes);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    [SELF_CLOSING_START_TAG_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.currentToken.selfClosing = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedSolidusInTag);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Bogus comment state\n    //------------------------------------------------------------------\n    [BOGUS_COMMENT_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    [MARKUP_DECLARATION_OPEN_STATE](cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {\n            this.state = DOCTYPE_STATE;\n        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {\n            if (this.allowCDATA) {\n                this.state = CDATA_SECTION_STATE;\n            } else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken();\n                this.currentToken.data = '[CDATA[';\n                this.state = BOGUS_COMMENT_STATE;\n            }\n        }\n\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Comment start state\n    //------------------------------------------------------------------\n    [COMMENT_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_START_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment start dash state\n    //------------------------------------------------------------------\n    [COMMENT_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment state\n    //------------------------------------------------------------------\n    [COMMENT_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '<';\n            this.state = COMMENT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.currentToken.data += '!';\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '!';\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_END_DASH_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n\n        this._reconsumeInState(COMMENT_END_STATE);\n    }\n\n    // Comment end dash state\n    //------------------------------------------------------------------\n    [COMMENT_END_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end state\n    //------------------------------------------------------------------\n    [COMMENT_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = COMMENT_END_BANG_STATE;\n        } else if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '-';\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end bang state\n    //------------------------------------------------------------------\n    [COMMENT_END_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '--!';\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.incorrectlyClosedComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--!';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    [DOCTYPE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBeforeDoctypeName);\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        }\n    }\n\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(toAsciiLowerChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeName);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._createDoctypeToken(toChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        }\n    }\n\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    [DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = AFTER_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.name += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.name += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\n        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\n        }\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSytemIdentifier);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSytemIdentifier);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    [BOGUS_DOCTYPE_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        }\n    }\n\n    // CDATA section state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_BRACKET_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInCdata);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_BRACKET_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_END_STATE;\n        } else {\n            this._emitChars(']');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // CDATA section end state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n        } else if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this._emitChars(']');\n        } else {\n            this._emitChars(']]');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // Character reference state\n    //------------------------------------------------------------------\n    [CHARACTER_REFERENCE_STATE](cp) {\n        this.tempBuff = [$.AMPERSAND];\n\n        if (cp === $.NUMBER_SIGN) {\n            this.tempBuff.push(cp);\n            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;\n        } else if (isAsciiAlphaNumeric(cp)) {\n            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Named character reference state\n    //------------------------------------------------------------------\n    [NAMED_CHARACTER_REFERENCE_STATE](cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n\n        //NOTE: matching can be abrupted by hibernation. In that case match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            this.tempBuff = [$.AMPERSAND];\n        } else if (matchResult) {\n            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;\n\n            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {\n                if (!withSemicolon) {\n                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);\n                }\n\n                this.tempBuff = matchResult;\n            }\n\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = this.returnState;\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = AMBIGUOUS_AMPERSAND_STATE;\n        }\n    }\n\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    [AMBIGUOUS_AMPERSAND_STATE](cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            if (this._isCharacterReferenceInAttribute()) {\n                this.currentAttr.value += toChar(cp);\n            } else {\n                this._emitCodePoint(cp);\n            }\n        } else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {\n        this.charRefCode = 0;\n\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.tempBuff.push(cp);\n            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;\n        } else {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);\n        }\n    }\n\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiHexDigit(cp)) {\n            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Decimal character reference start state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        } else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        } else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (this.charRefCode > 0x10ffff) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];\n\n            if (replacement) {\n                this.charRefCode = replacement;\n            }\n        }\n\n        this.tempBuff = [this.charRefCode];\n\n        this._flushCodePointsConsumedAsCharacterReference();\n        this._reconsumeInState(this.returnState);\n    }\n}\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n\n    return null;\n};\n\nmodule.exports = Tokenizer;\n","'use strict';\n\nconst NS = (exports.NAMESPACES = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\n\nexports.ATTRS = {\n    TYPE: 'type',\n    ACTION: 'action',\n    ENCODING: 'encoding',\n    PROMPT: 'prompt',\n    NAME: 'name',\n    COLOR: 'color',\n    FACE: 'face',\n    SIZE: 'size'\n};\n\nexports.DOCUMENT_MODE = {\n    NO_QUIRKS: 'no-quirks',\n    QUIRKS: 'quirks',\n    LIMITED_QUIRKS: 'limited-quirks'\n};\n\nconst $ = (exports.TAG_NAMES = {\n    A: 'a',\n    ADDRESS: 'address',\n    ANNOTATION_XML: 'annotation-xml',\n    APPLET: 'applet',\n    AREA: 'area',\n    ARTICLE: 'article',\n    ASIDE: 'aside',\n\n    B: 'b',\n    BASE: 'base',\n    BASEFONT: 'basefont',\n    BGSOUND: 'bgsound',\n    BIG: 'big',\n    BLOCKQUOTE: 'blockquote',\n    BODY: 'body',\n    BR: 'br',\n    BUTTON: 'button',\n\n    CAPTION: 'caption',\n    CENTER: 'center',\n    CODE: 'code',\n    COL: 'col',\n    COLGROUP: 'colgroup',\n\n    DD: 'dd',\n    DESC: 'desc',\n    DETAILS: 'details',\n    DIALOG: 'dialog',\n    DIR: 'dir',\n    DIV: 'div',\n    DL: 'dl',\n    DT: 'dt',\n\n    EM: 'em',\n    EMBED: 'embed',\n\n    FIELDSET: 'fieldset',\n    FIGCAPTION: 'figcaption',\n    FIGURE: 'figure',\n    FONT: 'font',\n    FOOTER: 'footer',\n    FOREIGN_OBJECT: 'foreignObject',\n    FORM: 'form',\n    FRAME: 'frame',\n    FRAMESET: 'frameset',\n\n    H1: 'h1',\n    H2: 'h2',\n    H3: 'h3',\n    H4: 'h4',\n    H5: 'h5',\n    H6: 'h6',\n    HEAD: 'head',\n    HEADER: 'header',\n    HGROUP: 'hgroup',\n    HR: 'hr',\n    HTML: 'html',\n\n    I: 'i',\n    IMG: 'img',\n    IMAGE: 'image',\n    INPUT: 'input',\n    IFRAME: 'iframe',\n\n    KEYGEN: 'keygen',\n\n    LABEL: 'label',\n    LI: 'li',\n    LINK: 'link',\n    LISTING: 'listing',\n\n    MAIN: 'main',\n    MALIGNMARK: 'malignmark',\n    MARQUEE: 'marquee',\n    MATH: 'math',\n    MENU: 'menu',\n    META: 'meta',\n    MGLYPH: 'mglyph',\n    MI: 'mi',\n    MO: 'mo',\n    MN: 'mn',\n    MS: 'ms',\n    MTEXT: 'mtext',\n\n    NAV: 'nav',\n    NOBR: 'nobr',\n    NOFRAMES: 'noframes',\n    NOEMBED: 'noembed',\n    NOSCRIPT: 'noscript',\n\n    OBJECT: 'object',\n    OL: 'ol',\n    OPTGROUP: 'optgroup',\n    OPTION: 'option',\n\n    P: 'p',\n    PARAM: 'param',\n    PLAINTEXT: 'plaintext',\n    PRE: 'pre',\n\n    RB: 'rb',\n    RP: 'rp',\n    RT: 'rt',\n    RTC: 'rtc',\n    RUBY: 'ruby',\n\n    S: 's',\n    SCRIPT: 'script',\n    SECTION: 'section',\n    SELECT: 'select',\n    SOURCE: 'source',\n    SMALL: 'small',\n    SPAN: 'span',\n    STRIKE: 'strike',\n    STRONG: 'strong',\n    STYLE: 'style',\n    SUB: 'sub',\n    SUMMARY: 'summary',\n    SUP: 'sup',\n\n    TABLE: 'table',\n    TBODY: 'tbody',\n    TEMPLATE: 'template',\n    TEXTAREA: 'textarea',\n    TFOOT: 'tfoot',\n    TD: 'td',\n    TH: 'th',\n    THEAD: 'thead',\n    TITLE: 'title',\n    TR: 'tr',\n    TRACK: 'track',\n    TT: 'tt',\n\n    U: 'u',\n    UL: 'ul',\n\n    SVG: 'svg',\n\n    VAR: 'var',\n\n    WBR: 'wbr',\n\n    XMP: 'xmp'\n});\n\nexports.SPECIAL_ELEMENTS = {\n    [NS.HTML]: {\n        [$.ADDRESS]: true,\n        [$.APPLET]: true,\n        [$.AREA]: true,\n        [$.ARTICLE]: true,\n        [$.ASIDE]: true,\n        [$.BASE]: true,\n        [$.BASEFONT]: true,\n        [$.BGSOUND]: true,\n        [$.BLOCKQUOTE]: true,\n        [$.BODY]: true,\n        [$.BR]: true,\n        [$.BUTTON]: true,\n        [$.CAPTION]: true,\n        [$.CENTER]: true,\n        [$.COL]: true,\n        [$.COLGROUP]: true,\n        [$.DD]: true,\n        [$.DETAILS]: true,\n        [$.DIR]: true,\n        [$.DIV]: true,\n        [$.DL]: true,\n        [$.DT]: true,\n        [$.EMBED]: true,\n        [$.FIELDSET]: true,\n        [$.FIGCAPTION]: true,\n        [$.FIGURE]: true,\n        [$.FOOTER]: true,\n        [$.FORM]: true,\n        [$.FRAME]: true,\n        [$.FRAMESET]: true,\n        [$.H1]: true,\n        [$.H2]: true,\n        [$.H3]: true,\n        [$.H4]: true,\n        [$.H5]: true,\n        [$.H6]: true,\n        [$.HEAD]: true,\n        [$.HEADER]: true,\n        [$.HGROUP]: true,\n        [$.HR]: true,\n        [$.HTML]: true,\n        [$.IFRAME]: true,\n        [$.IMG]: true,\n        [$.INPUT]: true,\n        [$.LI]: true,\n        [$.LINK]: true,\n        [$.LISTING]: true,\n        [$.MAIN]: true,\n        [$.MARQUEE]: true,\n        [$.MENU]: true,\n        [$.META]: true,\n        [$.NAV]: true,\n        [$.NOEMBED]: true,\n        [$.NOFRAMES]: true,\n        [$.NOSCRIPT]: true,\n        [$.OBJECT]: true,\n        [$.OL]: true,\n        [$.P]: true,\n        [$.PARAM]: true,\n        [$.PLAINTEXT]: true,\n        [$.PRE]: true,\n        [$.SCRIPT]: true,\n        [$.SECTION]: true,\n        [$.SELECT]: true,\n        [$.SOURCE]: true,\n        [$.STYLE]: true,\n        [$.SUMMARY]: true,\n        [$.TABLE]: true,\n        [$.TBODY]: true,\n        [$.TD]: true,\n        [$.TEMPLATE]: true,\n        [$.TEXTAREA]: true,\n        [$.TFOOT]: true,\n        [$.TH]: true,\n        [$.THEAD]: true,\n        [$.TITLE]: true,\n        [$.TR]: true,\n        [$.TRACK]: true,\n        [$.UL]: true,\n        [$.WBR]: true,\n        [$.XMP]: true\n    },\n    [NS.MATHML]: {\n        [$.MI]: true,\n        [$.MO]: true,\n        [$.MN]: true,\n        [$.MS]: true,\n        [$.MTEXT]: true,\n        [$.ANNOTATION_XML]: true\n    },\n    [NS.SVG]: {\n        [$.TITLE]: true,\n        [$.FOREIGN_OBJECT]: true,\n        [$.DESC]: true\n    }\n};\n","'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n","'use strict';\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.length = 0;\n        this.entries = [];\n        this.treeAdapter = treeAdapter;\n        this.bookmark = null;\n    }\n\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement) {\n        const candidates = [];\n\n        if (this.length >= NOAH_ARK_CAPACITY) {\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n            const neTagName = this.treeAdapter.getTagName(newElement);\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n            for (let i = this.length - 1; i >= 0; i--) {\n                const entry = this.entries[i];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                    break;\n                }\n\n                const element = entry.element;\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n\n                const isCandidate =\n                    this.treeAdapter.getTagName(element) === neTagName &&\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                    elementAttrs.length === neAttrsLength;\n\n                if (isCandidate) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n\n    _ensureNoahArkCondition(newElement) {\n        const candidates = this._getNoahArkConditionCandidates(newElement);\n        let cLength = candidates.length;\n\n        if (cLength) {\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\n            const neAttrsLength = neAttrs.length;\n            const neAttrsMap = Object.create(null);\n\n            //NOTE: build attrs map for the new element so we can perform fast lookups\n            for (let i = 0; i < neAttrsLength; i++) {\n                const neAttr = neAttrs[i];\n\n                neAttrsMap[neAttr.name] = neAttr.value;\n            }\n\n            for (let i = 0; i < neAttrsLength; i++) {\n                for (let j = 0; j < cLength; j++) {\n                    const cAttr = candidates[j].attrs[i];\n\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                        candidates.splice(j, 1);\n                        cLength--;\n                    }\n\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\n                        return;\n                    }\n                }\n            }\n\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n                this.entries.splice(candidates[i].idx, 1);\n                this.length--;\n            }\n        }\n    }\n\n    //Mutations\n    insertMarker() {\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\n        this.length++;\n    }\n\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n\n        this.entries.push({\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    insertElementAfterBookmark(element, token) {\n        let bookmarkIdx = this.length - 1;\n\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\n            if (this.entries[bookmarkIdx] === this.bookmark) {\n                break;\n            }\n        }\n\n        this.entries.splice(bookmarkIdx + 1, 0, {\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    removeEntry(entry) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (this.entries[i] === entry) {\n                this.entries.splice(i, 1);\n                this.length--;\n                break;\n            }\n        }\n    }\n\n    clearToLastMarker() {\n        while (this.length) {\n            const entry = this.entries.pop();\n\n            this.length--;\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                break;\n            }\n        }\n    }\n\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                return null;\n            }\n\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n\n    getElementEntry(element) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n}\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\nmodule.exports = FormattingElementList;\n","'use strict';\n\nclass Mixin {\n    constructor(host) {\n        const originalMethods = {};\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n        for (const key of Object.keys(overriddenMethods)) {\n            if (typeof overriddenMethods[key] === 'function') {\n                originalMethods[key] = host[key];\n                host[key] = overriddenMethods[key];\n            }\n        }\n    }\n\n    _getOverriddenMethods() {\n        throw new Error('Not implemented');\n    }\n}\n\nMixin.install = function(host, Ctor, opts) {\n    if (!host.__mixins) {\n        host.__mixins = [];\n    }\n\n    for (let i = 0; i < host.__mixins.length; i++) {\n        if (host.__mixins[i].constructor === Ctor) {\n            return host.__mixins[i];\n        }\n    }\n\n    const mixin = new Ctor(host, opts);\n\n    host.__mixins.push(mixin);\n\n    return mixin;\n};\n\nmodule.exports = Mixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass LocationInfoOpenElementStackMixin extends Mixin {\n    constructor(stack, opts) {\n        super(stack);\n\n        this.onItemPop = opts.onItemPop;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            pop() {\n                mxn.onItemPop(this.current);\n                orig.pop.call(this);\n            },\n\n            popAllUpToHtmlElement() {\n                for (let i = this.stackTop; i > 0; i--) {\n                    mxn.onItemPop(this.items[i]);\n                }\n\n                orig.popAllUpToHtmlElement.call(this);\n            },\n\n            remove(element) {\n                mxn.onItemPop(this.current);\n                orig.remove.call(this, element);\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoOpenElementStackMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nconst HTML = require('../../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\n\nclass LocationInfoParserMixin extends Mixin {\n    constructor(parser) {\n        super(parser);\n\n        this.parser = parser;\n        this.treeAdapter = this.parser.treeAdapter;\n        this.posTracker = null;\n        this.lastStartTagToken = null;\n        this.lastFosterParentingLocation = null;\n        this.currentToken = null;\n    }\n\n    _setStartLocation(element) {\n        let loc = null;\n\n        if (this.lastStartTagToken) {\n            loc = Object.assign({}, this.lastStartTagToken.location);\n            loc.startTag = this.lastStartTagToken.location;\n        }\n\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n\n    _setEndLocation(element, closingToken) {\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n\n        if (loc) {\n            if (closingToken.location) {\n                const ctLoc = closingToken.location;\n                const tn = this.treeAdapter.getTagName(element);\n\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n\n                if (isClosingEndTag) {\n                    loc.endTag = Object.assign({}, ctLoc);\n                    loc.endLine = ctLoc.endLine;\n                    loc.endCol = ctLoc.endCol;\n                    loc.endOffset = ctLoc.endOffset;\n                } else {\n                    loc.endLine = ctLoc.startLine;\n                    loc.endCol = ctLoc.startCol;\n                    loc.endOffset = ctLoc.startOffset;\n                }\n            }\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                mxn.lastStartTagToken = null;\n                mxn.lastFosterParentingLocation = null;\n                mxn.currentToken = null;\n\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n\n                mxn.posTracker = tokenizerMixin.posTracker;\n\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n                    onItemPop: function(element) {\n                        mxn._setEndLocation(element, mxn.currentToken);\n                    }\n                });\n            },\n\n            _runParsingLoop(scriptHandler) {\n                orig._runParsingLoop.call(this, scriptHandler);\n\n                // NOTE: generate location info for elements\n                // that remains on open element stack\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n                }\n            },\n\n            //Token processing\n            _processTokenInForeignContent(token) {\n                mxn.currentToken = token;\n                orig._processTokenInForeignContent.call(this, token);\n            },\n\n            _processToken(token) {\n                mxn.currentToken = token;\n                orig._processToken.call(this, token);\n\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n                //their end location explicitly.\n                const requireExplicitUpdate =\n                    token.type === Tokenizer.END_TAG_TOKEN &&\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\n\n                if (requireExplicitUpdate) {\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\n                        const element = this.openElements.items[i];\n\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\n                            mxn._setEndLocation(element, token);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            //Doctype\n            _setDocumentType(token) {\n                orig._setDocumentType.call(this, token);\n\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\n                const cnLength = documentChildren.length;\n\n                for (let i = 0; i < cnLength; i++) {\n                    const node = documentChildren[i];\n\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n                        break;\n                    }\n                }\n            },\n\n            //Elements\n            _attachElementToTree(element) {\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n                //So we will use token location stored in this methods for the element.\n                mxn._setStartLocation(element);\n                mxn.lastStartTagToken = null;\n                orig._attachElementToTree.call(this, element);\n            },\n\n            _appendElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._appendElement.call(this, token, namespaceURI);\n            },\n\n            _insertElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._insertElement.call(this, token, namespaceURI);\n            },\n\n            _insertTemplate(token) {\n                mxn.lastStartTagToken = token;\n                orig._insertTemplate.call(this, token);\n\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n            },\n\n            _insertFakeRootElement() {\n                orig._insertFakeRootElement.call(this);\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n            },\n\n            //Comments\n            _appendCommentNode(token, parent) {\n                orig._appendCommentNode.call(this, token, parent);\n\n                const children = this.treeAdapter.getChildNodes(parent);\n                const commentNode = children[children.length - 1];\n\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n            },\n\n            //Text\n            _findFosterParentingLocation() {\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\n                //in case of foster parenting\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n                return mxn.lastFosterParentingLocation;\n            },\n\n            _insertCharacters(token) {\n                orig._insertCharacters.call(this, token);\n\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\n\n                const parent =\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\n                    this.openElements.currentTmplContent ||\n                    this.openElements.current;\n\n                const siblings = this.treeAdapter.getChildNodes(parent);\n\n                const textNodeIdx =\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\n                        : siblings.length - 1;\n\n                const textNode = siblings[textNodeIdx];\n\n                //NOTE: if we have location assigned by another token, then just update end position\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n\n                if (tnLoc) {\n                    tnLoc.endLine = token.location.endLine;\n                    tnLoc.endCol = token.location.endCol;\n                    tnLoc.endOffset = token.location.endOffset;\n                } else {\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n                }\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoParserMixin;\n","'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n","'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\n    constructor(parser, opts) {\n        super(parser, opts);\n\n        this.opts = opts;\n        this.ctLoc = null;\n        this.locBeforeToken = false;\n    }\n\n    _setErrorLocation(err) {\n        if (this.ctLoc) {\n            err.startLine = this.ctLoc.startLine;\n            err.startCol = this.ctLoc.startCol;\n            err.startOffset = this.ctLoc.startOffset;\n\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n            },\n\n            _processInputToken(token) {\n                mxn.ctLoc = token.location;\n\n                orig._processInputToken.call(this, token);\n            },\n\n            _err(code, options) {\n                mxn.locBeforeToken = options && options.beforeToken;\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingParserMixin;\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n","'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce((merged, optObj) => {\n        Object.keys(optObj).forEach(key => {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n","'use strict';\n\nconst { DOCUMENT_MODE } = require('./html');\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\n\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//en',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//en',\n    '-//as//dtd html 3.0 aswedit + extensions//en',\n    '-//ietf//dtd html 2.0 level 1//en',\n    '-//ietf//dtd html 2.0 level 2//en',\n    '-//ietf//dtd html 2.0 strict level 1//en',\n    '-//ietf//dtd html 2.0 strict level 2//en',\n    '-//ietf//dtd html 2.0 strict//en',\n    '-//ietf//dtd html 2.0//en',\n    '-//ietf//dtd html 2.1e//en',\n    '-//ietf//dtd html 3.0//en',\n    '-//ietf//dtd html 3.0//en//',\n    '-//ietf//dtd html 3.2 final//en',\n    '-//ietf//dtd html 3.2//en',\n    '-//ietf//dtd html 3//en',\n    '-//ietf//dtd html level 0//en',\n    '-//ietf//dtd html level 0//en//2.0',\n    '-//ietf//dtd html level 1//en',\n    '-//ietf//dtd html level 1//en//2.0',\n    '-//ietf//dtd html level 2//en',\n    '-//ietf//dtd html level 2//en//2.0',\n    '-//ietf//dtd html level 3//en',\n    '-//ietf//dtd html level 3//en//3.0',\n    '-//ietf//dtd html strict level 0//en',\n    '-//ietf//dtd html strict level 0//en//2.0',\n    '-//ietf//dtd html strict level 1//en',\n    '-//ietf//dtd html strict level 1//en//2.0',\n    '-//ietf//dtd html strict level 2//en',\n    '-//ietf//dtd html strict level 2//en//2.0',\n    '-//ietf//dtd html strict level 3//en',\n    '-//ietf//dtd html strict level 3//en//3.0',\n    '-//ietf//dtd html strict//en',\n    '-//ietf//dtd html strict//en//2.0',\n    '-//ietf//dtd html strict//en//3.0',\n    '-//ietf//dtd html//en',\n    '-//ietf//dtd html//en//2.0',\n    '-//ietf//dtd html//en//3.0',\n    '-//metrius//dtd metrius presentational//en',\n    '-//microsoft//dtd internet explorer 2.0 html strict//en',\n    '-//microsoft//dtd internet explorer 2.0 html//en',\n    '-//microsoft//dtd internet explorer 2.0 tables//en',\n    '-//microsoft//dtd internet explorer 3.0 html strict//en',\n    '-//microsoft//dtd internet explorer 3.0 html//en',\n    '-//microsoft//dtd internet explorer 3.0 tables//en',\n    '-//netscape comm. corp.//dtd html//en',\n    '-//netscape comm. corp.//dtd strict html//en',\n    \"-//o'reilly and associates//dtd html 2.0//en\",\n    \"-//o'reilly and associates//dtd html extended 1.0//en\",\n    '-//spyglass//dtd html 2.0 extended//en',\n    '-//sq//dtd html 2.0 hotmetal + extensions//en',\n    '-//sun microsystems corp.//dtd hotjava html//en',\n    '-//sun microsystems corp.//dtd hotjava strict html//en',\n    '-//w3c//dtd html 3 1995-03-24//en',\n    '-//w3c//dtd html 3.2 draft//en',\n    '-//w3c//dtd html 3.2 final//en',\n    '-//w3c//dtd html 3.2//en',\n    '-//w3c//dtd html 3.2s draft//en',\n    '-//w3c//dtd html 4.0 frameset//en',\n    '-//w3c//dtd html 4.0 transitional//en',\n    '-//w3c//dtd html experimental 19960712//en',\n    '-//w3c//dtd html experimental 970421//en',\n    '-//w3c//dtd w3 html//en',\n    '-//w3o//dtd w3 html 3.0//en',\n    '-//w3o//dtd w3 html 3.0//en//',\n    '-//webtechs//dtd mozilla html 2.0//en',\n    '-//webtechs//dtd mozilla html//en'\n];\n\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\nconst QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//W3C//DTD XHTML 1.0 Frameset//', '-//W3C//DTD XHTML 1.0 Transitional//'];\n\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\n    '-//W3C//DTD HTML 4.01 Frameset//',\n    '-//W3C//DTD HTML 4.01 Transitional//'\n]);\n\n//Utils\nfunction enquoteDoctypeId(id) {\n    const quote = id.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n    return quote + id + quote;\n}\n\nfunction hasPrefix(publicId, prefixes) {\n    for (let i = 0; i < prefixes.length; i++) {\n        if (publicId.indexOf(prefixes[i]) === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n//API\nexports.isConforming = function(token) {\n    return (\n        token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)\n    );\n};\n\nexports.getDocumentMode = function(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    const systemId = token.systemId;\n\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    let publicId = token.publicId;\n\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n\n    return DOCUMENT_MODE.NO_QUIRKS;\n};\n\nexports.serializeContent = function(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n\n    if (name) {\n        str += name;\n    }\n\n    if (publicId) {\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\n    } else if (systemId) {\n        str += ' SYSTEM';\n    }\n\n    if (systemId !== null) {\n        str += ' ' + enquoteDoctypeId(systemId);\n    }\n\n    return str;\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst HTML = require('./html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml'\n};\n\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = {\n    attributename: 'attributeName',\n    attributetype: 'attributeType',\n    basefrequency: 'baseFrequency',\n    baseprofile: 'baseProfile',\n    calcmode: 'calcMode',\n    clippathunits: 'clipPathUnits',\n    diffuseconstant: 'diffuseConstant',\n    edgemode: 'edgeMode',\n    filterunits: 'filterUnits',\n    glyphref: 'glyphRef',\n    gradienttransform: 'gradientTransform',\n    gradientunits: 'gradientUnits',\n    kernelmatrix: 'kernelMatrix',\n    kernelunitlength: 'kernelUnitLength',\n    keypoints: 'keyPoints',\n    keysplines: 'keySplines',\n    keytimes: 'keyTimes',\n    lengthadjust: 'lengthAdjust',\n    limitingconeangle: 'limitingConeAngle',\n    markerheight: 'markerHeight',\n    markerunits: 'markerUnits',\n    markerwidth: 'markerWidth',\n    maskcontentunits: 'maskContentUnits',\n    maskunits: 'maskUnits',\n    numoctaves: 'numOctaves',\n    pathlength: 'pathLength',\n    patterncontentunits: 'patternContentUnits',\n    patterntransform: 'patternTransform',\n    patternunits: 'patternUnits',\n    pointsatx: 'pointsAtX',\n    pointsaty: 'pointsAtY',\n    pointsatz: 'pointsAtZ',\n    preservealpha: 'preserveAlpha',\n    preserveaspectratio: 'preserveAspectRatio',\n    primitiveunits: 'primitiveUnits',\n    refx: 'refX',\n    refy: 'refY',\n    repeatcount: 'repeatCount',\n    repeatdur: 'repeatDur',\n    requiredextensions: 'requiredExtensions',\n    requiredfeatures: 'requiredFeatures',\n    specularconstant: 'specularConstant',\n    specularexponent: 'specularExponent',\n    spreadmethod: 'spreadMethod',\n    startoffset: 'startOffset',\n    stddeviation: 'stdDeviation',\n    stitchtiles: 'stitchTiles',\n    surfacescale: 'surfaceScale',\n    systemlanguage: 'systemLanguage',\n    tablevalues: 'tableValues',\n    targetx: 'targetX',\n    targety: 'targetY',\n    textlength: 'textLength',\n    viewbox: 'viewBox',\n    viewtarget: 'viewTarget',\n    xchannelselector: 'xChannelSelector',\n    ychannelselector: 'yChannelSelector',\n    zoomandpan: 'zoomAndPan'\n};\n\nconst XML_ATTRS_ADJUSTMENT_MAP = {\n    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },\n    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },\n    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },\n    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },\n    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },\n    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },\n    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },\n    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },\n    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },\n    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },\n    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },\n    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }\n};\n\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n    altglyph: 'altGlyph',\n    altglyphdef: 'altGlyphDef',\n    altglyphitem: 'altGlyphItem',\n    animatecolor: 'animateColor',\n    animatemotion: 'animateMotion',\n    animatetransform: 'animateTransform',\n    clippath: 'clipPath',\n    feblend: 'feBlend',\n    fecolormatrix: 'feColorMatrix',\n    fecomponenttransfer: 'feComponentTransfer',\n    fecomposite: 'feComposite',\n    feconvolvematrix: 'feConvolveMatrix',\n    fediffuselighting: 'feDiffuseLighting',\n    fedisplacementmap: 'feDisplacementMap',\n    fedistantlight: 'feDistantLight',\n    feflood: 'feFlood',\n    fefunca: 'feFuncA',\n    fefuncb: 'feFuncB',\n    fefuncg: 'feFuncG',\n    fefuncr: 'feFuncR',\n    fegaussianblur: 'feGaussianBlur',\n    feimage: 'feImage',\n    femerge: 'feMerge',\n    femergenode: 'feMergeNode',\n    femorphology: 'feMorphology',\n    feoffset: 'feOffset',\n    fepointlight: 'fePointLight',\n    fespecularlighting: 'feSpecularLighting',\n    fespotlight: 'feSpotLight',\n    fetile: 'feTile',\n    feturbulence: 'feTurbulence',\n    foreignobject: 'foreignObject',\n    glyphref: 'glyphRef',\n    lineargradient: 'linearGradient',\n    radialgradient: 'radialGradient',\n    textpath: 'textPath'\n});\n\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = {\n    [$.B]: true,\n    [$.BIG]: true,\n    [$.BLOCKQUOTE]: true,\n    [$.BODY]: true,\n    [$.BR]: true,\n    [$.CENTER]: true,\n    [$.CODE]: true,\n    [$.DD]: true,\n    [$.DIV]: true,\n    [$.DL]: true,\n    [$.DT]: true,\n    [$.EM]: true,\n    [$.EMBED]: true,\n    [$.H1]: true,\n    [$.H2]: true,\n    [$.H3]: true,\n    [$.H4]: true,\n    [$.H5]: true,\n    [$.H6]: true,\n    [$.HEAD]: true,\n    [$.HR]: true,\n    [$.I]: true,\n    [$.IMG]: true,\n    [$.LI]: true,\n    [$.LISTING]: true,\n    [$.MENU]: true,\n    [$.META]: true,\n    [$.NOBR]: true,\n    [$.OL]: true,\n    [$.P]: true,\n    [$.PRE]: true,\n    [$.RUBY]: true,\n    [$.S]: true,\n    [$.SMALL]: true,\n    [$.SPAN]: true,\n    [$.STRONG]: true,\n    [$.STRIKE]: true,\n    [$.SUB]: true,\n    [$.SUP]: true,\n    [$.TABLE]: true,\n    [$.TT]: true,\n    [$.U]: true,\n    [$.UL]: true,\n    [$.VAR]: true\n};\n\n//Check exit from foreign content\nexports.causesExit = function(startTagToken) {\n    const tn = startTagToken.tagName;\n    const isFontWithAttrs =\n        tn === $.FONT &&\n        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n};\n\n//Token adjustments\nexports.adjustTokenMathMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n};\n\nexports.adjustTokenSVGAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrName) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n};\n\nexports.adjustTokenXMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n};\n\nexports.adjustTokenSVGTagName = function(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n    if (adjustedTagName) {\n        token.tagName = adjustedTagName;\n    }\n};\n\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\n        return true;\n    }\n\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\n        return true;\n    }\n\n    return false;\n};\n","'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst OpenElementStack = require('./open-element-stack');\nconst FormattingElementList = require('./formatting-element-list');\nconst LocationInfoParserMixin = require('../extensions/location-info/parser-mixin');\nconst ErrorReportingParserMixin = require('../extensions/error-reporting/parser-mixin');\nconst Mixin = require('../utils/mixin');\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst foreignContent = require('../common/foreign-content');\nconst ERR = require('../common/error-codes');\nconst unicode = require('../common/unicode');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\nconst DEFAULT_OPTIONS = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    onParseError: null,\n    treeAdapter: defaultTreeAdapter\n};\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n\n//Insertion modes\nconst INITIAL_MODE = 'INITIAL_MODE';\nconst BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';\nconst BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';\nconst IN_HEAD_MODE = 'IN_HEAD_MODE';\nconst IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';\nconst AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';\nconst IN_BODY_MODE = 'IN_BODY_MODE';\nconst TEXT_MODE = 'TEXT_MODE';\nconst IN_TABLE_MODE = 'IN_TABLE_MODE';\nconst IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';\nconst IN_CAPTION_MODE = 'IN_CAPTION_MODE';\nconst IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';\nconst IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';\nconst IN_ROW_MODE = 'IN_ROW_MODE';\nconst IN_CELL_MODE = 'IN_CELL_MODE';\nconst IN_SELECT_MODE = 'IN_SELECT_MODE';\nconst IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';\nconst IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';\nconst AFTER_BODY_MODE = 'AFTER_BODY_MODE';\nconst IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';\nconst AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';\nconst AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';\nconst AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\n\n//Insertion mode reset map\nconst INSERTION_MODE_RESET_MAP = {\n    [$.TR]: IN_ROW_MODE,\n    [$.TBODY]: IN_TABLE_BODY_MODE,\n    [$.THEAD]: IN_TABLE_BODY_MODE,\n    [$.TFOOT]: IN_TABLE_BODY_MODE,\n    [$.CAPTION]: IN_CAPTION_MODE,\n    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,\n    [$.TABLE]: IN_TABLE_MODE,\n    [$.BODY]: IN_BODY_MODE,\n    [$.FRAMESET]: IN_FRAMESET_MODE\n};\n\n//Template insertion mode switch map\nconst TEMPLATE_INSERTION_MODE_SWITCH_MAP = {\n    [$.CAPTION]: IN_TABLE_MODE,\n    [$.COLGROUP]: IN_TABLE_MODE,\n    [$.TBODY]: IN_TABLE_MODE,\n    [$.TFOOT]: IN_TABLE_MODE,\n    [$.THEAD]: IN_TABLE_MODE,\n    [$.COL]: IN_COLUMN_GROUP_MODE,\n    [$.TR]: IN_TABLE_BODY_MODE,\n    [$.TD]: IN_ROW_MODE,\n    [$.TH]: IN_ROW_MODE\n};\n\n//Token handlers map for insertion modes\nconst TOKEN_HANDLERS = {\n    [INITIAL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,\n        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.EOF_TOKEN]: tokenInInitialMode\n    },\n    [BEFORE_HTML_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml\n    },\n    [BEFORE_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHead\n    },\n    [IN_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHead,\n        [Tokenizer.EOF_TOKEN]: tokenInHead\n    },\n    [IN_HEAD_NO_SCRIPT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,\n        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript\n    },\n    [AFTER_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,\n        [Tokenizer.EOF_TOKEN]: tokenAfterHead\n    },\n    [IN_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: ignoreToken,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.END_TAG_TOKEN]: endTagInText,\n        [Tokenizer.EOF_TOKEN]: eofInText\n    },\n    [IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,\n        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,\n        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,\n        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.EOF_TOKEN]: tokenInTableText\n    },\n    [IN_CAPTION_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_COLUMN_GROUP_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,\n        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_ROW_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInRow,\n        [Tokenizer.END_TAG_TOKEN]: endTagInRow,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_CELL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCell,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCell,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TEMPLATE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,\n        [Tokenizer.EOF_TOKEN]: eofInTemplate\n    },\n    [AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [IN_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    }\n};\n\n//Parser\nclass Parser {\n    constructor(options) {\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n        this.treeAdapter = this.options.treeAdapter;\n        this.pendingScript = null;\n\n        if (this.options.sourceCodeLocationInfo) {\n            Mixin.install(this, LocationInfoParserMixin);\n        }\n\n        if (this.options.onParseError) {\n            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });\n        }\n    }\n\n    // API\n    parse(html) {\n        const document = this.treeAdapter.createDocument();\n\n        this._bootstrap(document, null);\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        return document;\n    }\n\n    parseFragment(html, fragmentContext) {\n        //NOTE: use <template> element as a fragment context if context element was not provided,\n        //so we will parse in \"forgiving\" manner\n        if (!fragmentContext) {\n            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\n        }\n\n        //NOTE: create fake element which will be used as 'document' for fragment parsing.\n        //This is important for jsdom there 'document' can't be recreated, therefore\n        //fragment parsing causes messing of the main `document`.\n        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\n\n        this._bootstrap(documentMock, fragmentContext);\n\n        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {\n            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n        }\n\n        this._initTokenizerForFragmentParsing();\n        this._insertFakeRootElement();\n        this._resetInsertionMode();\n        this._findFormInFragmentContext();\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        const rootElement = this.treeAdapter.getFirstChild(documentMock);\n        const fragment = this.treeAdapter.createDocumentFragment();\n\n        this._adoptNodes(rootElement, fragment);\n\n        return fragment;\n    }\n\n    //Bootstrap parser\n    _bootstrap(document, fragmentContext) {\n        this.tokenizer = new Tokenizer(this.options);\n\n        this.stopped = false;\n\n        this.insertionMode = INITIAL_MODE;\n        this.originalInsertionMode = '';\n\n        this.document = document;\n        this.fragmentContext = fragmentContext;\n\n        this.headElement = null;\n        this.formElement = null;\n\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n\n        this.tmplInsertionModeStack = [];\n        this.tmplInsertionModeStackTop = -1;\n        this.currentTmplInsertionMode = null;\n\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    //Parsing loop\n    _runParsingLoop(scriptHandler) {\n        while (!this.stopped) {\n            this._setupTokenizerCDATAMode();\n\n            const token = this.tokenizer.getNextToken();\n\n            if (token.type === Tokenizer.HIBERNATION_TOKEN) {\n                break;\n            }\n\n            if (this.skipNextNewLine) {\n                this.skipNextNewLine = false;\n\n                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                    if (token.chars.length === 1) {\n                        continue;\n                    }\n\n                    token.chars = token.chars.substr(1);\n                }\n            }\n\n            this._processInputToken(token);\n\n            if (scriptHandler && this.pendingScript) {\n                break;\n            }\n        }\n    }\n\n    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {\n        this._runParsingLoop(scriptHandler);\n\n        if (scriptHandler && this.pendingScript) {\n            const script = this.pendingScript;\n\n            this.pendingScript = null;\n\n            scriptHandler(script);\n\n            return;\n        }\n\n        if (writeCallback) {\n            writeCallback();\n        }\n    }\n\n    //Text parsing\n    _setupTokenizerCDATAMode() {\n        const current = this._getAdjustedCurrentElement();\n\n        this.tokenizer.allowCDATA =\n            current &&\n            current !== this.document &&\n            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&\n            !this._isIntegrationPoint(current);\n    }\n\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = TEXT_MODE;\n    }\n\n    switchToPlaintextParsing() {\n        this.insertionMode = TEXT_MODE;\n        this.originalInsertionMode = IN_BODY_MODE;\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    }\n\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n\n        do {\n            if (this.treeAdapter.getTagName(node) === $.FORM) {\n                this.formElement = node;\n                break;\n            }\n\n            node = this.treeAdapter.getParentNode(node);\n        } while (node);\n    }\n\n    _initTokenizerForFragmentParsing() {\n        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\n            const tn = this.treeAdapter.getTagName(this.fragmentContext);\n\n            if (tn === $.TITLE || tn === $.TEXTAREA) {\n                this.tokenizer.state = Tokenizer.MODE.RCDATA;\n            } else if (\n                tn === $.STYLE ||\n                tn === $.XMP ||\n                tn === $.IFRAME ||\n                tn === $.NOEMBED ||\n                tn === $.NOFRAMES ||\n                tn === $.NOSCRIPT\n            ) {\n                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n            } else if (tn === $.SCRIPT) {\n                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n            } else if (tn === $.PLAINTEXT) {\n                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n            }\n        }\n    }\n\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    }\n\n    _attachElementToTree(element) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n    }\n\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertFakeElement(tagName) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl);\n        this.openElements.push(tmpl);\n    }\n\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\n\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element);\n    }\n\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n\n        this.treeAdapter.appendChild(parent, commentNode);\n    }\n\n    _insertCharacters(token) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentText(token.chars);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n    }\n\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n\n    //Token processing\n    _shouldProcessTokenInForeignContent(token) {\n        const current = this._getAdjustedCurrentElement();\n\n        if (!current || current === this.document) {\n            return false;\n        }\n\n        const ns = this.treeAdapter.getNamespaceURI(current);\n\n        if (ns === NS.HTML) {\n            return false;\n        }\n\n        if (\n            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&\n            ns === NS.MATHML &&\n            token.type === Tokenizer.START_TAG_TOKEN &&\n            token.tagName === $.SVG\n        ) {\n            return false;\n        }\n\n        const isCharacterToken =\n            token.type === Tokenizer.CHARACTER_TOKEN ||\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n        const isMathMLTextStartTag =\n            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;\n\n        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {\n            return false;\n        }\n\n        if (\n            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&\n            this._isIntegrationPoint(current, NS.HTML)\n        ) {\n            return false;\n        }\n\n        return token.type !== Tokenizer.EOF_TOKEN;\n    }\n\n    _processToken(token) {\n        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);\n    }\n\n    _processTokenInBodyMode(token) {\n        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);\n    }\n\n    _processTokenInForeignContent(token) {\n        if (token.type === Tokenizer.CHARACTER_TOKEN) {\n            characterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\n            nullCharacterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {\n            insertCharacters(this, token);\n        } else if (token.type === Tokenizer.COMMENT_TOKEN) {\n            appendComment(this, token);\n        } else if (token.type === Tokenizer.START_TAG_TOKEN) {\n            startTagInForeignContent(this, token);\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n            endTagInForeignContent(this, token);\n        }\n    }\n\n    _processInputToken(token) {\n        if (this._shouldProcessTokenInForeignContent(token)) {\n            this._processTokenInForeignContent(token);\n        } else {\n            this._processToken(token);\n        }\n\n        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {\n            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n\n    //Integration points\n    _isIntegrationPoint(element, foreignNS) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n\n        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\n    }\n\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.length;\n\n        if (listLength) {\n            let unopenIdx = listLength;\n            let entry = null;\n\n            do {\n                unopenIdx--;\n                entry = this.activeFormattingElements.entries[unopenIdx];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\n                    unopenIdx++;\n                    break;\n                }\n            } while (unopenIdx > 0);\n\n            for (let i = unopenIdx; i < listLength; i++) {\n                entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = IN_ROW_MODE;\n    }\n\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {\n            let element = this.openElements.items[i];\n\n            if (i === 0) {\n                last = true;\n\n                if (this.fragmentContext) {\n                    element = this.fragmentContext;\n                }\n            }\n\n            const tn = this.treeAdapter.getTagName(element);\n            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\n\n            if (newInsertionMode) {\n                this.insertionMode = newInsertionMode;\n                break;\n            } else if (!last && (tn === $.TD || tn === $.TH)) {\n                this.insertionMode = IN_CELL_MODE;\n                break;\n            } else if (!last && tn === $.HEAD) {\n                this.insertionMode = IN_HEAD_MODE;\n                break;\n            } else if (tn === $.SELECT) {\n                this._resetInsertionModeForSelect(i);\n                break;\n            } else if (tn === $.TEMPLATE) {\n                this.insertionMode = this.currentTmplInsertionMode;\n                break;\n            } else if (tn === $.HTML) {\n                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\n                break;\n            } else if (last) {\n                this.insertionMode = IN_BODY_MODE;\n                break;\n            }\n        }\n    }\n\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const ancestor = this.openElements.items[i];\n                const tn = this.treeAdapter.getTagName(ancestor);\n\n                if (tn === $.TEMPLATE) {\n                    break;\n                } else if (tn === $.TABLE) {\n                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;\n                    return;\n                }\n            }\n        }\n\n        this.insertionMode = IN_SELECT_MODE;\n    }\n\n    _pushTmplInsertionMode(mode) {\n        this.tmplInsertionModeStack.push(mode);\n        this.tmplInsertionModeStackTop++;\n        this.currentTmplInsertionMode = mode;\n    }\n\n    _popTmplInsertionMode() {\n        this.tmplInsertionModeStack.pop();\n        this.tmplInsertionModeStackTop--;\n        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\n    }\n\n    //Foster parenting\n    _isElementCausesFosterParenting(element) {\n        const tn = this.treeAdapter.getTagName(element);\n\n        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\n    }\n\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\n    }\n\n    _findFosterParentingLocation() {\n        const location = {\n            parent: null,\n            beforeElement: null\n        };\n\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            const tn = this.treeAdapter.getTagName(openElement);\n            const ns = this.treeAdapter.getNamespaceURI(openElement);\n\n            if (tn === $.TEMPLATE && ns === NS.HTML) {\n                location.parent = this.treeAdapter.getTemplateContent(openElement);\n                break;\n            } else if (tn === $.TABLE) {\n                location.parent = this.treeAdapter.getParentNode(openElement);\n\n                if (location.parent) {\n                    location.beforeElement = openElement;\n                } else {\n                    location.parent = this.openElements.items[i - 1];\n                }\n\n                break;\n            }\n        }\n\n        if (!location.parent) {\n            location.parent = this.openElements.items[0];\n        }\n\n        return location;\n    }\n\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n\n    _fosterParentText(chars) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\n        } else {\n            this.treeAdapter.insertText(location.parent, chars);\n        }\n    }\n\n    //Special elements\n    _isSpecialElement(element) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n\n        return HTML.SPECIAL_ELEMENTS[ns][tn];\n    }\n}\n\nmodule.exports = Parser;\n\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagName)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n\n    return formattingElementEntry;\n}\n\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            furthestBlock = element;\n        }\n    }\n\n    if (!furthestBlock) {\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n\n    return furthestBlock;\n}\n\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n\n    return lastElement;\n}\n\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n\n    return newElement;\n}\n\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    if (p._isElementCausesFosterParenting(commonAncestor)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const tn = p.treeAdapter.getTagName(commonAncestor);\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const token = formattingElementEntry.token;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement);\n}\n\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    let formattingElementEntry;\n\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\n\n        if (!formattingElementEntry) {\n            break;\n        }\n\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n\n        if (!furthestBlock) {\n            break;\n        }\n\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n\n        p.treeAdapter.detachNode(lastElement);\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n\n//Generic token handlers\n//------------------------------------------------------------------\nfunction ignoreToken() {\n    //NOTE: do nothing =)\n}\n\nfunction misplacedDoctype(p) {\n    p._err(ERR.misplacedDoctype);\n}\n\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\n}\n\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\n\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\n\nfunction insertCharacters(p, token) {\n    p._insertCharacters(token);\n}\n\nfunction stopParsing(p) {\n    p.stopped = true;\n}\n\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n\n    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n\n    if (!doctype.isConforming(token)) {\n        p._err(ERR.nonConformingDoctype);\n    }\n\n    p.treeAdapter.setDocumentMode(p.document, mode);\n\n    p.insertionMode = BEFORE_HTML_MODE;\n}\n\nfunction tokenInInitialMode(p, token) {\n    p._err(ERR.missingDoctype, { beforeToken: true });\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = BEFORE_HTML_MODE;\n    p._processToken(token);\n}\n\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagName === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = BEFORE_HEAD_MODE;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = BEFORE_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.HEAD) {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = IN_HEAD_MODE;\n    } else {\n        tokenBeforeHead(p, token);\n    }\n}\n\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement($.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TITLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\n    } else if (tn === $.NOSCRIPT) {\n        if (p.options.scriptingEnabled) {\n            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n        } else {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;\n        }\n    } else if (tn === $.NOFRAMES || tn === $.STYLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n    } else if (tn === $.SCRIPT) {\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\n    } else if (tn === $.TEMPLATE) {\n        p._insertTemplate(token, NS.HTML);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = IN_TEMPLATE_MODE;\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenInHead(p, token);\n    }\n}\n\nfunction endTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD) {\n        p.openElements.pop();\n        p.insertionMode = AFTER_HEAD_MODE;\n    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {\n        tokenInHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        if (p.openElements.tmplCount > 0) {\n            p.openElements.generateImpliedEndTagsThoroughly();\n\n            if (p.openElements.currentTagName !== $.TEMPLATE) {\n                p._err(ERR.closingOfElementWithOpenChildElements);\n            }\n\n            p.openElements.popUntilTagNamePopped($.TEMPLATE);\n            p.activeFormattingElements.clearToLastMarker();\n            p._popTmplInsertionMode();\n            p._resetInsertionMode();\n        } else {\n            p._err(ERR.endTagWithoutMatchingOpenElement);\n        }\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = AFTER_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.HEAD ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.STYLE\n    ) {\n        startTagInHead(p, token);\n    } else if (tn === $.NOSCRIPT) {\n        p._err(ERR.nestedNoscriptInHead);\n    } else {\n        tokenInHeadNoScript(p, token);\n    }\n}\n\nfunction endTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.NOSCRIPT) {\n        p.openElements.pop();\n        p.insertionMode = IN_HEAD_MODE;\n    } else if (tn === $.BR) {\n        tokenInHeadNoScript(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHeadNoScript(p, token) {\n    const errCode =\n        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n\n    p._err(errCode);\n    p.openElements.pop();\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BODY) {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = IN_BODY_MODE;\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    } else if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        p._err(ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenAfterHead(p, token);\n    }\n}\n\nfunction endTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenAfterHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement($.BODY);\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\n\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\n\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\n\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n}\n\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    const tn = p.openElements.currentTagName;\n\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n        p.openElements.pop();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\n\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n\n        p._insertElement(token, NS.HTML);\n\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\n\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n        const elementTn = p.treeAdapter.getTagName(element);\n        let closeTn = null;\n\n        if (tn === $.LI && elementTn === $.LI) {\n            closeTn = $.LI;\n        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {\n            closeTn = elementTn;\n        }\n\n        if (closeTn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\n            p.openElements.popUntilTagNamePopped(closeTn);\n            break;\n        }\n\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {\n            break;\n        }\n    }\n\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n}\n\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\n\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\n\nfunction tableStartTagInBody(p, token) {\n    if (\n        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&\n        p.openElements.hasInButtonScope($.P)\n    ) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = IN_TABLE_MODE;\n}\n\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {\n        p.framesetOk = false;\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\n\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.ackSelfClosing = true;\n}\n\nfunction imageStartTagInBody(p, token) {\n    token.tagName = $.IMG;\n    areaStartTagInBody(p, token);\n}\n\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = TEXT_MODE;\n}\n\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as a rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n\n    if (\n        p.insertionMode === IN_TABLE_MODE ||\n        p.insertionMode === IN_CAPTION_MODE ||\n        p.insertionMode === IN_TABLE_BODY_MODE ||\n        p.insertionMode === IN_ROW_MODE ||\n        p.insertionMode === IN_CELL_MODE\n    ) {\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\n    } else {\n        p.insertionMode = IN_SELECT_MODE;\n    }\n}\n\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.OPTION) {\n        p.openElements.pop();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    } else {\n        p._insertElement(token, NS.MATHML);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    } else {\n        p._insertElement(token, NS.SVG);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction startTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.P) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.A) {\n                aStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.OL || tn === $.UL) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderStartTagInBody(p, token);\n            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {\n                listItemStartTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.BR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.HR) {\n                hrStartTagInBody(p, token);\n            } else if (tn === $.RB) {\n                rbStartTagInBody(p, token);\n            } else if (tn === $.RT || tn === $.RP) {\n                rtStartTagInBody(p, token);\n            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.PRE) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.BIG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.IMG || tn === $.WBR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.XMP) {\n                xmpStartTagInBody(p, token);\n            } else if (tn === $.SVG) {\n                svgStartTagInBody(p, token);\n            } else if (tn === $.RTC) {\n                rbStartTagInBody(p, token);\n            } else if (tn !== $.COL) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                htmlStartTagInBody(p, token);\n            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {\n                startTagInHead(p, token);\n            } else if (tn === $.BODY) {\n                bodyStartTagInBody(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formStartTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.NOBR) {\n                nobrStartTagInBody(p, token);\n            } else if (tn === $.AREA) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.MATH) {\n                mathStartTagInBody(p, token);\n            } else if (tn === $.MENU) {\n                menuStartTagInBody(p, token);\n            } else if (tn !== $.HEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.STYLE || tn === $.TITLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.ASIDE) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.TABLE) {\n                tableStartTagInBody(p, token);\n            } else if (tn === $.EMBED) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInBody(p, token);\n            } else if (tn === $.PARAM || tn === $.TRACK) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IMAGE) {\n                imageStartTagInBody(p, token);\n            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.BUTTON) {\n                buttonStartTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.KEYGEN) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.SOURCE) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IFRAME) {\n                iframeStartTagInBody(p, token);\n            } else if (tn === $.SELECT) {\n                selectStartTagInBody(p, token);\n            } else if (tn === $.OPTION) {\n                optgroupStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.BGSOUND) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.DETAILS ||\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.LISTING) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.NOEMBED) {\n                noembedStartTagInBody(p, token);\n            } else if (tn !== $.CAPTION) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.BASEFONT) {\n                startTagInHead(p, token);\n            } else if (tn === $.FRAMESET) {\n                framesetStartTagInBody(p, token);\n            } else if (tn === $.FIELDSET) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.TEXTAREA) {\n                textareaStartTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else if (tn === $.NOSCRIPT) {\n                if (p.options.scriptingEnabled) {\n                    noembedStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n            } else if (tn === $.OPTGROUP) {\n                optgroupStartTagInBody(p, token);\n            } else if (tn !== $.COLGROUP) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 9:\n            if (tn === $.PLAINTEXT) {\n                plaintextStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericStartTagInBody(p, token);\n    }\n}\n\nfunction bodyEndTagInBody(p) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n    }\n}\n\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n        p._processToken(token);\n    }\n}\n\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const formElement = p.formElement;\n\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        } else {\n            p.openElements.remove(formElement);\n        }\n    }\n}\n\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement($.P);\n    }\n\n    p._closePElement();\n}\n\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\n\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\n\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\n\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement($.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\n\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getTagName(element) === tn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            break;\n        }\n    }\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction endTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.P) {\n                pEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.UL || tn === $.OL) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.LI) {\n                liEndTagInBody(p, token);\n            } else if (tn === $.DD || tn === $.DT) {\n                ddEndTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderEndTagInBody(p, token);\n            } else if (tn === $.BR) {\n                brEndTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.BIG) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.BODY) {\n                bodyEndTagInBody(p, token);\n            } else if (tn === $.HTML) {\n                htmlEndTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formEndTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.ASIDE) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletEndTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.DETAILS ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY ||\n                tn === $.LISTING\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.FIELDSET) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                endTagInHead(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericEndTagInBody(p, token);\n    }\n}\n\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStackTop > -1) {\n        eofInTemplate(p, token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    if (token.tagName === $.SCRIPT) {\n        p.pendingScript = p.openElements.current;\n    }\n\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\n\nfunction eofInText(p, token) {\n    p._err(ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    const curTn = p.openElements.currentTagName;\n\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\n        p.pendingCharacterTokens = [];\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = IN_TABLE_TEXT_MODE;\n        p._processToken(token);\n    } else {\n        tokenInTable(p, token);\n    }\n}\n\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_CAPTION_MODE;\n}\n\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n}\n\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.COLGROUP);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n    p._processToken(token);\n}\n\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n}\n\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.TBODY);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n    p._processToken(token);\n}\n\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n}\n\nfunction inputStartTagInTable(p, token) {\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {\n        p._appendElement(token, NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\n\nfunction startTagInTable(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH || tn === $.TR) {\n                tdStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.COL) {\n                colStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.FORM) {\n                formStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                tableStartTagInTable(p, token);\n            } else if (tn === $.STYLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n                tbodyStartTagInTable(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.CAPTION) {\n                captionStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.COLGROUP) {\n                colgroupStartTagInTable(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        default:\n            tokenInTable(p, token);\n    }\n}\n\nfunction endTagInTable(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n            p.openElements.popUntilTagNamePopped($.TABLE);\n            p._resetInsertionMode();\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.CAPTION &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        tokenInTable(p, token);\n    }\n}\n\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n\n    p.fosterParentingEnabled = true;\n    p._processTokenInBodyMode(token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\n\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\n\nfunction tokenInTableText(p, token) {\n    let i = 0;\n\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n\n            if (tn === $.TABLE) {\n                p._processToken(token);\n            }\n        }\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.COL) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    } else {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction endTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.COLGROUP) {\n        if (p.openElements.currentTagName === $.COLGROUP) {\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (tn !== $.COL) {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagName === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = IN_TABLE_MODE;\n        p._processToken(token);\n    }\n}\n\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_ROW_MODE;\n    } else if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement($.TR);\n        p.insertionMode = IN_ROW_MODE;\n        p._processToken(token);\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD\n    ) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_CELL_MODE;\n        p.activeFormattingElements.insertMarker();\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(tn);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_ROW_MODE;\n        }\n    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.OPTGROUP) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n\n            if (tn !== $.SELECT) {\n                p._processToken(token);\n            }\n        }\n    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.OPTGROUP) {\n        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];\n        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\n\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\n//12.2.5.4.17 The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\n\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p._processToken(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        startTagInHead(p, token);\n    } else {\n        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\n\n        p._popTmplInsertionMode();\n        p._pushTmplInsertionMode(newInsertionMode);\n        p.insertionMode = newInsertionMode;\n        p._processToken(token);\n    }\n}\n\nfunction endTagInTemplate(p, token) {\n    if (token.tagName === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction endTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.FRAME) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInFrameset(p, token) {\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {\n            p.insertionMode = AFTER_FRAMESET_MODE;\n        }\n    }\n}\n\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagName === $.HTML) {\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\n    }\n}\n\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\n\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\n        while (\n            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n            !p._isIntegrationPoint(p.openElements.current)\n        ) {\n            p.openElements.pop();\n        }\n\n        p._processToken(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n\n        token.ackSelfClosing = true;\n    }\n}\n\nfunction endTagInForeignContent(p, token) {\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._processToken(token);\n            break;\n        }\n\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n    }\n}\n","'use strict';\n\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Default serializer options\nconst DEFAULT_OPTIONS = {\n    treeAdapter: defaultTreeAdapter\n};\n\n//Escaping regexes\nconst AMP_REGEX = /&/g;\nconst NBSP_REGEX = /\\u00a0/g;\nconst DOUBLE_QUOTE_REGEX = /\"/g;\nconst LT_REGEX = /</g;\nconst GT_REGEX = />/g;\n\n//Serializer\nclass Serializer {\n    constructor(node, options) {\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\n        this.treeAdapter = this.options.treeAdapter;\n\n        this.html = '';\n        this.startNode = node;\n    }\n\n    //API\n    serialize() {\n        this._serializeChildNodes(this.startNode);\n\n        return this.html;\n    }\n\n    //Internals\n    _serializeChildNodes(parentNode) {\n        const childNodes = this.treeAdapter.getChildNodes(parentNode);\n\n        if (childNodes) {\n            for (let i = 0, cnLength = childNodes.length; i < cnLength; i++) {\n                const currentNode = childNodes[i];\n\n                if (this.treeAdapter.isElementNode(currentNode)) {\n                    this._serializeElement(currentNode);\n                } else if (this.treeAdapter.isTextNode(currentNode)) {\n                    this._serializeTextNode(currentNode);\n                } else if (this.treeAdapter.isCommentNode(currentNode)) {\n                    this._serializeCommentNode(currentNode);\n                } else if (this.treeAdapter.isDocumentTypeNode(currentNode)) {\n                    this._serializeDocumentTypeNode(currentNode);\n                }\n            }\n        }\n    }\n\n    _serializeElement(node) {\n        const tn = this.treeAdapter.getTagName(node);\n        const ns = this.treeAdapter.getNamespaceURI(node);\n\n        this.html += '<' + tn;\n        this._serializeAttributes(node);\n        this.html += '>';\n\n        if (\n            tn !== $.AREA &&\n            tn !== $.BASE &&\n            tn !== $.BASEFONT &&\n            tn !== $.BGSOUND &&\n            tn !== $.BR &&\n            tn !== $.COL &&\n            tn !== $.EMBED &&\n            tn !== $.FRAME &&\n            tn !== $.HR &&\n            tn !== $.IMG &&\n            tn !== $.INPUT &&\n            tn !== $.KEYGEN &&\n            tn !== $.LINK &&\n            tn !== $.META &&\n            tn !== $.PARAM &&\n            tn !== $.SOURCE &&\n            tn !== $.TRACK &&\n            tn !== $.WBR\n        ) {\n            const childNodesHolder =\n                tn === $.TEMPLATE && ns === NS.HTML ? this.treeAdapter.getTemplateContent(node) : node;\n\n            this._serializeChildNodes(childNodesHolder);\n            this.html += '</' + tn + '>';\n        }\n    }\n\n    _serializeAttributes(node) {\n        const attrs = this.treeAdapter.getAttrList(node);\n\n        for (let i = 0, attrsLength = attrs.length; i < attrsLength; i++) {\n            const attr = attrs[i];\n            const value = Serializer.escapeString(attr.value, true);\n\n            this.html += ' ';\n\n            if (!attr.namespace) {\n                this.html += attr.name;\n            } else if (attr.namespace === NS.XML) {\n                this.html += 'xml:' + attr.name;\n            } else if (attr.namespace === NS.XMLNS) {\n                if (attr.name !== 'xmlns') {\n                    this.html += 'xmlns:';\n                }\n\n                this.html += attr.name;\n            } else if (attr.namespace === NS.XLINK) {\n                this.html += 'xlink:' + attr.name;\n            } else {\n                this.html += attr.namespace + ':' + attr.name;\n            }\n\n            this.html += '=\"' + value + '\"';\n        }\n    }\n\n    _serializeTextNode(node) {\n        const content = this.treeAdapter.getTextNodeContent(node);\n        const parent = this.treeAdapter.getParentNode(node);\n        let parentTn = void 0;\n\n        if (parent && this.treeAdapter.isElementNode(parent)) {\n            parentTn = this.treeAdapter.getTagName(parent);\n        }\n\n        if (\n            parentTn === $.STYLE ||\n            parentTn === $.SCRIPT ||\n            parentTn === $.XMP ||\n            parentTn === $.IFRAME ||\n            parentTn === $.NOEMBED ||\n            parentTn === $.NOFRAMES ||\n            parentTn === $.PLAINTEXT ||\n            parentTn === $.NOSCRIPT\n        ) {\n            this.html += content;\n        } else {\n            this.html += Serializer.escapeString(content, false);\n        }\n    }\n\n    _serializeCommentNode(node) {\n        this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';\n    }\n\n    _serializeDocumentTypeNode(node) {\n        const name = this.treeAdapter.getDocumentTypeNodeName(node);\n\n        this.html += '<' + doctype.serializeContent(name, null, null) + '>';\n    }\n}\n\n// NOTE: used in tests and by rewriting stream\nSerializer.escapeString = function(str, attrMode) {\n    str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');\n\n    if (attrMode) {\n        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');\n    } else {\n        str = str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');\n    }\n\n    return str;\n};\n\nmodule.exports = Serializer;\n","'use strict';\n\nconst Parser = require('./parser');\nconst Serializer = require('./serializer');\n\n// Shorthands\nexports.parse = function parse(html, options) {\n    const parser = new Parser(options);\n\n    return parser.parse(html);\n};\n\nexports.parseFragment = function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n\n    const parser = new Parser(options);\n\n    return parser.parseFragment(html, fragmentContext);\n};\n\nexports.serialize = function(node, options) {\n    const serializer = new Serializer(node, options);\n\n    return serializer.serialize();\n};\n","var Ap = Array.prototype;\nvar slice = Ap.slice;\nvar map = Ap.map;\nvar each = Ap.forEach;\nvar Op = Object.prototype;\nvar objToStr = Op.toString;\nvar funObjStr = objToStr.call(function(){});\nvar strObjStr = objToStr.call(\"\");\nvar hasOwn = Op.hasOwnProperty;\n\nmodule.exports = function () {\n\n    var exports = {};\n\n    // A type is an object with a .check method that takes a value and returns\n    // true or false according to whether the value matches the type.\n\n    function Type(check, name) {\n        var self = this;\n        if (!(self instanceof Type)) {\n            throw new Error(\"Type constructor cannot be invoked without 'new'\");\n        }\n\n        // Unfortunately we can't elegantly reuse isFunction and isString,\n        // here, because this code is executed while defining those types.\n        if (objToStr.call(check) !== funObjStr) {\n            throw new Error(check + \" is not a function\");\n        }\n\n        // The `name` parameter can be either a function or a string.\n        var nameObjStr = objToStr.call(name);\n        if (!(nameObjStr === funObjStr ||\n          nameObjStr === strObjStr)) {\n            throw new Error(name + \" is neither a function nor a string\");\n        }\n\n        Object.defineProperties(self, {\n            name: {value: name},\n            check: {\n                value: function (value, deep) {\n                    var result = check.call(self, value, deep);\n                    if (!result && deep && objToStr.call(deep) === funObjStr)\n                        deep(self, value);\n                    return result;\n                }\n            }\n        });\n    }\n\n    var Tp = Type.prototype;\n\n    // Throughout this file we use Object.defineProperty to prevent\n    // redefinition of exported properties.\n    exports.Type = Type;\n\n    // Like .check, except that failure triggers an AssertionError.\n    Tp.assert = function (value, deep) {\n        if (!this.check(value, deep)) {\n            var str = shallowStringify(value);\n            throw new Error(str + \" does not match type \" + this);\n        }\n        return true;\n    };\n\n    function shallowStringify(value) {\n        if (isObject.check(value))\n            return \"{\" + Object.keys(value).map(function (key) {\n                  return key + \": \" + value[key];\n              }).join(\", \") + \"}\";\n\n        if (isArray.check(value))\n            return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n\n        return JSON.stringify(value);\n    }\n\n    Tp.toString = function () {\n        var name = this.name;\n\n        if (isString.check(name))\n            return name;\n\n        if (isFunction.check(name))\n            return name.call(this) + \"\";\n\n        return name + \" type\";\n    };\n\n    var builtInCtorFns = [];\n    var builtInCtorTypes = [];\n    var builtInTypes = {};\n    exports.builtInTypes = builtInTypes;\n\n    function defBuiltInType(example, name) {\n        var objStr = objToStr.call(example);\n\n        var type = new Type(function (value) {\n            return objToStr.call(value) === objStr;\n        }, name);\n\n        builtInTypes[name] = type;\n\n        if (example && typeof example.constructor === \"function\") {\n            builtInCtorFns.push(example.constructor);\n            builtInCtorTypes.push(type);\n        }\n\n        return type;\n    }\n\n    // These types check the underlying [[Class]] attribute of the given\n    // value, rather than using the problematic typeof operator. Note however\n    // that no subtyping is considered; so, for instance, isObject.check\n    // returns false for [], /./, new Date, and null.\n    var isString = defBuiltInType(\"truthy\", \"string\");\n    var isFunction = defBuiltInType(function () {}, \"function\");\n    var isArray = defBuiltInType([], \"array\");\n    var isObject = defBuiltInType({}, \"object\");\n    var isRegExp = defBuiltInType(/./, \"RegExp\");\n    var isDate = defBuiltInType(new Date, \"Date\");\n    var isNumber = defBuiltInType(3, \"number\");\n    var isBoolean = defBuiltInType(true, \"boolean\");\n    var isNull = defBuiltInType(null, \"null\");\n    var isUndefined = defBuiltInType(void 0, \"undefined\");\n\n    // There are a number of idiomatic ways of expressing types, so this\n    // function serves to coerce them all to actual Type objects. Note that\n    // providing the name argument is not necessary in most cases.\n    function toType(from, name) {\n        // The toType function should of course be idempotent.\n        if (from instanceof Type)\n            return from;\n\n        // The Def type is used as a helper for constructing compound\n        // interface types for AST nodes.\n        if (from instanceof Def)\n            return from.type;\n\n        // Support [ElemType] syntax.\n        if (isArray.check(from))\n            return Type.fromArray(from);\n\n        // Support { someField: FieldType, ... } syntax.\n        if (isObject.check(from))\n            return Type.fromObject(from);\n\n        if (isFunction.check(from)) {\n            var bicfIndex = builtInCtorFns.indexOf(from);\n            if (bicfIndex >= 0) {\n                return builtInCtorTypes[bicfIndex];\n            }\n\n            // If isFunction.check(from), and from is not a built-in\n            // constructor, assume from is a binary predicate function we can\n            // use to define the type.\n            return new Type(from, name);\n        }\n\n        // As a last resort, toType returns a type that matches any value that\n        // is === from. This is primarily useful for literal values like\n        // toType(null), but it has the additional advantage of allowing\n        // toType to be a total function.\n        return new Type(function (value) {\n            return value === from;\n        }, isUndefined.check(name) ? function () {\n            return from + \"\";\n        } : name);\n    }\n\n    // Returns a type that matches the given value iff any of type1, type2,\n    // etc. match the value.\n    Type.or = function (/* type1, type2, ... */) {\n        var types = [];\n        var len = arguments.length;\n        for (var i = 0; i < len; ++i)\n            types.push(toType(arguments[i]));\n\n        return new Type(function (value, deep) {\n            for (var i = 0; i < len; ++i)\n                if (types[i].check(value, deep))\n                    return true;\n            return false;\n        }, function () {\n            return types.join(\" | \");\n        });\n    };\n\n    Type.fromArray = function (arr) {\n        if (!isArray.check(arr)) {\n            throw new Error(\"\");\n        }\n        if (arr.length !== 1) {\n            throw new Error(\"only one element type is permitted for typed arrays\");\n        }\n        return toType(arr[0]).arrayOf();\n    };\n\n    Tp.arrayOf = function () {\n        var elemType = this;\n        return new Type(function (value, deep) {\n            return isArray.check(value) && value.every(function (elem) {\n                  return elemType.check(elem, deep);\n              });\n        }, function () {\n            return \"[\" + elemType + \"]\";\n        });\n    };\n\n    Type.fromObject = function (obj) {\n        var fields = Object.keys(obj).map(function (name) {\n            return new Field(name, obj[name]);\n        });\n\n        return new Type(function (value, deep) {\n            return isObject.check(value) && fields.every(function (field) {\n                  return field.type.check(value[field.name], deep);\n              });\n        }, function () {\n            return \"{ \" + fields.join(\", \") + \" }\";\n        });\n    };\n\n    function Field(name, type, defaultFn, hidden) {\n        var self = this;\n\n        if (!(self instanceof Field)) {\n            throw new Error(\"Field constructor cannot be invoked without 'new'\");\n        }\n        isString.assert(name);\n\n        type = toType(type);\n\n        var properties = {\n            name: {value: name},\n            type: {value: type},\n            hidden: {value: !!hidden}\n        };\n\n        if (isFunction.check(defaultFn)) {\n            properties.defaultFn = {value: defaultFn};\n        }\n\n        Object.defineProperties(self, properties);\n    }\n\n    var Fp = Field.prototype;\n\n    Fp.toString = function () {\n        return JSON.stringify(this.name) + \": \" + this.type;\n    };\n\n    Fp.getValue = function (obj) {\n        var value = obj[this.name];\n\n        if (!isUndefined.check(value))\n            return value;\n\n        if (this.defaultFn)\n            value = this.defaultFn.call(obj);\n\n        return value;\n    };\n\n    // Define a type whose name is registered in a namespace (the defCache) so\n    // that future definitions will return the same type given the same name.\n    // In particular, this system allows for circular and forward definitions.\n    // The Def object d returned from Type.def may be used to configure the\n    // type d.type by calling methods such as d.bases, d.build, and d.field.\n    Type.def = function (typeName) {\n        isString.assert(typeName);\n        return hasOwn.call(defCache, typeName)\n          ? defCache[typeName]\n          : defCache[typeName] = new Def(typeName);\n    };\n\n    // In order to return the same Def instance every time Type.def is called\n    // with a particular name, those instances need to be stored in a cache.\n    var defCache = Object.create(null);\n\n    function Def(typeName) {\n        var self = this;\n        if (!(self instanceof Def)) {\n            throw new Error(\"Def constructor cannot be invoked without 'new'\");\n        }\n\n        Object.defineProperties(self, {\n            typeName: {value: typeName},\n            baseNames: {value: []},\n            ownFields: {value: Object.create(null)},\n\n            // These two are populated during finalization.\n            allSupertypes: {value: Object.create(null)}, // Includes own typeName.\n            supertypeList: {value: []}, // Linear inheritance hierarchy.\n            allFields: {value: Object.create(null)}, // Includes inherited fields.\n            fieldNames: {value: []}, // Non-hidden keys of allFields.\n\n            type: {\n                value: new Type(function (value, deep) {\n                    return self.check(value, deep);\n                }, typeName)\n            }\n        });\n    }\n\n    Def.fromValue = function (value) {\n        if (value && typeof value === \"object\") {\n            var type = value.type;\n            if (typeof type === \"string\" &&\n              hasOwn.call(defCache, type)) {\n                var d = defCache[type];\n                if (d.finalized) {\n                    return d;\n                }\n            }\n        }\n\n        return null;\n    };\n\n    var Dp = Def.prototype;\n\n    Dp.isSupertypeOf = function (that) {\n        if (that instanceof Def) {\n            if (this.finalized !== true ||\n              that.finalized !== true) {\n                throw new Error(\"\");\n            }\n            return hasOwn.call(that.allSupertypes, this.typeName);\n        } else {\n            throw new Error(that + \" is not a Def\");\n        }\n    };\n\n    // Note that the list returned by this function is a copy of the internal\n    // supertypeList, *without* the typeName itself as the first element.\n    exports.getSupertypeNames = function (typeName) {\n        if (!hasOwn.call(defCache, typeName)) {\n            throw new Error(\"\");\n        }\n        var d = defCache[typeName];\n        if (d.finalized !== true) {\n            throw new Error(\"\");\n        }\n        return d.supertypeList.slice(1);\n    };\n\n    // Returns an object mapping from every known type in the defCache to the\n    // most specific supertype whose name is an own property of the candidates\n    // object.\n    exports.computeSupertypeLookupTable = function (candidates) {\n        var table = {};\n        var typeNames = Object.keys(defCache);\n        var typeNameCount = typeNames.length;\n\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNames[i];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\" + typeName);\n            }\n            for (var j = 0; j < d.supertypeList.length; ++j) {\n                var superTypeName = d.supertypeList[j];\n                if (hasOwn.call(candidates, superTypeName)) {\n                    table[typeName] = superTypeName;\n                    break;\n                }\n            }\n        }\n\n        return table;\n    };\n\n    Dp.checkAllFields = function (value, deep) {\n        var allFields = this.allFields;\n        if (this.finalized !== true) {\n            throw new Error(\"\" + this.typeName);\n        }\n\n        function checkFieldByName(name) {\n            var field = allFields[name];\n            var type = field.type;\n            var child = field.getValue(value);\n            return type.check(child, deep);\n        }\n\n        return isObject.check(value)\n          && Object.keys(allFields).every(checkFieldByName);\n    };\n\n    Dp.check = function (value, deep) {\n        if (this.finalized !== true) {\n            throw new Error(\n              \"prematurely checking unfinalized type \" + this.typeName\n            );\n        }\n\n        // A Def type can only match an object value.\n        if (!isObject.check(value))\n            return false;\n\n        var vDef = Def.fromValue(value);\n        if (!vDef) {\n            // If we couldn't infer the Def associated with the given value,\n            // and we expected it to be a SourceLocation or a Position, it was\n            // probably just missing a \"type\" field (because Esprima does not\n            // assign a type property to such nodes). Be optimistic and let\n            // this.checkAllFields make the final decision.\n            if (this.typeName === \"SourceLocation\" ||\n              this.typeName === \"Position\") {\n                return this.checkAllFields(value, deep);\n            }\n\n            // Calling this.checkAllFields for any other type of node is both\n            // bad for performance and way too forgiving.\n            return false;\n        }\n\n        // If checking deeply and vDef === this, then we only need to call\n        // checkAllFields once. Calling checkAllFields is too strict when deep\n        // is false, because then we only care about this.isSupertypeOf(vDef).\n        if (deep && vDef === this)\n            return this.checkAllFields(value, deep);\n\n        // In most cases we rely exclusively on isSupertypeOf to make O(1)\n        // subtyping determinations. This suffices in most situations outside\n        // of unit tests, since interface conformance is checked whenever new\n        // instances are created using builder functions.\n        if (!this.isSupertypeOf(vDef))\n            return false;\n\n        // The exception is when deep is true; then, we recursively check all\n        // fields.\n        if (!deep)\n            return true;\n\n        // Use the more specific Def (vDef) to perform the deep check, but\n        // shallow-check fields defined by the less specific Def (this).\n        return vDef.checkAllFields(value, deep)\n          && this.checkAllFields(value, false);\n    };\n\n    Dp.bases = function () {\n        var args = slice.call(arguments);\n        var bases = this.baseNames;\n\n        if (this.finalized) {\n            if (args.length !== bases.length) {\n                throw new Error(\"\");\n            }\n            for (var i = 0; i < args.length; i++) {\n                if (args[i] !== bases[i]) {\n                    throw new Error(\"\");\n                }\n            }\n            return this;\n        }\n\n        args.forEach(function (baseName) {\n            isString.assert(baseName);\n\n            // This indexOf lookup may be O(n), but the typical number of base\n            // names is very small, and indexOf is a native Array method.\n            if (bases.indexOf(baseName) < 0)\n                bases.push(baseName);\n        });\n\n        return this; // For chaining.\n    };\n\n    // False by default until .build(...) is called on an instance.\n    Object.defineProperty(Dp, \"buildable\", {value: false});\n\n    var builders = {};\n    exports.builders = builders;\n\n    // This object is used as prototype for any node created by a builder.\n    var nodePrototype = {};\n\n    // Call this function to define a new method to be shared by all AST\n     // nodes. The replaced method (if any) is returned for easy wrapping.\n    exports.defineMethod = function (name, func) {\n        var old = nodePrototype[name];\n\n        // Pass undefined as func to delete nodePrototype[name].\n        if (isUndefined.check(func)) {\n            delete nodePrototype[name];\n\n        } else {\n            isFunction.assert(func);\n\n            Object.defineProperty(nodePrototype, name, {\n                enumerable: true, // For discoverability.\n                configurable: true, // For delete proto[name].\n                value: func\n            });\n        }\n\n        return old;\n    };\n\n    var isArrayOfString = isString.arrayOf();\n\n    // Calling the .build method of a Def simultaneously marks the type as\n    // buildable (by defining builders[getBuilderName(typeName)]) and\n    // specifies the order of arguments that should be passed to the builder\n    // function to create an instance of the type.\n    Dp.build = function (/* param1, param2, ... */) {\n        var self = this;\n\n        var newBuildParams = slice.call(arguments);\n        isArrayOfString.assert(newBuildParams);\n\n        // Calling Def.prototype.build multiple times has the effect of merely\n        // redefining this property.\n        Object.defineProperty(self, \"buildParams\", {\n            value: newBuildParams,\n            writable: false,\n            enumerable: false,\n            configurable: true\n        });\n\n        if (self.buildable) {\n            // If this Def is already buildable, update self.buildParams and\n            // continue using the old builder function.\n            return self;\n        }\n\n        // Every buildable type will have its \"type\" field filled in\n        // automatically. This includes types that are not subtypes of Node,\n        // like SourceLocation, but that seems harmless (TODO?).\n        self.field(\"type\", String, function () { return self.typeName });\n\n        // Override Dp.buildable for this Def instance.\n        Object.defineProperty(self, \"buildable\", {value: true});\n\n        function addParam(built, param, arg, isArgAvailable) {\n            if (hasOwn.call(built, param))\n                return;\n\n            var all = self.allFields;\n            if (!hasOwn.call(all, param)) {\n                throw new Error(\"\" + param);\n            }\n\n            var field = all[param];\n            var type = field.type;\n            var value;\n\n            if (isArgAvailable) {\n                value = arg;\n            } else if (field.defaultFn) {\n                // Expose the partially-built object to the default\n                // function as its `this` object.\n                value = field.defaultFn.call(built);\n            } else {\n                var message = \"no value or default function given for field \" +\n                  JSON.stringify(param) + \" of \" + self.typeName + \"(\" +\n                  self.buildParams.map(function (name) {\n                      return all[name];\n                  }).join(\", \") + \")\";\n                throw new Error(message);\n            }\n\n            if (!type.check(value)) {\n                throw new Error(\n                  shallowStringify(value) +\n                  \" does not match field \" + field +\n                  \" of type \" + self.typeName\n                );\n            }\n\n            built[param] = value;\n        }\n\n        // Calling the builder function will construct an instance of the Def,\n        // with positional arguments mapped to the fields original passed to .build.\n        // If not enough arguments are provided, the default value for the remaining fields\n        // will be used.\n        function builder() {\n            var args = arguments;\n            var argc = args.length;\n            \n            if (!self.finalized) {\n                throw new Error(\n                    \"attempting to instantiate unfinalized type \" +\n                    self.typeName\n                );\n            }\n\n            var built = Object.create(nodePrototype);\n\n            self.buildParams.forEach(function (param, i) {\n                if (i < argc) {\n                    addParam(built, param, args[i], true)\n                } else {\n                    addParam(built, param, null, false);\n                }\n            });\n\n            Object.keys(self.allFields).forEach(function (param) {\n                // Use the default value.\n                addParam(built, param, null, false);\n            });\n\n            // Make sure that the \"type\" field was filled automatically.\n            if (built.type !== self.typeName) {\n                throw new Error(\"\");\n            }\n\n            return built;\n        }\n\n        // Calling .from on the builder function will construct an instance of the Def,\n        // using field values from the passed object. For fields missing from the passed object,\n        // their default value will be used.\n        builder.from = function (obj) {\n            if (!self.finalized) {\n                throw new Error(\n                    \"attempting to instantiate unfinalized type \" +\n                    self.typeName\n                );\n            }\n            \n            var built = Object.create(nodePrototype);\n\n            Object.keys(self.allFields).forEach(function (param) {\n                if (hasOwn.call(obj, param)) {\n                    addParam(built, param, obj[param], true);\n                } else {\n                    addParam(built, param, null, false);\n                }\n            });\n\n            // Make sure that the \"type\" field was filled automatically.\n            if (built.type !== self.typeName) {\n                throw new Error(\"\");\n            }\n\n            return built;\n        }\n\n        Object.defineProperty(builders, getBuilderName(self.typeName), {\n            enumerable: true,\n            value: builder\n        });\n\n        return self; // For chaining.\n    };\n\n    function getBuilderName(typeName) {\n        return typeName.replace(/^[A-Z]+/, function (upperCasePrefix) {\n            var len = upperCasePrefix.length;\n            switch (len) {\n                case 0: return \"\";\n                // If there's only one initial capital letter, just lower-case it.\n                case 1: return upperCasePrefix.toLowerCase();\n                default:\n                    // If there's more than one initial capital letter, lower-case\n                    // all but the last one, so that XMLDefaultDeclaration (for\n                    // example) becomes xmlDefaultDeclaration.\n                    return upperCasePrefix.slice(\n                        0, len - 1).toLowerCase() +\n                      upperCasePrefix.charAt(len - 1);\n            }\n        });\n    }\n    exports.getBuilderName = getBuilderName;\n\n    function getStatementBuilderName(typeName) {\n        typeName = getBuilderName(typeName);\n        return typeName.replace(/(Expression)?$/, \"Statement\");\n    }\n    exports.getStatementBuilderName = getStatementBuilderName;\n\n    // The reason fields are specified using .field(...) instead of an object\n    // literal syntax is somewhat subtle: the object literal syntax would\n    // support only one key and one value, but with .field(...) we can pass\n    // any number of arguments to specify the field.\n    Dp.field = function (name, type, defaultFn, hidden) {\n        if (this.finalized) {\n            console.error(\"Ignoring attempt to redefine field \" +\n              JSON.stringify(name) + \" of finalized type \" +\n              JSON.stringify(this.typeName));\n            return this;\n        }\n        this.ownFields[name] = new Field(name, type, defaultFn, hidden);\n        return this; // For chaining.\n    };\n\n    var namedTypes = {};\n    exports.namedTypes = namedTypes;\n\n    // Like Object.keys, but aware of what fields each AST type should have.\n    function getFieldNames(object) {\n        var d = Def.fromValue(object);\n        if (d) {\n            return d.fieldNames.slice(0);\n        }\n\n        if (\"type\" in object) {\n            throw new Error(\n              \"did not recognize object of type \" +\n              JSON.stringify(object.type)\n            );\n        }\n\n        return Object.keys(object);\n    }\n    exports.getFieldNames = getFieldNames;\n\n    // Get the value of an object property, taking object.type and default\n    // functions into account.\n    function getFieldValue(object, fieldName) {\n        var d = Def.fromValue(object);\n        if (d) {\n            var field = d.allFields[fieldName];\n            if (field) {\n                return field.getValue(object);\n            }\n        }\n\n        return object && object[fieldName];\n    }\n    exports.getFieldValue = getFieldValue;\n\n    // Iterate over all defined fields of an object, including those missing\n    // or undefined, passing each field name and effective value (as returned\n    // by getFieldValue) to the callback. If the object has no corresponding\n    // Def, the callback will never be called.\n    exports.eachField = function (object, callback, context) {\n        getFieldNames(object).forEach(function (name) {\n            callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    };\n\n    // Similar to eachField, except that iteration stops as soon as the\n    // callback returns a truthy value. Like Array.prototype.some, the final\n    // result is either true or false to indicates whether the callback\n    // returned true for any element or not.\n    exports.someField = function (object, callback, context) {\n        return getFieldNames(object).some(function (name) {\n            return callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    };\n\n    // This property will be overridden as true by individual Def instances\n    // when they are finalized.\n    Object.defineProperty(Dp, \"finalized\", {value: false});\n\n    Dp.finalize = function () {\n        var self = this;\n\n        // It's not an error to finalize a type more than once, but only the\n        // first call to .finalize does anything.\n        if (!self.finalized) {\n            var allFields = self.allFields;\n            var allSupertypes = self.allSupertypes;\n\n            self.baseNames.forEach(function (name) {\n                var def = defCache[name];\n                if (def instanceof Def) {\n                    def.finalize();\n                    extend(allFields, def.allFields);\n                    extend(allSupertypes, def.allSupertypes);\n                } else {\n                    var message = \"unknown supertype name \" +\n                      JSON.stringify(name) +\n                      \" for subtype \" +\n                      JSON.stringify(self.typeName);\n                    throw new Error(message);\n                }\n            });\n\n            // TODO Warn if fields are overridden with incompatible types.\n            extend(allFields, self.ownFields);\n            allSupertypes[self.typeName] = self;\n\n            self.fieldNames.length = 0;\n            for (var fieldName in allFields) {\n                if (hasOwn.call(allFields, fieldName) &&\n                    !allFields[fieldName].hidden) {\n                        self.fieldNames.push(fieldName);\n                }\n            }\n\n            // Types are exported only once they have been finalized.\n            Object.defineProperty(namedTypes, self.typeName, {\n                enumerable: true,\n                value: self.type\n            });\n\n            Object.defineProperty(self, \"finalized\", {value: true});\n\n            // A linearization of the inheritance hierarchy.\n            populateSupertypeList(self.typeName, self.supertypeList);\n\n            if (self.buildable && self.supertypeList.lastIndexOf(\"Expression\") >= 0) {\n                wrapExpressionBuilderWithStatement(self.typeName);\n            }\n        }\n    };\n\n    // Adds an additional builder for Expression subtypes\n    // that wraps the built Expression in an ExpressionStatements.\n    function wrapExpressionBuilderWithStatement(typeName) {\n        var wrapperName = getStatementBuilderName(typeName);\n\n        // skip if the builder already exists\n        if (builders[wrapperName]) return;\n\n        // the builder function to wrap with builders.ExpressionStatement\n        var wrapped = builders[getBuilderName(typeName)];\n\n        // skip if there is nothing to wrap\n        if (!wrapped) return;\n\n        builders[wrapperName] = function () {\n            return builders.expressionStatement(wrapped.apply(builders, arguments));\n        };\n    }\n\n    function populateSupertypeList(typeName, list) {\n        list.length = 0;\n        list.push(typeName);\n\n        var lastSeen = Object.create(null);\n\n        for (var pos = 0; pos < list.length; ++pos) {\n            typeName = list[pos];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\");\n            }\n\n            // If we saw typeName earlier in the breadth-first traversal,\n            // delete the last-seen occurrence.\n            if (hasOwn.call(lastSeen, typeName)) {\n                delete list[lastSeen[typeName]];\n            }\n\n            // Record the new index of the last-seen occurrence of typeName.\n            lastSeen[typeName] = pos;\n\n            // Enqueue the base names of this type.\n            list.push.apply(list, d.baseNames);\n        }\n\n        // Compaction loop to remove array holes.\n        for (var to = 0, from = to, len = list.length; from < len; ++from) {\n            if (hasOwn.call(list, from)) {\n                list[to++] = list[from];\n            }\n        }\n\n        list.length = to;\n    }\n\n    function extend(into, from) {\n        Object.keys(from).forEach(function (name) {\n            into[name] = from[name];\n        });\n\n        return into;\n    };\n\n    exports.finalize = function () {\n        Object.keys(defCache).forEach(function (name) {\n            defCache[name].finalize();\n        });\n    };\n\n    return exports;\n};\n","module.exports = function (fork) {\n    var types = fork.use(require('../lib/types'));\n    var getFieldNames = types.getFieldNames;\n    var getFieldValue = types.getFieldValue;\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isDate = types.builtInTypes.Date;\n    var isRegExp = types.builtInTypes.RegExp;\n    var hasOwn = Object.prototype.hasOwnProperty;\n\n    function astNodesAreEquivalent(a, b, problemPath) {\n        if (isArray.check(problemPath)) {\n            problemPath.length = 0;\n        } else {\n            problemPath = null;\n        }\n\n        return areEquivalent(a, b, problemPath);\n    }\n\n    astNodesAreEquivalent.assert = function (a, b) {\n        var problemPath = [];\n        if (!astNodesAreEquivalent(a, b, problemPath)) {\n            if (problemPath.length === 0) {\n                if (a !== b) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n            } else {\n                throw new Error(\n                  \"Nodes differ in the following path: \" +\n                  problemPath.map(subscriptForProperty).join(\"\")\n                );\n            }\n        }\n    };\n\n    function subscriptForProperty(property) {\n        if (/[_$a-z][_$a-z0-9]*/i.test(property)) {\n            return \".\" + property;\n        }\n        return \"[\" + JSON.stringify(property) + \"]\";\n    }\n\n    function areEquivalent(a, b, problemPath) {\n        if (a === b) {\n            return true;\n        }\n\n        if (isArray.check(a)) {\n            return arraysAreEquivalent(a, b, problemPath);\n        }\n\n        if (isObject.check(a)) {\n            return objectsAreEquivalent(a, b, problemPath);\n        }\n\n        if (isDate.check(a)) {\n            return isDate.check(b) && (+a === +b);\n        }\n\n        if (isRegExp.check(a)) {\n            return isRegExp.check(b) && (\n                a.source === b.source &&\n                a.global === b.global &&\n                a.multiline === b.multiline &&\n                a.ignoreCase === b.ignoreCase\n              );\n        }\n\n        return a == b;\n    }\n\n    function arraysAreEquivalent(a, b, problemPath) {\n        isArray.assert(a);\n        var aLength = a.length;\n\n        if (!isArray.check(b) || b.length !== aLength) {\n            if (problemPath) {\n                problemPath.push(\"length\");\n            }\n            return false;\n        }\n\n        for (var i = 0; i < aLength; ++i) {\n            if (problemPath) {\n                problemPath.push(i);\n            }\n\n            if (i in a !== i in b) {\n                return false;\n            }\n\n            if (!areEquivalent(a[i], b[i], problemPath)) {\n                return false;\n            }\n\n            if (problemPath) {\n                var problemPathTail = problemPath.pop();\n                if (problemPathTail !== i) {\n                    throw new Error(\"\" + problemPathTail);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function objectsAreEquivalent(a, b, problemPath) {\n        isObject.assert(a);\n        if (!isObject.check(b)) {\n            return false;\n        }\n\n        // Fast path for a common property of AST nodes.\n        if (a.type !== b.type) {\n            if (problemPath) {\n                problemPath.push(\"type\");\n            }\n            return false;\n        }\n\n        var aNames = getFieldNames(a);\n        var aNameCount = aNames.length;\n\n        var bNames = getFieldNames(b);\n        var bNameCount = bNames.length;\n\n        if (aNameCount === bNameCount) {\n            for (var i = 0; i < aNameCount; ++i) {\n                var name = aNames[i];\n                var aChild = getFieldValue(a, name);\n                var bChild = getFieldValue(b, name);\n\n                if (problemPath) {\n                    problemPath.push(name);\n                }\n\n                if (!areEquivalent(aChild, bChild, problemPath)) {\n                    return false;\n                }\n\n                if (problemPath) {\n                    var problemPathTail = problemPath.pop();\n                    if (problemPathTail !== name) {\n                        throw new Error(\"\" + problemPathTail);\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        if (!problemPath) {\n            return false;\n        }\n\n        // Since aNameCount !== bNameCount, we need to find some name that's\n        // missing in aNames but present in bNames, or vice-versa.\n\n        var seenNames = Object.create(null);\n\n        for (i = 0; i < aNameCount; ++i) {\n            seenNames[aNames[i]] = true;\n        }\n\n        for (i = 0; i < bNameCount; ++i) {\n            name = bNames[i];\n\n            if (!hasOwn.call(seenNames, name)) {\n                problemPath.push(name);\n                return false;\n            }\n\n            delete seenNames[name];\n        }\n\n        for (name in seenNames) {\n            problemPath.push(name);\n            break;\n        }\n\n        return false;\n    }\n    \n    return astNodesAreEquivalent;\n};\n","var Ap = Array.prototype;\nvar slice = Ap.slice;\nvar map = Ap.map;\nvar Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\n\nmodule.exports = function (fork) {\n    var types = fork.use(require(\"./types\"));\n    var isArray = types.builtInTypes.array;\n    var isNumber = types.builtInTypes.number;\n\n    function Path(value, parentPath, name) {\n        if (!(this instanceof Path)) {\n            throw new Error(\"Path constructor cannot be invoked without 'new'\");\n        }\n\n        if (parentPath) {\n            if (!(parentPath instanceof Path)) {\n                throw new Error(\"\");\n            }\n        } else {\n            parentPath = null;\n            name = null;\n        }\n\n        // The value encapsulated by this Path, generally equal to\n        // parentPath.value[name] if we have a parentPath.\n        this.value = value;\n\n        // The immediate parent Path of this Path.\n        this.parentPath = parentPath;\n\n        // The name of the property of parentPath.value through which this\n        // Path's value was reached.\n        this.name = name;\n\n        // Calling path.get(\"child\") multiple times always returns the same\n        // child Path object, for both performance and consistency reasons.\n        this.__childCache = null;\n    }\n\n    var Pp = Path.prototype;\n\n    function getChildCache(path) {\n        // Lazily create the child cache. This also cheapens cache\n        // invalidation, since you can just reset path.__childCache to null.\n        return path.__childCache || (path.__childCache = Object.create(null));\n    }\n\n    function getChildPath(path, name) {\n        var cache = getChildCache(path);\n        var actualChildValue = path.getValueProperty(name);\n        var childPath = cache[name];\n        if (!hasOwn.call(cache, name) ||\n          // Ensure consistency between cache and reality.\n          childPath.value !== actualChildValue) {\n            childPath = cache[name] = new path.constructor(\n              actualChildValue, path, name\n            );\n        }\n        return childPath;\n    }\n\n// This method is designed to be overridden by subclasses that need to\n// handle missing properties, etc.\n    Pp.getValueProperty = function getValueProperty(name) {\n        return this.value[name];\n    };\n\n    Pp.get = function get(name) {\n        var path = this;\n        var names = arguments;\n        var count = names.length;\n\n        for (var i = 0; i < count; ++i) {\n            path = getChildPath(path, names[i]);\n        }\n\n        return path;\n    };\n\n    Pp.each = function each(callback, context) {\n        var childPaths = [];\n        var len = this.value.length;\n        var i = 0;\n\n        // Collect all the original child paths before invoking the callback.\n        for (var i = 0; i < len; ++i) {\n            if (hasOwn.call(this.value, i)) {\n                childPaths[i] = this.get(i);\n            }\n        }\n\n        // Invoke the callback on just the original child paths, regardless of\n        // any modifications made to the array by the callback. I chose these\n        // semantics over cleverly invoking the callback on new elements because\n        // this way is much easier to reason about.\n        context = context || this;\n        for (i = 0; i < len; ++i) {\n            if (hasOwn.call(childPaths, i)) {\n                callback.call(context, childPaths[i]);\n            }\n        }\n    };\n\n    Pp.map = function map(callback, context) {\n        var result = [];\n\n        this.each(function (childPath) {\n            result.push(callback.call(this, childPath));\n        }, context);\n\n        return result;\n    };\n\n    Pp.filter = function filter(callback, context) {\n        var result = [];\n\n        this.each(function (childPath) {\n            if (callback.call(this, childPath)) {\n                result.push(childPath);\n            }\n        }, context);\n\n        return result;\n    };\n\n    function emptyMoves() {}\n    function getMoves(path, offset, start, end) {\n        isArray.assert(path.value);\n\n        if (offset === 0) {\n            return emptyMoves;\n        }\n\n        var length = path.value.length;\n        if (length < 1) {\n            return emptyMoves;\n        }\n\n        var argc = arguments.length;\n        if (argc === 2) {\n            start = 0;\n            end = length;\n        } else if (argc === 3) {\n            start = Math.max(start, 0);\n            end = length;\n        } else {\n            start = Math.max(start, 0);\n            end = Math.min(end, length);\n        }\n\n        isNumber.assert(start);\n        isNumber.assert(end);\n\n        var moves = Object.create(null);\n        var cache = getChildCache(path);\n\n        for (var i = start; i < end; ++i) {\n            if (hasOwn.call(path.value, i)) {\n                var childPath = path.get(i);\n                if (childPath.name !== i) {\n                    throw new Error(\"\");\n                }\n                var newIndex = i + offset;\n                childPath.name = newIndex;\n                moves[newIndex] = childPath;\n                delete cache[i];\n            }\n        }\n\n        delete cache.length;\n\n        return function () {\n            for (var newIndex in moves) {\n                var childPath = moves[newIndex];\n                if (childPath.name !== +newIndex) {\n                    throw new Error(\"\");\n                }\n                cache[newIndex] = childPath;\n                path.value[newIndex] = childPath.value;\n            }\n        };\n    }\n\n    Pp.shift = function shift() {\n        var move = getMoves(this, -1);\n        var result = this.value.shift();\n        move();\n        return result;\n    };\n\n    Pp.unshift = function unshift(node) {\n        var move = getMoves(this, arguments.length);\n        var result = this.value.unshift.apply(this.value, arguments);\n        move();\n        return result;\n    };\n\n    Pp.push = function push(node) {\n        isArray.assert(this.value);\n        delete getChildCache(this).length\n        return this.value.push.apply(this.value, arguments);\n    };\n\n    Pp.pop = function pop() {\n        isArray.assert(this.value);\n        var cache = getChildCache(this);\n        delete cache[this.value.length - 1];\n        delete cache.length;\n        return this.value.pop();\n    };\n\n    Pp.insertAt = function insertAt(index, node) {\n        var argc = arguments.length;\n        var move = getMoves(this, argc - 1, index);\n        if (move === emptyMoves) {\n            return this;\n        }\n\n        index = Math.max(index, 0);\n\n        for (var i = 1; i < argc; ++i) {\n            this.value[index + i - 1] = arguments[i];\n        }\n\n        move();\n\n        return this;\n    };\n\n    Pp.insertBefore = function insertBefore(node) {\n        var pp = this.parentPath;\n        var argc = arguments.length;\n        var insertAtArgs = [this.name];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(arguments[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n\n    Pp.insertAfter = function insertAfter(node) {\n        var pp = this.parentPath;\n        var argc = arguments.length;\n        var insertAtArgs = [this.name + 1];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(arguments[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n\n    function repairRelationshipWithParent(path) {\n        if (!(path instanceof Path)) {\n            throw new Error(\"\");\n        }\n\n        var pp = path.parentPath;\n        if (!pp) {\n            // Orphan paths have no relationship to repair.\n            return path;\n        }\n\n        var parentValue = pp.value;\n        var parentCache = getChildCache(pp);\n\n        // Make sure parentCache[path.name] is populated.\n        if (parentValue[path.name] === path.value) {\n            parentCache[path.name] = path;\n        } else if (isArray.check(parentValue)) {\n            // Something caused path.name to become out of date, so attempt to\n            // recover by searching for path.value in parentValue.\n            var i = parentValue.indexOf(path.value);\n            if (i >= 0) {\n                parentCache[path.name = i] = path;\n            }\n        } else {\n            // If path.value disagrees with parentValue[path.name], and\n            // path.name is not an array index, let path.value become the new\n            // parentValue[path.name] and update parentCache accordingly.\n            parentValue[path.name] = path.value;\n            parentCache[path.name] = path;\n        }\n\n        if (parentValue[path.name] !== path.value) {\n            throw new Error(\"\");\n        }\n        if (path.parentPath.get(path.name) !== path) {\n            throw new Error(\"\");\n        }\n\n        return path;\n    }\n\n    Pp.replace = function replace(replacement) {\n        var results = [];\n        var parentValue = this.parentPath.value;\n        var parentCache = getChildCache(this.parentPath);\n        var count = arguments.length;\n\n        repairRelationshipWithParent(this);\n\n        if (isArray.check(parentValue)) {\n            var originalLength = parentValue.length;\n            var move = getMoves(this.parentPath, count - 1, this.name + 1);\n\n            var spliceArgs = [this.name, 1];\n            for (var i = 0; i < count; ++i) {\n                spliceArgs.push(arguments[i]);\n            }\n\n            var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n\n            if (splicedOut[0] !== this.value) {\n                throw new Error(\"\");\n            }\n            if (parentValue.length !== (originalLength - 1 + count)) {\n                throw new Error(\"\");\n            }\n\n            move();\n\n            if (count === 0) {\n                delete this.value;\n                delete parentCache[this.name];\n                this.__childCache = null;\n\n            } else {\n                if (parentValue[this.name] !== replacement) {\n                    throw new Error(\"\");\n                }\n\n                if (this.value !== replacement) {\n                    this.value = replacement;\n                    this.__childCache = null;\n                }\n\n                for (i = 0; i < count; ++i) {\n                    results.push(this.parentPath.get(this.name + i));\n                }\n\n                if (results[0] !== this) {\n                    throw new Error(\"\");\n                }\n            }\n\n        } else if (count === 1) {\n            if (this.value !== replacement) {\n                this.__childCache = null;\n            }\n            this.value = parentValue[this.name] = replacement;\n            results.push(this);\n\n        } else if (count === 0) {\n            delete parentValue[this.name];\n            delete this.value;\n            this.__childCache = null;\n\n            // Leave this path cached as parentCache[this.name], even though\n            // it no longer has a value defined.\n\n        } else {\n            throw new Error(\"Could not replace path\");\n        }\n\n        return results;\n    };\n\n    return Path;\n};\n","var hasOwn = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (fork) {\n    var types = fork.use(require(\"./types\"));\n    var Type = types.Type;\n    var namedTypes = types.namedTypes;\n    var Node = namedTypes.Node;\n    var Expression = namedTypes.Expression;\n    var isArray = types.builtInTypes.array;\n    var b = types.builders;\n\n    function Scope(path, parentScope) {\n        if (!(this instanceof Scope)) {\n            throw new Error(\"Scope constructor cannot be invoked without 'new'\");\n        }\n        if (!(path instanceof fork.use(require(\"./node-path\")))) {\n            throw new Error(\"\");\n        }\n        ScopeType.assert(path.value);\n\n        var depth;\n\n        if (parentScope) {\n            if (!(parentScope instanceof Scope)) {\n                throw new Error(\"\");\n            }\n            depth = parentScope.depth + 1;\n        } else {\n            parentScope = null;\n            depth = 0;\n        }\n\n        Object.defineProperties(this, {\n            path: { value: path },\n            node: { value: path.value },\n            isGlobal: { value: !parentScope, enumerable: true },\n            depth: { value: depth },\n            parent: { value: parentScope },\n            bindings: { value: {} },\n            types: { value: {} },\n        });\n    }\n\n    var scopeTypes = [\n        // Program nodes introduce global scopes.\n        namedTypes.Program,\n\n        // Function is the supertype of FunctionExpression,\n        // FunctionDeclaration, ArrowExpression, etc.\n        namedTypes.Function,\n\n        // In case you didn't know, the caught parameter shadows any variable\n        // of the same name in an outer scope.\n        namedTypes.CatchClause\n    ];\n\n    var ScopeType = Type.or.apply(Type, scopeTypes);\n\n    Scope.isEstablishedBy = function(node) {\n        return ScopeType.check(node);\n    };\n\n    var Sp = Scope.prototype;\n\n// Will be overridden after an instance lazily calls scanScope.\n    Sp.didScan = false;\n\n    Sp.declares = function(name) {\n        this.scan();\n        return hasOwn.call(this.bindings, name);\n    };\n\n    Sp.declaresType = function(name) {\n        this.scan();\n        return hasOwn.call(this.types, name);\n    };\n\n    Sp.declareTemporary = function(prefix) {\n        if (prefix) {\n            if (!/^[a-z$_]/i.test(prefix)) {\n                throw new Error(\"\");\n            }\n        } else {\n            prefix = \"t$\";\n        }\n\n        // Include this.depth in the name to make sure the name does not\n        // collide with any variables in nested/enclosing scopes.\n        prefix += this.depth.toString(36) + \"$\";\n\n        this.scan();\n\n        var index = 0;\n        while (this.declares(prefix + index)) {\n            ++index;\n        }\n\n        var name = prefix + index;\n        return this.bindings[name] = types.builders.identifier(name);\n    };\n\n    Sp.injectTemporary = function(identifier, init) {\n        identifier || (identifier = this.declareTemporary());\n\n        var bodyPath = this.path.get(\"body\");\n        if (namedTypes.BlockStatement.check(bodyPath.value)) {\n            bodyPath = bodyPath.get(\"body\");\n        }\n\n        bodyPath.unshift(\n          b.variableDeclaration(\n            \"var\",\n            [b.variableDeclarator(identifier, init || null)]\n          )\n        );\n\n        return identifier;\n    };\n\n    Sp.scan = function(force) {\n        if (force || !this.didScan) {\n            for (var name in this.bindings) {\n                // Empty out this.bindings, just in cases.\n                delete this.bindings[name];\n            }\n            scanScope(this.path, this.bindings, this.types);\n            this.didScan = true;\n        }\n    };\n\n    Sp.getBindings = function () {\n        this.scan();\n        return this.bindings;\n    };\n\n    Sp.getTypes = function () {\n        this.scan();\n        return this.types;\n    };\n\n    function scanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        ScopeType.assert(node);\n\n        if (namedTypes.CatchClause.check(node)) {\n            // A catch clause establishes a new scope but the only variable\n            // bound in that scope is the catch parameter. Any other\n            // declarations create bindings in the outer scope.\n            addPattern(path.get(\"param\"), bindings);\n\n        } else {\n            recursiveScanScope(path, bindings, scopeTypes);\n        }\n    }\n\n    function recursiveScanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n\n        if (path.parent &&\n          namedTypes.FunctionExpression.check(path.parent.node) &&\n          path.parent.node.id) {\n            addPattern(path.parent.get(\"id\"), bindings);\n        }\n\n        if (!node) {\n            // None of the remaining cases matter if node is falsy.\n\n        } else if (isArray.check(node)) {\n            path.each(function(childPath) {\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n\n        } else if (namedTypes.Function.check(node)) {\n            path.get(\"params\").each(function(paramPath) {\n                addPattern(paramPath, bindings);\n            });\n\n            recursiveScanChild(path.get(\"body\"), bindings, scopeTypes);\n\n        } else if (namedTypes.TypeAlias && namedTypes.TypeAlias.check(node)) {\n            addTypePattern(path.get(\"id\"), scopeTypes);\n\n        } else if (namedTypes.VariableDeclarator.check(node)) {\n            addPattern(path.get(\"id\"), bindings);\n            recursiveScanChild(path.get(\"init\"), bindings, scopeTypes);\n\n        } else if (node.type === \"ImportSpecifier\" ||\n          node.type === \"ImportNamespaceSpecifier\" ||\n          node.type === \"ImportDefaultSpecifier\") {\n            addPattern(\n              // Esprima used to use the .name field to refer to the local\n              // binding identifier for ImportSpecifier nodes, but .id for\n              // ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.\n              // ESTree/Acorn/ESpree use .local for all three node types.\n              path.get(node.local ? \"local\" :\n                node.name ? \"name\" : \"id\"),\n              bindings\n            );\n\n        } else if (Node.check(node) && !Expression.check(node)) {\n            types.eachField(node, function(name, child) {\n                var childPath = path.get(name);\n                if (!pathHasValue(childPath, child)) {\n                    throw new Error(\"\");\n                }\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n    }\n\n    function pathHasValue(path, value) {\n        if (path.value === value) {\n            return true;\n        }\n\n        // Empty arrays are probably produced by defaults.emptyArray, in which\n        // case is makes sense to regard them as equivalent, if not ===.\n        if (Array.isArray(path.value) &&\n          path.value.length === 0 &&\n          Array.isArray(value) &&\n          value.length === 0) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function recursiveScanChild(path, bindings, scopeTypes) {\n        var node = path.value;\n\n        if (!node || Expression.check(node)) {\n            // Ignore falsy values and Expressions.\n\n        } else if (namedTypes.FunctionDeclaration.check(node) &&\n                   node.id !== null) {\n            addPattern(path.get(\"id\"), bindings);\n\n        } else if (namedTypes.ClassDeclaration &&\n          namedTypes.ClassDeclaration.check(node)) {\n            addPattern(path.get(\"id\"), bindings);\n\n        } else if (ScopeType.check(node)) {\n            if (namedTypes.CatchClause.check(node)) {\n                var catchParamName = node.param.name;\n                var hadBinding = hasOwn.call(bindings, catchParamName);\n\n                // Any declarations that occur inside the catch body that do\n                // not have the same name as the catch parameter should count\n                // as bindings in the outer scope.\n                recursiveScanScope(path.get(\"body\"), bindings, scopeTypes);\n\n                // If a new binding matching the catch parameter name was\n                // created while scanning the catch body, ignore it because it\n                // actually refers to the catch parameter and not the outer\n                // scope that we're currently scanning.\n                if (!hadBinding) {\n                    delete bindings[catchParamName];\n                }\n            }\n\n        } else {\n            recursiveScanScope(path, bindings, scopeTypes);\n        }\n    }\n\n    function addPattern(patternPath, bindings) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(bindings, pattern.name)) {\n                bindings[pattern.name].push(patternPath);\n            } else {\n                bindings[pattern.name] = [patternPath];\n            }\n\n        } else if (namedTypes.AssignmentPattern &&\n          namedTypes.AssignmentPattern.check(pattern)) {\n          addPattern(patternPath.get('left'), bindings);\n\n        } else if (namedTypes.ObjectPattern &&\n          namedTypes.ObjectPattern.check(pattern)) {\n            patternPath.get('properties').each(function(propertyPath) {\n                var property = propertyPath.value;\n                if (namedTypes.Pattern.check(property)) {\n                    addPattern(propertyPath, bindings);\n                } else  if (namedTypes.Property.check(property)) {\n                    addPattern(propertyPath.get('value'), bindings);\n                } else if (namedTypes.SpreadProperty &&\n                  namedTypes.SpreadProperty.check(property)) {\n                    addPattern(propertyPath.get('argument'), bindings);\n                }\n            });\n\n        } else if (namedTypes.ArrayPattern &&\n          namedTypes.ArrayPattern.check(pattern)) {\n            patternPath.get('elements').each(function(elementPath) {\n                var element = elementPath.value;\n                if (namedTypes.Pattern.check(element)) {\n                    addPattern(elementPath, bindings);\n                } else if (namedTypes.SpreadElement &&\n                  namedTypes.SpreadElement.check(element)) {\n                    addPattern(elementPath.get(\"argument\"), bindings);\n                }\n            });\n\n        } else if (namedTypes.PropertyPattern &&\n          namedTypes.PropertyPattern.check(pattern)) {\n            addPattern(patternPath.get('pattern'), bindings);\n\n        } else if ((namedTypes.SpreadElementPattern &&\n          namedTypes.SpreadElementPattern.check(pattern)) ||\n          (namedTypes.SpreadPropertyPattern &&\n          namedTypes.SpreadPropertyPattern.check(pattern))) {\n            addPattern(patternPath.get('argument'), bindings);\n        }\n    }\n\n    function addTypePattern(patternPath, types) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(types, pattern.name)) {\n                types[pattern.name].push(patternPath);\n            } else {\n                types[pattern.name] = [patternPath];\n            }\n\n        }\n    }\n\n    Sp.lookup = function(name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declares(name))\n                break;\n        return scope;\n    };\n\n    Sp.lookupType = function(name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declaresType(name))\n                break;\n        return scope;\n    };\n\n    Sp.getGlobalScope = function() {\n        var scope = this;\n        while (!scope.isGlobal)\n            scope = scope.parent;\n        return scope;\n    };\n\n    return Scope;\n};\n","module.exports = function (fork) {\n    var types = fork.use(require(\"./types\"));\n    var n = types.namedTypes;\n    var b = types.builders;\n    var isNumber = types.builtInTypes.number;\n    var isArray = types.builtInTypes.array;\n    var Path = fork.use(require(\"./path\"));\n    var Scope = fork.use(require(\"./scope\"));\n\n    function NodePath(value, parentPath, name) {\n        if (!(this instanceof NodePath)) {\n            throw new Error(\"NodePath constructor cannot be invoked without 'new'\");\n        }\n        Path.call(this, value, parentPath, name);\n    }\n\n    var NPp = NodePath.prototype = Object.create(Path.prototype, {\n        constructor: {\n            value: NodePath,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    Object.defineProperties(NPp, {\n        node: {\n            get: function () {\n                Object.defineProperty(this, \"node\", {\n                    configurable: true, // Enable deletion.\n                    value: this._computeNode()\n                });\n\n                return this.node;\n            }\n        },\n\n        parent: {\n            get: function () {\n                Object.defineProperty(this, \"parent\", {\n                    configurable: true, // Enable deletion.\n                    value: this._computeParent()\n                });\n\n                return this.parent;\n            }\n        },\n\n        scope: {\n            get: function () {\n                Object.defineProperty(this, \"scope\", {\n                    configurable: true, // Enable deletion.\n                    value: this._computeScope()\n                });\n\n                return this.scope;\n            }\n        }\n    });\n\n    NPp.replace = function () {\n        delete this.node;\n        delete this.parent;\n        delete this.scope;\n        return Path.prototype.replace.apply(this, arguments);\n    };\n\n    NPp.prune = function () {\n        var remainingNodePath = this.parent;\n\n        this.replace();\n\n        return cleanUpNodesAfterPrune(remainingNodePath);\n    };\n\n    // The value of the first ancestor Path whose value is a Node.\n    NPp._computeNode = function () {\n        var value = this.value;\n        if (n.Node.check(value)) {\n            return value;\n        }\n\n        var pp = this.parentPath;\n        return pp && pp.node || null;\n    };\n\n    // The first ancestor Path whose value is a Node distinct from this.node.\n    NPp._computeParent = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n\n        if (!n.Node.check(value)) {\n            while (pp && !n.Node.check(pp.value)) {\n                pp = pp.parentPath;\n            }\n\n            if (pp) {\n                pp = pp.parentPath;\n            }\n        }\n\n        while (pp && !n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n        }\n\n        return pp || null;\n    };\n\n    // The closest enclosing scope that governs this node.\n    NPp._computeScope = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        var scope = pp && pp.scope;\n\n        if (n.Node.check(value) &&\n          Scope.isEstablishedBy(value)) {\n            scope = new Scope(this, scope);\n        }\n\n        return scope || null;\n    };\n\n    NPp.getValueProperty = function (name) {\n        return types.getFieldValue(this.value, name);\n    };\n\n    /**\n     * Determine whether this.node needs to be wrapped in parentheses in order\n     * for a parser to reproduce the same local AST structure.\n     *\n     * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression\n     * whose operator is \"+\" needs parentheses, because `1 + 2 * 3` would\n     * parse differently.\n     *\n     * If assumeExpressionContext === true, we don't worry about edge cases\n     * like an anonymous FunctionExpression appearing lexically first in its\n     * enclosing statement and thus needing parentheses to avoid being parsed\n     * as a FunctionDeclaration with a missing name.\n     */\n    NPp.needsParens = function (assumeExpressionContext) {\n        var pp = this.parentPath;\n        if (!pp) {\n            return false;\n        }\n\n        var node = this.value;\n\n        // Only expressions need parentheses.\n        if (!n.Expression.check(node)) {\n            return false;\n        }\n\n        // Identifiers never need parentheses.\n        if (node.type === \"Identifier\") {\n            return false;\n        }\n\n        while (!n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n            if (!pp) {\n                return false;\n            }\n        }\n\n        var parent = pp.value;\n\n        switch (node.type) {\n            case \"UnaryExpression\":\n            case \"SpreadElement\":\n            case \"SpreadProperty\":\n                return parent.type === \"MemberExpression\"\n                  && this.name === \"object\"\n                  && parent.object === node;\n\n            case \"BinaryExpression\":\n            case \"LogicalExpression\":\n                switch (parent.type) {\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                          && parent.callee === node;\n\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                        return true;\n\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                          && parent.object === node;\n\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                        var po = parent.operator;\n                        var pp = PRECEDENCE[po];\n                        var no = node.operator;\n                        var np = PRECEDENCE[no];\n\n                        if (pp > np) {\n                            return true;\n                        }\n\n                        if (pp === np && this.name === \"right\") {\n                            if (parent.right !== node) {\n                                throw new Error(\"Nodes must be equal\");\n                            }\n                            return true;\n                        }\n\n                    default:\n                        return false;\n                }\n\n            case \"SequenceExpression\":\n                switch (parent.type) {\n                    case \"ForStatement\":\n                        // Although parentheses wouldn't hurt around sequence\n                        // expressions in the head of for loops, traditional style\n                        // dictates that e.g. i++, j++ should not be wrapped with\n                        // parentheses.\n                        return false;\n\n                    case \"ExpressionStatement\":\n                        return this.name !== \"expression\";\n\n                    default:\n                        // Otherwise err on the side of overparenthesization, adding\n                        // explicit exceptions above if this proves overzealous.\n                        return true;\n                }\n\n            case \"YieldExpression\":\n                switch (parent.type) {\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"CallExpression\":\n                    case \"MemberExpression\":\n                    case \"NewExpression\":\n                    case \"ConditionalExpression\":\n                    case \"YieldExpression\":\n                        return true;\n\n                    default:\n                        return false;\n                }\n\n            case \"Literal\":\n                return parent.type === \"MemberExpression\"\n                  && isNumber.check(node.value)\n                  && this.name === \"object\"\n                  && parent.object === node;\n\n            case \"AssignmentExpression\":\n            case \"ConditionalExpression\":\n                switch (parent.type) {\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                        return true;\n\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                          && parent.callee === node;\n\n                    case \"ConditionalExpression\":\n                        return this.name === \"test\"\n                          && parent.test === node;\n\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                          && parent.object === node;\n\n                    default:\n                        return false;\n                }\n\n            default:\n                if (parent.type === \"NewExpression\" &&\n                  this.name === \"callee\" &&\n                  parent.callee === node) {\n                    return containsCallExpression(node);\n                }\n        }\n\n        if (assumeExpressionContext !== true &&\n          !this.canBeFirstInStatement() &&\n          this.firstInStatement())\n            return true;\n\n        return false;\n    };\n\n    function isBinary(node) {\n        return n.BinaryExpression.check(node)\n          || n.LogicalExpression.check(node);\n    }\n\n    function isUnaryLike(node) {\n        return n.UnaryExpression.check(node)\n          // I considered making SpreadElement and SpreadProperty subtypes\n          // of UnaryExpression, but they're not really Expression nodes.\n          || (n.SpreadElement && n.SpreadElement.check(node))\n          || (n.SpreadProperty && n.SpreadProperty.check(node));\n    }\n\n    var PRECEDENCE = {};\n    [[\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ].forEach(function (tier, i) {\n        tier.forEach(function (op) {\n            PRECEDENCE[op] = i;\n        });\n    });\n\n    function containsCallExpression(node) {\n        if (n.CallExpression.check(node)) {\n            return true;\n        }\n\n        if (isArray.check(node)) {\n            return node.some(containsCallExpression);\n        }\n\n        if (n.Node.check(node)) {\n            return types.someField(node, function (name, child) {\n                return containsCallExpression(child);\n            });\n        }\n\n        return false;\n    }\n\n    NPp.canBeFirstInStatement = function () {\n        var node = this.node;\n        return !n.FunctionExpression.check(node)\n          && !n.ObjectExpression.check(node);\n    };\n\n    NPp.firstInStatement = function () {\n        return firstInStatement(this);\n    };\n\n    function firstInStatement(path) {\n        for (var node, parent; path.parent; path = path.parent) {\n            node = path.node;\n            parent = path.parent.node;\n\n            if (n.BlockStatement.check(parent) &&\n              path.parent.name === \"body\" &&\n              path.name === 0) {\n                if (parent.body[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n\n            if (n.ExpressionStatement.check(parent) &&\n              path.name === \"expression\") {\n                if (parent.expression !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n\n            if (n.SequenceExpression.check(parent) &&\n              path.parent.name === \"expressions\" &&\n              path.name === 0) {\n                if (parent.expressions[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n\n            if (n.CallExpression.check(parent) &&\n              path.name === \"callee\") {\n                if (parent.callee !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n\n            if (n.MemberExpression.check(parent) &&\n              path.name === \"object\") {\n                if (parent.object !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n\n            if (n.ConditionalExpression.check(parent) &&\n              path.name === \"test\") {\n                if (parent.test !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n\n            if (isBinary(parent) &&\n              path.name === \"left\") {\n                if (parent.left !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n\n            if (n.UnaryExpression.check(parent) &&\n              !parent.prefix &&\n              path.name === \"argument\") {\n                if (parent.argument !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.\n     */\n    function cleanUpNodesAfterPrune(remainingNodePath) {\n        if (n.VariableDeclaration.check(remainingNodePath.node)) {\n            var declarations = remainingNodePath.get('declarations').value;\n            if (!declarations || declarations.length === 0) {\n                return remainingNodePath.prune();\n            }\n        } else if (n.ExpressionStatement.check(remainingNodePath.node)) {\n            if (!remainingNodePath.get('expression').value) {\n                return remainingNodePath.prune();\n            }\n        } else if (n.IfStatement.check(remainingNodePath.node)) {\n            cleanUpIfStatementAfterPrune(remainingNodePath);\n        }\n\n        return remainingNodePath;\n    }\n\n    function cleanUpIfStatementAfterPrune(ifStatement) {\n        var testExpression = ifStatement.get('test').value;\n        var alternate = ifStatement.get('alternate').value;\n        var consequent = ifStatement.get('consequent').value;\n\n        if (!consequent && !alternate) {\n            var testExpressionStatement = b.expressionStatement(testExpression);\n\n            ifStatement.replace(testExpressionStatement);\n        } else if (!consequent && alternate) {\n            var negatedTestExpression = b.unaryExpression('!', testExpression, true);\n\n            if (n.UnaryExpression.check(testExpression) && testExpression.operator === '!') {\n                negatedTestExpression = testExpression.argument;\n            }\n\n            ifStatement.get(\"test\").replace(negatedTestExpression);\n            ifStatement.get(\"consequent\").replace(alternate);\n            ifStatement.get(\"alternate\").replace();\n        }\n    }\n\n    return NodePath;\n};\n","var hasOwn = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (fork) {\n    var types = fork.use(require(\"./types\"));\n    var NodePath = fork.use(require(\"./node-path\"));\n    var Printable = types.namedTypes.Printable;\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isFunction = types.builtInTypes.function;\n    var undefined;\n\n    function PathVisitor() {\n        if (!(this instanceof PathVisitor)) {\n            throw new Error(\n              \"PathVisitor constructor cannot be invoked without 'new'\"\n            );\n        }\n\n        // Permanent state.\n        this._reusableContextStack = [];\n\n        this._methodNameTable = computeMethodNameTable(this);\n        this._shouldVisitComments =\n          hasOwn.call(this._methodNameTable, \"Block\") ||\n          hasOwn.call(this._methodNameTable, \"Line\");\n\n        this.Context = makeContextConstructor(this);\n\n        // State reset every time PathVisitor.prototype.visit is called.\n        this._visiting = false;\n        this._changeReported = false;\n    }\n\n    function computeMethodNameTable(visitor) {\n        var typeNames = Object.create(null);\n\n        for (var methodName in visitor) {\n            if (/^visit[A-Z]/.test(methodName)) {\n                typeNames[methodName.slice(\"visit\".length)] = true;\n            }\n        }\n\n        var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n        var methodNameTable = Object.create(null);\n\n        var typeNames = Object.keys(supertypeTable);\n        var typeNameCount = typeNames.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNames[i];\n            methodName = \"visit\" + supertypeTable[typeName];\n            if (isFunction.check(visitor[methodName])) {\n                methodNameTable[typeName] = methodName;\n            }\n        }\n\n        return methodNameTable;\n    }\n\n    PathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n        if (methods instanceof PathVisitor) {\n            return methods;\n        }\n\n        if (!isObject.check(methods)) {\n            // An empty visitor?\n            return new PathVisitor;\n        }\n\n        function Visitor() {\n            if (!(this instanceof Visitor)) {\n                throw new Error(\n                  \"Visitor constructor cannot be invoked without 'new'\"\n                );\n            }\n            PathVisitor.call(this);\n        }\n\n        var Vp = Visitor.prototype = Object.create(PVp);\n        Vp.constructor = Visitor;\n\n        extend(Vp, methods);\n        extend(Visitor, PathVisitor);\n\n        isFunction.assert(Visitor.fromMethodsObject);\n        isFunction.assert(Visitor.visit);\n\n        return new Visitor;\n    };\n\n    function extend(target, source) {\n        for (var property in source) {\n            if (hasOwn.call(source, property)) {\n                target[property] = source[property];\n            }\n        }\n\n        return target;\n    }\n\n    PathVisitor.visit = function visit(node, methods) {\n        return PathVisitor.fromMethodsObject(methods).visit(node);\n    };\n\n    var PVp = PathVisitor.prototype;\n\n    PVp.visit = function () {\n        if (this._visiting) {\n            throw new Error(\n              \"Recursively calling visitor.visit(path) resets visitor state. \" +\n              \"Try this.visit(path) or this.traverse(path) instead.\"\n            );\n        }\n\n        // Private state that needs to be reset before every traversal.\n        this._visiting = true;\n        this._changeReported = false;\n        this._abortRequested = false;\n\n        var argc = arguments.length;\n        var args = new Array(argc)\n        for (var i = 0; i < argc; ++i) {\n            args[i] = arguments[i];\n        }\n\n        if (!(args[0] instanceof NodePath)) {\n            args[0] = new NodePath({root: args[0]}).get(\"root\");\n        }\n\n        // Called with the same arguments as .visit.\n        this.reset.apply(this, args);\n\n        try {\n            var root = this.visitWithoutReset(args[0]);\n            var didNotThrow = true;\n        } finally {\n            this._visiting = false;\n\n            if (!didNotThrow && this._abortRequested) {\n                // If this.visitWithoutReset threw an exception and\n                // this._abortRequested was set to true, return the root of\n                // the AST instead of letting the exception propagate, so that\n                // client code does not have to provide a try-catch block to\n                // intercept the AbortRequest exception.  Other kinds of\n                // exceptions will propagate without being intercepted and\n                // rethrown by a catch block, so their stacks will accurately\n                // reflect the original throwing context.\n                return args[0].value;\n            }\n        }\n\n        return root;\n    };\n\n    PVp.AbortRequest = function AbortRequest() {};\n    PVp.abort = function () {\n        var visitor = this;\n        visitor._abortRequested = true;\n        var request = new visitor.AbortRequest();\n\n        // If you decide to catch this exception and stop it from propagating,\n        // make sure to call its cancel method to avoid silencing other\n        // exceptions that might be thrown later in the traversal.\n        request.cancel = function () {\n            visitor._abortRequested = false;\n        };\n\n        throw request;\n    };\n\n    PVp.reset = function (path/*, additional arguments */) {\n        // Empty stub; may be reassigned or overridden by subclasses.\n    };\n\n    PVp.visitWithoutReset = function (path) {\n        if (this instanceof this.Context) {\n            // Since this.Context.prototype === this, there's a chance we\n            // might accidentally call context.visitWithoutReset. If that\n            // happens, re-invoke the method against context.visitor.\n            return this.visitor.visitWithoutReset(path);\n        }\n\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n\n        var value = path.value;\n\n        var methodName = value &&\n          typeof value === \"object\" &&\n          typeof value.type === \"string\" &&\n          this._methodNameTable[value.type];\n\n        if (methodName) {\n            var context = this.acquireContext(path);\n            try {\n                return context.invokeVisitorMethod(methodName);\n            } finally {\n                this.releaseContext(context);\n            }\n\n        } else {\n            // If there was no visitor method to call, visit the children of\n            // this node generically.\n            return visitChildren(path, this);\n        }\n    };\n\n    function visitChildren(path, visitor) {\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n\n        var value = path.value;\n\n        if (isArray.check(value)) {\n            path.each(visitor.visitWithoutReset, visitor);\n        } else if (!isObject.check(value)) {\n            // No children to visit.\n        } else {\n            var childNames = types.getFieldNames(value);\n\n            // The .comments field of the Node type is hidden, so we only\n            // visit it if the visitor defines visitBlock or visitLine, and\n            // value.comments is defined.\n            if (visitor._shouldVisitComments &&\n              value.comments &&\n              childNames.indexOf(\"comments\") < 0) {\n                childNames.push(\"comments\");\n            }\n\n            var childCount = childNames.length;\n            var childPaths = [];\n\n            for (var i = 0; i < childCount; ++i) {\n                var childName = childNames[i];\n                if (!hasOwn.call(value, childName)) {\n                    value[childName] = types.getFieldValue(value, childName);\n                }\n                childPaths.push(path.get(childName));\n            }\n\n            for (var i = 0; i < childCount; ++i) {\n                visitor.visitWithoutReset(childPaths[i]);\n            }\n        }\n\n        return path.value;\n    }\n\n    PVp.acquireContext = function (path) {\n        if (this._reusableContextStack.length === 0) {\n            return new this.Context(path);\n        }\n        return this._reusableContextStack.pop().reset(path);\n    };\n\n    PVp.releaseContext = function (context) {\n        if (!(context instanceof this.Context)) {\n            throw new Error(\"\");\n        }\n        this._reusableContextStack.push(context);\n        context.currentPath = null;\n    };\n\n    PVp.reportChanged = function () {\n        this._changeReported = true;\n    };\n\n    PVp.wasChangeReported = function () {\n        return this._changeReported;\n    };\n\n    function makeContextConstructor(visitor) {\n        function Context(path) {\n            if (!(this instanceof Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this instanceof PathVisitor)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n\n            Object.defineProperty(this, \"visitor\", {\n                value: visitor,\n                writable: false,\n                enumerable: true,\n                configurable: false\n            });\n\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n\n            Object.seal(this);\n        }\n\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n\n        // Note that the visitor object is the prototype of Context.prototype,\n        // so all visitor methods are inherited by context objects.\n        var Cp = Context.prototype = Object.create(visitor);\n\n        Cp.constructor = Context;\n        extend(Cp, sharedContextProtoMethods);\n\n        return Context;\n    }\n\n// Every PathVisitor has a different this.Context constructor and\n// this.Context.prototype object, but those prototypes can all use the\n// same reset, invokeVisitorMethod, and traverse function objects.\n    var sharedContextProtoMethods = Object.create(null);\n\n    sharedContextProtoMethods.reset =\n      function reset(path) {\n          if (!(this instanceof this.Context)) {\n              throw new Error(\"\");\n          }\n          if (!(path instanceof NodePath)) {\n              throw new Error(\"\");\n          }\n\n          this.currentPath = path;\n          this.needToCallTraverse = true;\n\n          return this;\n      };\n\n    sharedContextProtoMethods.invokeVisitorMethod =\n      function invokeVisitorMethod(methodName) {\n          if (!(this instanceof this.Context)) {\n              throw new Error(\"\");\n          }\n          if (!(this.currentPath instanceof NodePath)) {\n              throw new Error(\"\");\n          }\n\n          var result = this.visitor[methodName].call(this, this.currentPath);\n\n          if (result === false) {\n              // Visitor methods return false to indicate that they have handled\n              // their own traversal needs, and we should not complain if\n              // this.needToCallTraverse is still true.\n              this.needToCallTraverse = false;\n\n          } else if (result !== undefined) {\n              // Any other non-undefined value returned from the visitor method\n              // is interpreted as a replacement value.\n              this.currentPath = this.currentPath.replace(result)[0];\n\n              if (this.needToCallTraverse) {\n                  // If this.traverse still hasn't been called, visit the\n                  // children of the replacement node.\n                  this.traverse(this.currentPath);\n              }\n          }\n\n          if (this.needToCallTraverse !== false) {\n              throw new Error(\n                \"Must either call this.traverse or return false in \" + methodName\n              );\n          }\n\n          var path = this.currentPath;\n          return path && path.value;\n      };\n\n    sharedContextProtoMethods.traverse =\n      function traverse(path, newVisitor) {\n          if (!(this instanceof this.Context)) {\n              throw new Error(\"\");\n          }\n          if (!(path instanceof NodePath)) {\n              throw new Error(\"\");\n          }\n          if (!(this.currentPath instanceof NodePath)) {\n              throw new Error(\"\");\n          }\n\n          this.needToCallTraverse = false;\n\n          return visitChildren(path, PathVisitor.fromMethodsObject(\n            newVisitor || this.visitor\n          ));\n      };\n\n    sharedContextProtoMethods.visit =\n      function visit(path, newVisitor) {\n          if (!(this instanceof this.Context)) {\n              throw new Error(\"\");\n          }\n          if (!(path instanceof NodePath)) {\n              throw new Error(\"\");\n          }\n          if (!(this.currentPath instanceof NodePath)) {\n              throw new Error(\"\");\n          }\n\n          this.needToCallTraverse = false;\n\n          return PathVisitor.fromMethodsObject(\n            newVisitor || this.visitor\n          ).visitWithoutReset(path);\n      };\n\n    sharedContextProtoMethods.reportChanged = function reportChanged() {\n        this.visitor.reportChanged();\n    };\n\n    sharedContextProtoMethods.abort = function abort() {\n        this.needToCallTraverse = false;\n        this.visitor.abort();\n    };\n\n    return PathVisitor;\n};\n","module.exports = function (defs) {\n    var used = [];\n    var usedResult = [];\n    var fork = {};\n\n    function use(plugin) {\n        var idx = used.indexOf(plugin);\n        if (idx === -1) {\n            idx = used.length;\n            used.push(plugin);\n            usedResult[idx] = plugin(fork);\n        }\n        return usedResult[idx];\n    }\n\n    fork.use = use;\n\n    var types = use(require('./lib/types'));\n\n    defs.forEach(use);\n\n    types.finalize();\n\n    var exports = {\n        Type: types.Type,\n        builtInTypes: types.builtInTypes,\n        namedTypes: types.namedTypes,\n        builders: types.builders,\n        defineMethod: types.defineMethod,\n        getFieldNames: types.getFieldNames,\n        getFieldValue: types.getFieldValue,\n        eachField: types.eachField,\n        someField: types.someField,\n        getSupertypeNames: types.getSupertypeNames,\n        astNodesAreEquivalent: use(require(\"./lib/equiv\")),\n        finalize: types.finalize,\n        Path: use(require('./lib/path')),\n        NodePath: use(require(\"./lib/node-path\")),\n        PathVisitor: use(require(\"./lib/path-visitor\")),\n        use: use\n    };\n\n    exports.visit = exports.PathVisitor.visit;\n\n    return exports;\n};","module.exports = function (fork) {\n    var exports = {};\n    var types = fork.use(require(\"../lib/types\"));\n    var Type = types.Type;\n    var builtin = types.builtInTypes;\n    var isNumber = builtin.number;\n\n    // An example of constructing a new type with arbitrary constraints from\n    // an existing type.\n    exports.geq = function (than) {\n        return new Type(function (value) {\n            return isNumber.check(value) && value >= than;\n        }, isNumber + \" >= \" + than);\n    };\n\n    // Default value-returning functions that may optionally be passed as a\n    // third argument to Def.prototype.field.\n    exports.defaults = {\n        // Functions were used because (among other reasons) that's the most\n        // elegant way to allow for the emptyArray one always to give a new\n        // array instance.\n        \"null\": function () { return null },\n        \"emptyArray\": function () { return [] },\n        \"false\": function () { return false },\n        \"true\": function () { return true },\n        \"undefined\": function () {}\n    };\n\n    var naiveIsPrimitive = Type.or(\n      builtin.string,\n      builtin.number,\n      builtin.boolean,\n      builtin.null,\n      builtin.undefined\n    );\n\n    exports.isPrimitive = new Type(function (value) {\n        if (value === null)\n            return true;\n        var type = typeof value;\n        return !(type === \"object\" ||\n        type === \"function\");\n    }, naiveIsPrimitive.toString());\n\n    return exports;\n};","module.exports = function (fork) {\n    var types = fork.use(require(\"../lib/types\"));\n    var Type = types.Type;\n    var def = Type.def;\n    var or = Type.or;\n    var shared = fork.use(require(\"../lib/shared\"));\n    var defaults = shared.defaults;\n    var geq = shared.geq;\n\n    // Abstract supertype of all syntactic entities that are allowed to have a\n    // .loc field.\n    def(\"Printable\")\n        .field(\"loc\", or(\n            def(\"SourceLocation\"),\n            null\n        ), defaults[\"null\"], true);\n\n    def(\"Node\")\n        .bases(\"Printable\")\n        .field(\"type\", String)\n        .field(\"comments\", or(\n            [def(\"Comment\")],\n            null\n        ), defaults[\"null\"], true);\n\n    def(\"SourceLocation\")\n        .build(\"start\", \"end\", \"source\")\n        .field(\"start\", def(\"Position\"))\n        .field(\"end\", def(\"Position\"))\n        .field(\"source\", or(String, null), defaults[\"null\"]);\n\n    def(\"Position\")\n        .build(\"line\", \"column\")\n        .field(\"line\", geq(1))\n        .field(\"column\", geq(0));\n\n    def(\"File\")\n        .bases(\"Node\")\n        .build(\"program\", \"name\")\n        .field(\"program\", def(\"Program\"))\n        .field(\"name\", or(String, null), defaults[\"null\"]);\n\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n\n    def(\"Function\")\n        .bases(\"Node\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"));\n\n    def(\"Statement\").bases(\"Node\");\n\n// The empty .build() here means that an EmptyStatement can be constructed\n// (i.e. it's not abstract) but that it needs no arguments.\n    def(\"EmptyStatement\").bases(\"Statement\").build();\n\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n\n    // TODO Figure out how to silently coerce Expressions to\n    // ExpressionStatements where a Statement was expected.\n    def(\"ExpressionStatement\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n\n    def(\"IfStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Statement\"))\n        .field(\"alternate\", or(def(\"Statement\"), null), defaults[\"null\"]);\n\n    def(\"LabeledStatement\")\n        .bases(\"Statement\")\n        .build(\"label\", \"body\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"body\", def(\"Statement\"));\n\n    def(\"BreakStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\n    def(\"ContinueStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\n    def(\"WithStatement\")\n        .bases(\"Statement\")\n        .build(\"object\", \"body\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n\n    def(\"SwitchStatement\")\n        .bases(\"Statement\")\n        .build(\"discriminant\", \"cases\", \"lexical\")\n        .field(\"discriminant\", def(\"Expression\"))\n        .field(\"cases\", [def(\"SwitchCase\")])\n        .field(\"lexical\", Boolean, defaults[\"false\"]);\n\n    def(\"ReturnStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", or(def(\"Expression\"), null));\n\n    def(\"ThrowStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n\n    def(\"TryStatement\")\n        .bases(\"Statement\")\n        .build(\"block\", \"handler\", \"finalizer\")\n        .field(\"block\", def(\"BlockStatement\"))\n        .field(\"handler\", or(def(\"CatchClause\"), null), function () {\n            return this.handlers && this.handlers[0] || null;\n        })\n        .field(\"handlers\", [def(\"CatchClause\")], function () {\n            return this.handler ? [this.handler] : [];\n        }, true) // Indicates this field is hidden from eachField iteration.\n        .field(\"guardedHandlers\", [def(\"CatchClause\")], defaults.emptyArray)\n        .field(\"finalizer\", or(def(\"BlockStatement\"), null), defaults[\"null\"]);\n\n    def(\"CatchClause\")\n        .bases(\"Node\")\n        .build(\"param\", \"guard\", \"body\")\n        // https://github.com/tc39/proposal-optional-catch-binding\n        .field(\"param\", or(def(\"Pattern\"), null), defaults[\"null\"])\n        .field(\"guard\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"BlockStatement\"));\n\n    def(\"WhileStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"body\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n\n    def(\"DoWhileStatement\")\n        .bases(\"Statement\")\n        .build(\"body\", \"test\")\n        .field(\"body\", def(\"Statement\"))\n        .field(\"test\", def(\"Expression\"));\n\n    def(\"ForStatement\")\n        .bases(\"Statement\")\n        .build(\"init\", \"test\", \"update\", \"body\")\n        .field(\"init\", or(\n            def(\"VariableDeclaration\"),\n            def(\"Expression\"),\n            null))\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"update\", or(def(\"Expression\"), null))\n        .field(\"body\", def(\"Statement\"));\n\n    def(\"ForInStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(\n            def(\"VariableDeclaration\"),\n            def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n\n    def(\"DebuggerStatement\").bases(\"Statement\").build();\n\n    def(\"Declaration\").bases(\"Statement\");\n\n    def(\"FunctionDeclaration\")\n        .bases(\"Function\", \"Declaration\")\n        .build(\"id\", \"params\", \"body\")\n        .field(\"id\", def(\"Identifier\"));\n\n    def(\"FunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"id\", \"params\", \"body\");\n\n    def(\"VariableDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"declarations\")\n        .field(\"kind\", or(\"var\", \"let\", \"const\"))\n        .field(\"declarations\", [def(\"VariableDeclarator\")]);\n\n    def(\"VariableDeclarator\")\n        .bases(\"Node\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Pattern\"))\n        .field(\"init\", or(def(\"Expression\"), null));\n\n    // TODO Are all Expressions really Patterns?\n    def(\"Expression\").bases(\"Node\", \"Pattern\");\n\n    def(\"ThisExpression\").bases(\"Expression\").build();\n\n    def(\"ArrayExpression\")\n        .bases(\"Expression\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Expression\"), null)]);\n\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [def(\"Property\")]);\n\n    // TODO Not in the Mozilla Parser API, but used by Esprima.\n    def(\"Property\")\n        .bases(\"Node\") // Want to be able to visit Property Nodes.\n        .build(\"kind\", \"key\", \"value\")\n        .field(\"kind\", or(\"init\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"Expression\"));\n\n    def(\"SequenceExpression\")\n        .bases(\"Expression\")\n        .build(\"expressions\")\n        .field(\"expressions\", [def(\"Expression\")]);\n\n    var UnaryOperator = or(\n        \"-\", \"+\", \"!\", \"~\",\n        \"typeof\", \"void\", \"delete\");\n\n    def(\"UnaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UnaryOperator)\n        .field(\"argument\", def(\"Expression\"))\n        // Esprima doesn't bother with this field, presumably because it's\n        // always true for unary operators.\n        .field(\"prefix\", Boolean, defaults[\"true\"]);\n\n    var BinaryOperator = or(\n        \"==\", \"!=\", \"===\", \"!==\",\n        \"<\", \"<=\", \">\", \">=\",\n        \"<<\", \">>\", \">>>\",\n        \"+\", \"-\", \"*\", \"/\", \"%\", \"**\",\n        \"&\", // TODO Missing from the Parser API.\n        \"|\", \"^\", \"in\",\n        \"instanceof\", \"..\");\n\n    def(\"BinaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", BinaryOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n\n    var AssignmentOperator = or(\n        \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n        \"<<=\", \">>=\", \">>>=\",\n        \"|=\", \"^=\", \"&=\");\n\n    def(\"AssignmentExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", AssignmentOperator)\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"));\n\n    var UpdateOperator = or(\"++\", \"--\");\n\n    def(\"UpdateExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UpdateOperator)\n        .field(\"argument\", def(\"Expression\"))\n        .field(\"prefix\", Boolean);\n\n    var LogicalOperator = or(\"||\", \"&&\");\n\n    def(\"LogicalExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", LogicalOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n\n    def(\"ConditionalExpression\")\n        .bases(\"Expression\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Expression\"))\n        .field(\"alternate\", def(\"Expression\"));\n\n    def(\"NewExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // The Mozilla Parser API gives this type as [or(def(\"Expression\"),\n        // null)], but null values don't really make sense at the call site.\n        // TODO Report this nonsense.\n        .field(\"arguments\", [def(\"Expression\")]);\n\n    def(\"CallExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // See comment for NewExpression above.\n        .field(\"arguments\", [def(\"Expression\")]);\n\n    def(\"MemberExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"property\", \"computed\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, function () {\n            var type = this.property.type;\n            if (type === 'Literal' ||\n                type === 'MemberExpression' ||\n                type === 'BinaryExpression') {\n                return true;\n            }\n            return false;\n        });\n\n    def(\"Pattern\").bases(\"Node\");\n\n    def(\"SwitchCase\")\n        .bases(\"Node\")\n        .build(\"test\", \"consequent\")\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"consequent\", [def(\"Statement\")]);\n\n    def(\"Identifier\")\n        // But aren't Expressions and Patterns already Nodes? TODO Report this.\n        .bases(\"Node\", \"Expression\", \"Pattern\")\n        .build(\"name\")\n        .field(\"name\", String)\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n\n    def(\"Literal\")\n        // But aren't Expressions already Nodes? TODO Report this.\n        .bases(\"Node\", \"Expression\")\n        .build(\"value\")\n        .field(\"value\", or(String, Boolean, null, Number, RegExp))\n        .field(\"regex\", or({\n            pattern: String,\n            flags: String\n        }, null), function () {\n            if (this.value instanceof RegExp) {\n                var flags = \"\";\n\n                if (this.value.ignoreCase) flags += \"i\";\n                if (this.value.multiline) flags += \"m\";\n                if (this.value.global) flags += \"g\";\n\n                return {\n                    pattern: this.value.source,\n                    flags: flags\n                };\n            }\n\n            return null;\n        });\n\n    // Abstract (non-buildable) comment supertype. Not a Node.\n    def(\"Comment\")\n        .bases(\"Printable\")\n        .field(\"value\", String)\n        // A .leading comment comes before the node, whereas a .trailing\n        // comment comes after it. These two fields should not both be true,\n        // but they might both be false when the comment falls inside a node\n        // and the node has no children for the comment to lead or trail,\n        // e.g. { /*dangling*/ }.\n        .field(\"leading\", Boolean, defaults[\"true\"])\n        .field(\"trailing\", Boolean, defaults[\"false\"]);\n};\n","module.exports = function (fork) {\n  fork.use(require(\"./core\"));\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  def(\"Function\")\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"expression\", Boolean, defaults[\"false\"])\n    .field(\"defaults\", [or(def(\"Expression\"), null)], defaults.emptyArray)\n    // TODO This could be represented as a RestElement in .params.\n    .field(\"rest\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\n  // The ESTree way of representing a ...rest parameter.\n  def(\"RestElement\")\n    .bases(\"Pattern\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Pattern\"))\n    .field(\"typeAnnotation\", // for Babylon. Flow parser puts it on the identifier\n      or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n\n  def(\"SpreadElementPattern\")\n    .bases(\"Pattern\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Pattern\"));\n\n  def(\"FunctionDeclaration\")\n    .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n\n  def(\"FunctionExpression\")\n    .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n\n  // The Parser API calls this ArrowExpression, but Esprima and all other\n  // actual parsers use ArrowFunctionExpression.\n  def(\"ArrowFunctionExpression\")\n    .bases(\"Function\", \"Expression\")\n    .build(\"params\", \"body\", \"expression\")\n    // The forced null value here is compatible with the overridden\n    // definition of the \"id\" field in the Function interface.\n    .field(\"id\", null, defaults[\"null\"])\n    // Arrow function bodies are allowed to be expressions.\n    .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")))\n    // The current spec forbids arrow generators, so I have taken the\n    // liberty of enforcing that. TODO Report this.\n    .field(\"generator\", false, defaults[\"false\"]);\n\n  def(\"ForOfStatement\")\n    .bases(\"Statement\")\n    .build(\"left\", \"right\", \"body\")\n    .field(\"left\", or(\n      def(\"VariableDeclaration\"),\n      def(\"Pattern\")))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"));\n\n  def(\"YieldExpression\")\n    .bases(\"Expression\")\n    .build(\"argument\", \"delegate\")\n    .field(\"argument\", or(def(\"Expression\"), null))\n    .field(\"delegate\", Boolean, defaults[\"false\"]);\n\n  def(\"GeneratorExpression\")\n    .bases(\"Expression\")\n    .build(\"body\", \"blocks\", \"filter\")\n    .field(\"body\", def(\"Expression\"))\n    .field(\"blocks\", [def(\"ComprehensionBlock\")])\n    .field(\"filter\", or(def(\"Expression\"), null));\n\n  def(\"ComprehensionExpression\")\n    .bases(\"Expression\")\n    .build(\"body\", \"blocks\", \"filter\")\n    .field(\"body\", def(\"Expression\"))\n    .field(\"blocks\", [def(\"ComprehensionBlock\")])\n    .field(\"filter\", or(def(\"Expression\"), null));\n\n  def(\"ComprehensionBlock\")\n    .bases(\"Node\")\n    .build(\"left\", \"right\", \"each\")\n    .field(\"left\", def(\"Pattern\"))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"each\", Boolean);\n\n  def(\"Property\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n    .field(\"method\", Boolean, defaults[\"false\"])\n    .field(\"shorthand\", Boolean, defaults[\"false\"])\n    .field(\"computed\", Boolean, defaults[\"false\"]);\n\n  def(\"PropertyPattern\")\n    .bases(\"Pattern\")\n    .build(\"key\", \"pattern\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"pattern\", def(\"Pattern\"))\n    .field(\"computed\", Boolean, defaults[\"false\"]);\n\n  def(\"ObjectPattern\")\n    .bases(\"Pattern\")\n    .build(\"properties\")\n    .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"))]);\n\n  def(\"ArrayPattern\")\n    .bases(\"Pattern\")\n    .build(\"elements\")\n    .field(\"elements\", [or(def(\"Pattern\"), null)]);\n\n  def(\"MethodDefinition\")\n    .bases(\"Declaration\")\n    .build(\"kind\", \"key\", \"value\", \"static\")\n    .field(\"kind\", or(\"constructor\", \"method\", \"get\", \"set\"))\n    .field(\"key\", def(\"Expression\"))\n    .field(\"value\", def(\"Function\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"static\", Boolean, defaults[\"false\"]);\n\n  def(\"SpreadElement\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"ArrayExpression\")\n    .field(\"elements\", [or(\n      def(\"Expression\"),\n      def(\"SpreadElement\"),\n      def(\"RestElement\"),\n      null\n    )]);\n\n  def(\"NewExpression\")\n    .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n\n  def(\"CallExpression\")\n    .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n\n  // Note: this node type is *not* an AssignmentExpression with a Pattern on\n  // the left-hand side! The existing AssignmentExpression type already\n  // supports destructuring assignments. AssignmentPattern nodes may appear\n  // wherever a Pattern is allowed, and the right-hand side represents a\n  // default value to be destructured against the left-hand side, if no\n  // value is otherwise provided. For example: default parameter values.\n  def(\"AssignmentPattern\")\n    .bases(\"Pattern\")\n    .build(\"left\", \"right\")\n    .field(\"left\", def(\"Pattern\"))\n    .field(\"right\", def(\"Expression\"));\n\n  var ClassBodyElement = or(\n    def(\"MethodDefinition\"),\n    def(\"VariableDeclarator\"),\n    def(\"ClassPropertyDefinition\"),\n    def(\"ClassProperty\")\n  );\n\n  def(\"ClassProperty\")\n    .bases(\"Declaration\")\n    .build(\"key\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"computed\", Boolean, defaults[\"false\"]);\n\n  def(\"ClassPropertyDefinition\") // static property\n    .bases(\"Declaration\")\n    .build(\"definition\")\n    // Yes, Virginia, circular definitions are permitted.\n    .field(\"definition\", ClassBodyElement);\n\n  def(\"ClassBody\")\n    .bases(\"Declaration\")\n    .build(\"body\")\n    .field(\"body\", [ClassBodyElement]);\n\n  def(\"ClassDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"body\", \"superClass\")\n    .field(\"id\", or(def(\"Identifier\"), null))\n    .field(\"body\", def(\"ClassBody\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n\n  def(\"ClassExpression\")\n    .bases(\"Expression\")\n    .build(\"id\", \"body\", \"superClass\")\n    .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n    .field(\"body\", def(\"ClassBody\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n\n  // Specifier and ModuleSpecifier are abstract non-standard types\n  // introduced for definitional convenience.\n  def(\"Specifier\").bases(\"Node\");\n\n  // This supertype is shared/abused by both def/babel.js and\n  // def/esprima.js. In the future, it will be possible to load only one set\n  // of definitions appropriate for a given parser, but until then we must\n  // rely on default functions to reconcile the conflicting AST formats.\n  def(\"ModuleSpecifier\")\n    .bases(\"Specifier\")\n    // This local field is used by Babel/Acorn. It should not technically\n    // be optional in the Babel/Acorn AST format, but it must be optional\n    // in the Esprima AST format.\n    .field(\"local\", or(def(\"Identifier\"), null), defaults[\"null\"])\n    // The id and name fields are used by Esprima. The id field should not\n    // technically be optional in the Esprima AST format, but it must be\n    // optional in the Babel/Acorn AST format.\n    .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n    .field(\"name\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n\n  // Like ModuleSpecifier, except type:\"ImportSpecifier\" and buildable.\n  // import {<id [as name]>} from ...;\n  def(\"ImportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"id\", \"name\");\n\n  // import <* as id> from ...;\n  def(\"ImportNamespaceSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"id\");\n\n  // import <id> from ...;\n  def(\"ImportDefaultSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"id\");\n\n  def(\"ImportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"specifiers\", \"source\", \"importKind\")\n    .field(\"specifiers\", [or(\n      def(\"ImportSpecifier\"),\n      def(\"ImportNamespaceSpecifier\"),\n      def(\"ImportDefaultSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", def(\"Literal\"))\n    .field(\"importKind\", or(\n      \"value\",\n      \"type\"\n    ), function() {\n      return \"value\";\n    });\n\n  def(\"TaggedTemplateExpression\")\n    .bases(\"Expression\")\n    .build(\"tag\", \"quasi\")\n    .field(\"tag\", def(\"Expression\"))\n    .field(\"quasi\", def(\"TemplateLiteral\"));\n\n  def(\"TemplateLiteral\")\n    .bases(\"Expression\")\n    .build(\"quasis\", \"expressions\")\n    .field(\"quasis\", [def(\"TemplateElement\")])\n    .field(\"expressions\", [def(\"Expression\")]);\n\n  def(\"TemplateElement\")\n    .bases(\"Node\")\n    .build(\"value\", \"tail\")\n    .field(\"value\", {\"cooked\": String, \"raw\": String})\n    .field(\"tail\", Boolean);\n};\n","module.exports = function (fork) {\n  fork.use(require('./es6'));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var builtin = types.builtInTypes;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  def(\"Function\")\n    .field(\"async\", Boolean, defaults[\"false\"]);\n\n  def(\"SpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"ObjectExpression\")\n    .field(\"properties\", [or(\n      def(\"Property\"),\n      def(\"SpreadProperty\"),\n      def(\"SpreadElement\")\n    )]);\n\n  def(\"SpreadPropertyPattern\")\n    .bases(\"Pattern\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Pattern\"));\n\n  def(\"ObjectPattern\")\n    .field(\"properties\", [or(\n      def(\"Property\"),\n      def(\"PropertyPattern\"),\n      def(\"SpreadPropertyPattern\")\n    )]);\n\n  def(\"AwaitExpression\")\n    .bases(\"Expression\")\n    .build(\"argument\", \"all\")\n    .field(\"argument\", or(def(\"Expression\"), null))\n    .field(\"all\", Boolean, defaults[\"false\"]);\n};\n","module.exports = function (fork) {\n    fork.use(require(\"./core\"));\n    var types = fork.use(require(\"../lib/types\"));\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var shared = fork.use(require(\"../lib/shared\"));\n    var geq = shared.geq;\n    var defaults = shared.defaults;\n\n    def(\"Function\")\n        // SpiderMonkey allows expression closures: function(x) x+1\n        .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")));\n\n    def(\"ForInStatement\")\n        .build(\"left\", \"right\", \"body\", \"each\")\n        .field(\"each\", Boolean, defaults[\"false\"]);\n\n    def(\"LetStatement\")\n        .bases(\"Statement\")\n        .build(\"head\", \"body\")\n        // TODO Deviating from the spec by reusing VariableDeclarator here.\n        .field(\"head\", [def(\"VariableDeclarator\")])\n        .field(\"body\", def(\"Statement\"));\n\n    def(\"LetExpression\")\n        .bases(\"Expression\")\n        .build(\"head\", \"body\")\n        // TODO Deviating from the spec by reusing VariableDeclarator here.\n        .field(\"head\", [def(\"VariableDeclarator\")])\n        .field(\"body\", def(\"Expression\"));\n\n    def(\"GraphExpression\")\n        .bases(\"Expression\")\n        .build(\"index\", \"expression\")\n        .field(\"index\", geq(0))\n        .field(\"expression\", def(\"Literal\"));\n\n    def(\"GraphIndexExpression\")\n        .bases(\"Expression\")\n        .build(\"index\")\n        .field(\"index\", geq(0));\n};","module.exports = function (fork) {\n    fork.use(require(\"./core\"));\n    var types = fork.use(require(\"../lib/types\"));\n    var def = types.Type.def;\n    var or = types.Type.or;\n\n    // Note that none of these types are buildable because the Mozilla Parser\n    // API doesn't specify any builder functions, and nobody uses E4X anymore.\n\n    def(\"XMLDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .field(\"namespace\", def(\"Expression\"));\n\n    def(\"XMLAnyName\").bases(\"Expression\");\n\n    def(\"XMLQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"left\", or(def(\"Identifier\"), def(\"XMLAnyName\")))\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLFunctionQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLAttributeSelector\")\n        .bases(\"Expression\")\n        .field(\"attribute\", def(\"Expression\"));\n\n    def(\"XMLFilterExpression\")\n        .bases(\"Expression\")\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n\n    def(\"XMLElement\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLList\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XML\").bases(\"Node\");\n\n    def(\"XMLEscape\")\n        .bases(\"XML\")\n        .field(\"expression\", def(\"Expression\"));\n\n    def(\"XMLText\")\n        .bases(\"XML\")\n        .field(\"text\", String);\n\n    def(\"XMLStartTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLEndTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLPointTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLName\")\n        .bases(\"XML\")\n        .field(\"contents\", or(String, [def(\"XML\")]));\n\n    def(\"XMLAttribute\")\n        .bases(\"XML\")\n        .field(\"value\", String);\n\n    def(\"XMLCdata\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLComment\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLProcessingInstruction\")\n        .bases(\"XML\")\n        .field(\"target\", String)\n        .field(\"contents\", or(String, null));\n};","module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  def(\"JSXAttribute\")\n    .bases(\"Node\")\n    .build(\"name\", \"value\")\n    .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n    .field(\"value\", or(\n      def(\"Literal\"), // attr=\"value\"\n      def(\"JSXExpressionContainer\"), // attr={value}\n      null // attr= or just attr\n    ), defaults[\"null\"]);\n\n  def(\"JSXIdentifier\")\n    .bases(\"Identifier\")\n    .build(\"name\")\n    .field(\"name\", String);\n\n  def(\"JSXNamespacedName\")\n    .bases(\"Node\")\n    .build(\"namespace\", \"name\")\n    .field(\"namespace\", def(\"JSXIdentifier\"))\n    .field(\"name\", def(\"JSXIdentifier\"));\n\n  def(\"JSXMemberExpression\")\n    .bases(\"MemberExpression\")\n    .build(\"object\", \"property\")\n    .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n    .field(\"property\", def(\"JSXIdentifier\"))\n    .field(\"computed\", Boolean, defaults.false);\n\n  var JSXElementName = or(\n    def(\"JSXIdentifier\"),\n    def(\"JSXNamespacedName\"),\n    def(\"JSXMemberExpression\")\n  );\n\n  def(\"JSXSpreadAttribute\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  var JSXAttributes = [or(\n    def(\"JSXAttribute\"),\n    def(\"JSXSpreadAttribute\")\n  )];\n\n  def(\"JSXExpressionContainer\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"JSXElement\")\n    .bases(\"Expression\")\n    .build(\"openingElement\", \"closingElement\", \"children\")\n    .field(\"openingElement\", def(\"JSXOpeningElement\"))\n    .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n    .field(\"children\", [or(\n      def(\"JSXElement\"),\n      def(\"JSXExpressionContainer\"),\n      def(\"JSXFragment\"),\n      def(\"JSXText\"),\n      def(\"Literal\") // TODO Esprima should return JSXText instead.\n    )], defaults.emptyArray)\n    .field(\"name\", JSXElementName, function () {\n      // Little-known fact: the `this` object inside a default function\n      // is none other than the partially-built object itself, and any\n      // fields initialized directly from builder function arguments\n      // (like openingElement, closingElement, and children) are\n      // guaranteed to be available.\n      return this.openingElement.name;\n    }, true) // hidden from traversal\n    .field(\"selfClosing\", Boolean, function () {\n      return this.openingElement.selfClosing;\n    }, true) // hidden from traversal\n    .field(\"attributes\", JSXAttributes, function () {\n      return this.openingElement.attributes;\n    }, true); // hidden from traversal\n\n  def(\"JSXOpeningElement\")\n    .bases(\"Node\") // TODO Does this make sense? Can't really be an JSXElement.\n    .build(\"name\", \"attributes\", \"selfClosing\")\n    .field(\"name\", JSXElementName)\n    .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n    .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n\n  def(\"JSXClosingElement\")\n    .bases(\"Node\") // TODO Same concern.\n    .build(\"name\")\n    .field(\"name\", JSXElementName);\n\n  def(\"JSXFragment\")\n    .bases(\"Expression\")\n    .build(\"openingElement\", \"closingElement\", \"children\")\n    .field(\"openingElement\", def(\"JSXOpeningFragment\"))\n    .field(\"closingElement\", def(\"JSXClosingFragment\"))\n    .field(\"children\", [or(\n      def(\"JSXElement\"),\n      def(\"JSXExpressionContainer\"),\n      def(\"JSXFragment\"),\n      def(\"JSXText\"),\n      def(\"Literal\") // TODO Esprima should return JSXText instead.\n    )], defaults.emptyArray)\n\n  def(\"JSXOpeningFragment\")\n    .bases(\"Node\") // TODO Same concern.\n    .build();\n\n  def(\"JSXClosingFragment\")\n    .bases(\"Node\") // TODO Same concern.\n    .build();\n\n  def(\"JSXText\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", String);\n\n  def(\"JSXEmptyExpression\").bases(\"Expression\").build();\n\n  // This PR has caused many people issues, but supporting it seems like a\n  // good idea anyway: https://github.com/babel/babel/pull/4988\n  def(\"JSXSpreadChild\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n};\n","module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  // Base types\n\n  def(\"Flow\").bases(\"Node\");\n  def(\"FlowType\").bases(\"Flow\");\n\n  // Type annotations\n\n  def(\"AnyTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"EmptyTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"MixedTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"VoidTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"NumberTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"NumberLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", Number)\n    .field(\"raw\", String);\n\n  // Babylon 6 differs in AST from Flow\n  // same as NumberLiteralTypeAnnotation\n  def(\"NumericLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", Number)\n    .field(\"raw\", String);\n\n  def(\"StringTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"StringLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", String)\n    .field(\"raw\", String);\n\n  def(\"BooleanTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"BooleanLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"value\", \"raw\")\n    .field(\"value\", Boolean)\n    .field(\"raw\", String);\n\n  def(\"TypeAnnotation\")\n    .bases(\"Node\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"FlowType\"));\n\n  def(\"NullableTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"FlowType\"));\n\n  def(\"NullLiteralTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"NullTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"ThisTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"ExistsTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"ExistentialTypeParam\")\n    .bases(\"FlowType\")\n    .build();\n\n  def(\"FunctionTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n    .field(\"params\", [def(\"FunctionTypeParam\")])\n    .field(\"returnType\", def(\"FlowType\"))\n    .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n    .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n\n  def(\"FunctionTypeParam\")\n    .bases(\"Node\")\n    .build(\"name\", \"typeAnnotation\", \"optional\")\n    .field(\"name\", def(\"Identifier\"))\n    .field(\"typeAnnotation\", def(\"FlowType\"))\n    .field(\"optional\", Boolean);\n\n  def(\"ArrayTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"elementType\")\n    .field(\"elementType\", def(\"FlowType\"));\n\n  def(\"ObjectTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"properties\", \"indexers\", \"callProperties\")\n    .field(\"properties\", [\n      or(def(\"ObjectTypeProperty\"),\n         def(\"ObjectTypeSpreadProperty\"))\n    ])\n    .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n    .field(\"callProperties\",\n           [def(\"ObjectTypeCallProperty\")],\n           defaults.emptyArray)\n    .field(\"exact\", Boolean, defaults[\"false\"]);\n\n  def(\"Variance\")\n    .bases(\"Node\")\n    .build(\"kind\")\n    .field(\"kind\", or(\"plus\", \"minus\"));\n\n  var LegacyVariance = or(\n    def(\"Variance\"),\n    \"plus\",\n    \"minus\",\n    null\n  );\n\n  def(\"ObjectTypeProperty\")\n    .bases(\"Node\")\n    .build(\"key\", \"value\", \"optional\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n    .field(\"value\", def(\"FlowType\"))\n    .field(\"optional\", Boolean)\n    .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n\n  def(\"ObjectTypeIndexer\")\n    .bases(\"Node\")\n    .build(\"id\", \"key\", \"value\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"key\", def(\"FlowType\"))\n    .field(\"value\", def(\"FlowType\"))\n    .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n\n  def(\"ObjectTypeCallProperty\")\n    .bases(\"Node\")\n    .build(\"value\")\n    .field(\"value\", def(\"FunctionTypeAnnotation\"))\n    .field(\"static\", Boolean, defaults[\"false\"]);\n\n  def(\"QualifiedTypeIdentifier\")\n    .bases(\"Node\")\n    .build(\"qualification\", \"id\")\n    .field(\"qualification\",\n           or(def(\"Identifier\"),\n              def(\"QualifiedTypeIdentifier\")))\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"GenericTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"id\", \"typeParameters\")\n    .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n    .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n\n  def(\"MemberTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"object\", \"property\")\n    .field(\"object\", def(\"Identifier\"))\n    .field(\"property\",\n           or(def(\"MemberTypeAnnotation\"),\n              def(\"GenericTypeAnnotation\")));\n\n  def(\"UnionTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"types\")\n    .field(\"types\", [def(\"FlowType\")]);\n\n  def(\"IntersectionTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"types\")\n    .field(\"types\", [def(\"FlowType\")]);\n\n  def(\"TypeofTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"FlowType\"));\n\n  def(\"ObjectTypeSpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"FlowType\"));\n\n  def(\"Identifier\")\n    .field(\"typeAnnotation\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"]);\n\n  def(\"ObjectPattern\")\n    .field(\"typeAnnotation\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"]);\n\n  def(\"TypeParameterDeclaration\")\n    .bases(\"Node\")\n    .build(\"params\")\n    .field(\"params\", [def(\"TypeParameter\")]);\n\n  def(\"TypeParameterInstantiation\")\n    .bases(\"Node\")\n    .build(\"params\")\n    .field(\"params\", [def(\"FlowType\")]);\n\n  def(\"TypeParameter\")\n    .bases(\"FlowType\")\n    .build(\"name\", \"variance\", \"bound\")\n    .field(\"name\", String)\n    .field(\"variance\", LegacyVariance, defaults[\"null\"])\n    .field(\"bound\",\n           or(def(\"TypeAnnotation\"), null),\n           defaults[\"null\"]);\n\n  def(\"Function\")\n    .field(\"returnType\",\n           or(def(\"TypeAnnotation\"), null),\n           defaults[\"null\"])\n    .field(\"typeParameters\",\n           or(def(\"TypeParameterDeclaration\"), null),\n           defaults[\"null\"]);\n\n  def(\"ClassProperty\")\n    .build(\"key\", \"value\", \"typeAnnotation\", \"static\")\n    .field(\"value\", or(def(\"Expression\"), null))\n    .field(\"typeAnnotation\", or(def(\"TypeAnnotation\"), null))\n    .field(\"static\", Boolean, defaults[\"false\"])\n    .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n\n  [\"ClassDeclaration\",\n   \"ClassExpression\",\n  ].forEach(typeName => {\n    def(typeName)\n      .field(\"typeParameters\",\n             or(def(\"TypeParameterDeclaration\"), null),\n             defaults[\"null\"])\n      .field(\"superTypeParameters\",\n             or([def(\"GenericTypeAnnotation\")], null),\n             defaults[\"null\"]);\n  });\n\n  def(\"ClassImplements\")\n    .bases(\"Node\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n    .field(\"typeParameters\",\n           or(def(\"TypeParameterInstantiation\"), null),\n           defaults[\"null\"]);\n\n  [\"ClassDeclaration\",\n   \"ClassExpression\",\n  ].forEach(typeName => {\n    def(typeName)\n      .field(\"implements\", [def(\"ClassImplements\")], defaults.emptyArray);\n  });\n\n  def(\"InterfaceDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"body\", \"extends\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\",\n           or(def(\"TypeParameterDeclaration\"), null),\n           defaults[\"null\"])\n    .field(\"body\", def(\"ObjectTypeAnnotation\"))\n    .field(\"extends\", [def(\"InterfaceExtends\")]);\n\n  def(\"DeclareInterface\")\n    .bases(\"InterfaceDeclaration\")\n    .build(\"id\", \"body\", \"extends\");\n\n  def(\"InterfaceExtends\")\n    .bases(\"Node\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n\n  def(\"TypeAlias\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"typeParameters\", \"right\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n    .field(\"right\", def(\"FlowType\"));\n\n  def(\"OpaqueType\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n    .field(\"implType\", def(\"FlowType\"))\n    .field(\"superType\", def(\"FlowType\"));\n\n  def(\"DeclareTypeAlias\")\n    .bases(\"TypeAlias\")\n    .build(\"id\", \"typeParameters\", \"right\");\n\n  def(\"DeclareOpaqueType\")\n    .bases(\"TypeAlias\")\n    .build(\"id\", \"typeParameters\", \"supertype\");\n\n  def(\"TypeCastExpression\")\n    .bases(\"Expression\")\n    .build(\"expression\", \"typeAnnotation\")\n    .field(\"expression\", def(\"Expression\"))\n    .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n\n  def(\"TupleTypeAnnotation\")\n    .bases(\"FlowType\")\n    .build(\"types\")\n    .field(\"types\", [def(\"FlowType\")]);\n\n  def(\"DeclareVariable\")\n    .bases(\"Statement\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"DeclareFunction\")\n    .bases(\"Statement\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"DeclareClass\")\n    .bases(\"InterfaceDeclaration\")\n    .build(\"id\");\n\n  def(\"DeclareModule\")\n    .bases(\"Statement\")\n    .build(\"id\", \"body\")\n    .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n    .field(\"body\", def(\"BlockStatement\"));\n\n  def(\"DeclareModuleExports\")\n    .bases(\"Statement\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n\n  def(\"DeclareExportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n    .field(\"default\", Boolean)\n    .field(\"declaration\", or(\n      def(\"DeclareVariable\"),\n      def(\"DeclareFunction\"),\n      def(\"DeclareClass\"),\n      def(\"FlowType\"), // Implies default.\n      null\n    ))\n    .field(\"specifiers\", [or(\n      def(\"ExportSpecifier\"),\n      def(\"ExportBatchSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", or(\n      def(\"Literal\"),\n      null\n    ), defaults[\"null\"]);\n\n  def(\"DeclareExportAllDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"source\")\n    .field(\"source\", or(\n      def(\"Literal\"),\n      null\n    ), defaults[\"null\"]);\n\n  def(\"FlowPredicate\").bases(\"Flow\");\n\n  def(\"InferredPredicate\")\n    .bases(\"FlowPredicate\")\n    .build();\n\n  def(\"DeclaredPredicate\")\n    .bases(\"FlowPredicate\")\n    .build(\"value\")\n    .field(\"value\", def(\"Expression\"));\n};\n","module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n  var def = types.Type.def;\n  var or = types.Type.or;\n\n  def(\"VariableDeclaration\")\n    .field(\"declarations\", [or(\n      def(\"VariableDeclarator\"),\n      def(\"Identifier\") // Esprima deviation.\n    )]);\n\n  def(\"Property\")\n    .field(\"value\", or(\n      def(\"Expression\"),\n      def(\"Pattern\") // Esprima deviation.\n    ));\n\n  def(\"ArrayPattern\")\n    .field(\"elements\", [or(\n      def(\"Pattern\"),\n      def(\"SpreadElement\"),\n      null\n    )]);\n\n  def(\"ObjectPattern\")\n    .field(\"properties\", [or(\n      def(\"Property\"),\n      def(\"PropertyPattern\"),\n      def(\"SpreadPropertyPattern\"),\n      def(\"SpreadProperty\") // Used by Esprima.\n    )]);\n\n  // Like ModuleSpecifier, except type:\"ExportSpecifier\" and buildable.\n  // export {<id [as name]>} [from ...];\n  def(\"ExportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"id\", \"name\");\n\n  // export <*> from ...;\n  def(\"ExportBatchSpecifier\")\n    .bases(\"Specifier\")\n    .build();\n\n  def(\"ExportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n    .field(\"default\", Boolean)\n    .field(\"declaration\", or(\n      def(\"Declaration\"),\n      def(\"Expression\"), // Implies default.\n      null\n    ))\n    .field(\"specifiers\", [or(\n      def(\"ExportSpecifier\"),\n      def(\"ExportBatchSpecifier\")\n    )], defaults.emptyArray)\n    .field(\"source\", or(\n      def(\"Literal\"),\n      null\n    ), defaults[\"null\"]);\n\n  def(\"Block\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n\n  def(\"Line\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n};\n","module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n  var def = types.Type.def;\n  var or = types.Type.or;\n\n  def(\"Noop\")\n    .bases(\"Statement\")\n    .build();\n\n  def(\"DoExpression\")\n    .bases(\"Expression\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")]);\n\n  def(\"Super\")\n    .bases(\"Expression\")\n    .build();\n\n  def(\"BindExpression\")\n    .bases(\"Expression\")\n    .build(\"object\", \"callee\")\n    .field(\"object\", or(def(\"Expression\"), null))\n    .field(\"callee\", def(\"Expression\"));\n\n  def(\"Decorator\")\n    .bases(\"Node\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"Property\")\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"MethodDefinition\")\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"MetaProperty\")\n    .bases(\"Expression\")\n    .build(\"meta\", \"property\")\n    .field(\"meta\", def(\"Identifier\"))\n    .field(\"property\", def(\"Identifier\"));\n\n  def(\"ParenthesizedExpression\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"ImportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"imported\", \"local\")\n    .field(\"imported\", def(\"Identifier\"));\n\n  def(\"ImportDefaultSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"local\");\n\n  def(\"ImportNamespaceSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"local\");\n\n  def(\"ExportDefaultDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"declaration\")\n    .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n\n  def(\"ExportNamedDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"declaration\", \"specifiers\", \"source\")\n    .field(\"declaration\", or(def(\"Declaration\"), null))\n    .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n    .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n\n  def(\"ExportSpecifier\")\n    .bases(\"ModuleSpecifier\")\n    .build(\"local\", \"exported\")\n    .field(\"exported\", def(\"Identifier\"));\n\n  def(\"ExportNamespaceSpecifier\")\n    .bases(\"Specifier\")\n    .build(\"exported\")\n    .field(\"exported\", def(\"Identifier\"));\n\n  def(\"ExportDefaultSpecifier\")\n    .bases(\"Specifier\")\n    .build(\"exported\")\n    .field(\"exported\", def(\"Identifier\"));\n\n  def(\"ExportAllDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"exported\", \"source\")\n    .field(\"exported\", or(def(\"Identifier\"), null))\n    .field(\"source\", def(\"Literal\"));\n\n  def(\"CommentBlock\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n\n  def(\"CommentLine\")\n    .bases(\"Comment\")\n    .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n\n  def(\"Directive\")\n    .bases(\"Node\")\n    .build(\"value\")\n    .field(\"value\", def(\"DirectiveLiteral\"));\n\n  def(\"DirectiveLiteral\")\n    .bases(\"Node\", \"Expression\")\n    .build(\"value\")\n    .field(\"value\", String, defaults[\"use strict\"]);\n\n  def(\"BlockStatement\")\n    .bases(\"Statement\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")])\n    .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n\n  def(\"Program\")\n    .bases(\"Node\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")])\n    .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n\n  // Split Literal\n  def(\"StringLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", String);\n\n  def(\"NumericLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", Number)\n    .field(\"raw\", or(String, null), defaults[\"null\"])\n    .field(\"extra\", {\n      rawValue: Number,\n      raw: String\n    }, function getDefault() {\n      return {\n        rawValue: this.value,\n        raw: this.value + \"\"\n      }\n    });\n\n  def(\"BigIntLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    // Only String really seems appropriate here, since BigInt values\n    // often exceed the limits of JS numbers.\n    .field(\"value\", or(String, Number))\n    .field(\"extra\", {\n      rawValue: String,\n      raw: String\n    }, function getDefault() {\n      return {\n        rawValue: String(this.value),\n        raw: this.value + \"n\"\n      };\n    });\n\n  def(\"NullLiteral\")\n    .bases(\"Literal\")\n    .build()\n    .field(\"value\", null, defaults[\"null\"]);\n\n  def(\"BooleanLiteral\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", Boolean);\n\n  def(\"RegExpLiteral\")\n    .bases(\"Literal\")\n    .build(\"pattern\", \"flags\")\n    .field(\"pattern\", String)\n    .field(\"flags\", String)\n    .field(\"value\", RegExp, function () {\n      return new RegExp(this.pattern, this.flags);\n    });\n\n  var ObjectExpressionProperty = or(\n    def(\"Property\"),\n    def(\"ObjectMethod\"),\n    def(\"ObjectProperty\"),\n    def(\"SpreadProperty\"),\n    def(\"SpreadElement\")\n  );\n\n  // Split Property -> ObjectProperty and ObjectMethod\n  def(\"ObjectExpression\")\n    .bases(\"Expression\")\n    .build(\"properties\")\n    .field(\"properties\", [ObjectExpressionProperty]);\n\n  // ObjectMethod hoist .value properties to own properties\n  def(\"ObjectMethod\")\n    .bases(\"Node\", \"Function\")\n    .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n    .field(\"kind\", or(\"method\", \"get\", \"set\"))\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"params\", [def(\"Pattern\")])\n    .field(\"body\", def(\"BlockStatement\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"async\", Boolean, defaults[\"false\"])\n    .field(\"accessibility\", // TypeScript\n           or(def(\"Literal\"), null),\n           defaults[\"null\"])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"ObjectProperty\")\n    .bases(\"Node\")\n    .build(\"key\", \"value\")\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n    .field(\"accessibility\", // TypeScript\n           or(def(\"Literal\"), null),\n           defaults[\"null\"])\n    .field(\"computed\", Boolean, defaults[\"false\"]);\n\n  var ClassBodyElement = or(\n    def(\"MethodDefinition\"),\n    def(\"VariableDeclarator\"),\n    def(\"ClassPropertyDefinition\"),\n    def(\"ClassProperty\"),\n    def(\"ClassMethod\")\n  );\n\n  // MethodDefinition -> ClassMethod\n  def(\"ClassBody\")\n    .bases(\"Declaration\")\n    .build(\"body\")\n    .field(\"body\", [ClassBodyElement]);\n\n  def(\"ClassMethod\")\n    .bases(\"Declaration\", \"Function\")\n    .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n    .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"))\n    .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n    .field(\"params\", [def(\"Pattern\")])\n    .field(\"body\", def(\"BlockStatement\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"static\", Boolean, defaults[\"false\"])\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"async\", Boolean, defaults[\"false\"])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  var ObjectPatternProperty = or(\n    def(\"Property\"),\n    def(\"PropertyPattern\"),\n    def(\"SpreadPropertyPattern\"),\n    def(\"SpreadProperty\"), // Used by Esprima\n    def(\"ObjectProperty\"), // Babel 6\n    def(\"RestProperty\") // Babel 6\n  );\n\n  // Split into RestProperty and SpreadProperty\n  def(\"ObjectPattern\")\n    .bases(\"Pattern\")\n    .build(\"properties\")\n    .field(\"properties\", [ObjectPatternProperty])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"]);\n\n  def(\"SpreadProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"RestProperty\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  def(\"ForAwaitStatement\")\n    .bases(\"Statement\")\n    .build(\"left\", \"right\", \"body\")\n    .field(\"left\", or(\n      def(\"VariableDeclaration\"),\n      def(\"Expression\")))\n    .field(\"right\", def(\"Expression\"))\n    .field(\"body\", def(\"Statement\"));\n\n  // The callee node of a dynamic import(...) expression.\n  def(\"Import\")\n    .bases(\"Expression\")\n    .build();\n};\n","module.exports = function (fork) {\n  fork.use(require(\"./babel-core\"));\n  fork.use(require(\"./flow\"));\n};\n","module.exports = function (fork) {\n  // Since TypeScript is parsed by Babylon, include the core Babylon types\n  // but omit the Flow-related types.\n  fork.use(require(\"./babel-core\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var n = types.namedTypes;\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n  var StringLiteral = new types.Type(function (value, deep) {\n    if (n.StringLiteral &&\n        n.StringLiteral.check(value, deep)) {\n      return true\n    }\n    if (n.Literal &&\n        n.Literal.check(value, deep) &&\n        typeof value.value === \"string\") {\n      return true;\n    }\n    return false;\n  }, \"StringLiteral\");\n\n  def(\"TSType\")\n    .bases(\"Node\");\n\n  var IdOrQualifiedName = or(\n    def(\"Identifier\"),\n    def(\"TSQualifiedName\")\n  );\n\n  def(\"TSTypeReference\")\n    .bases(\"TSType\")\n    .build(\"typeName\", \"typeParameters\")\n    .field(\"typeName\", IdOrQualifiedName)\n    .field(\"typeParameters\",\n           or(def(\"TSTypeParameterInstantiation\"), null),\n           defaults[\"null\"]);\n\n  // An abstract (non-buildable) base type that provide a commonly-needed\n  // optional .typeParameters field.\n  def(\"TSHasOptionalTypeParameters\")\n    .field(\"typeParameters\",\n           or(def(\"TSTypeParameterDeclaration\"), null),\n           defaults[\"null\"]);\n\n  // An abstract (non-buildable) base type that provide a commonly-needed\n  // optional .typeAnnotation field.\n  def(\"TSHasOptionalTypeAnnotation\")\n    .field(\"typeAnnotation\",\n           or(def(\"TSTypeAnnotation\"), null),\n           defaults[\"null\"]);\n\n  def(\"TSQualifiedName\")\n    .bases(\"Node\")\n    .build(\"left\", \"right\")\n    .field(\"left\", IdOrQualifiedName)\n    .field(\"right\", IdOrQualifiedName);\n\n  def(\"TSAsExpression\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"))\n    .field(\"typeAnnotation\", def(\"TSType\"))\n    .field(\"extra\",\n           or({ parenthesized: Boolean }, null),\n           defaults[\"null\"]);\n\n  def(\"TSNonNullExpression\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  [ // Define all the simple keyword types.\n    \"TSAnyKeyword\",\n    \"TSBooleanKeyword\",\n    \"TSNeverKeyword\",\n    \"TSNullKeyword\",\n    \"TSNumberKeyword\",\n    \"TSObjectKeyword\",\n    \"TSStringKeyword\",\n    \"TSSymbolKeyword\",\n    \"TSUndefinedKeyword\",\n    \"TSVoidKeyword\",\n    \"TSThisType\",\n  ].forEach(keywordType => {\n    def(keywordType)\n      .bases(\"TSType\")\n      .build();\n  });\n\n  def(\"TSArrayType\")\n    .bases(\"TSType\")\n    .build(\"elementType\")\n    .field(\"elementType\", def(\"TSType\"))\n\n  def(\"TSLiteralType\")\n    .bases(\"TSType\")\n    .build(\"literal\")\n    .field(\"literal\",\n           or(def(\"NumericLiteral\"),\n              def(\"StringLiteral\"),\n              def(\"BooleanLiteral\")));\n\n  [\"TSUnionType\",\n   \"TSIntersectionType\",\n  ].forEach(typeName => {\n    def(typeName)\n      .bases(\"TSType\")\n      .build(\"types\")\n      .field(\"types\", [def(\"TSType\")]);\n  });\n\n  def(\"TSConditionalType\")\n    .bases(\"TSType\")\n    .build(\"checkType\", \"extendsType\", \"trueType\", \"falseType\")\n    .field(\"checkType\", def(\"TSType\"))\n    .field(\"extendsType\", def(\"TSType\"))\n    .field(\"trueType\", def(\"TSType\"))\n    .field(\"falseType\", def(\"TSType\"));\n\n  def(\"TSInferType\")\n    .bases(\"TSType\")\n    .build(\"typeParameter\")\n    .field(\"typeParameter\", def(\"TSTypeParameter\"));\n\n  def(\"TSParenthesizedType\")\n    .bases(\"TSType\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\", def(\"TSType\"));\n\n  var ParametersType = [or(\n    def(\"Identifier\"),\n    def(\"RestElement\")\n  )];\n\n  [\"TSFunctionType\",\n   \"TSConstructorType\",\n  ].forEach(typeName => {\n    def(typeName)\n      .bases(\"TSType\",\n             \"TSHasOptionalTypeParameters\",\n             \"TSHasOptionalTypeAnnotation\")\n      .build(\"parameters\")\n      .field(\"parameters\", ParametersType);\n  });\n\n  def(\"TSDeclareFunction\")\n    .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n    .build(\"id\", \"params\", \"returnType\")\n    .field(\"declare\", Boolean, defaults[\"false\"])\n    .field(\"async\", Boolean, defaults[\"false\"])\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n    .field(\"params\", [def(\"Pattern\")])\n    // tSFunctionTypeAnnotationCommon\n    .field(\"returnType\",\n           or(def(\"TSTypeAnnotation\"),\n              def(\"Noop\"), // Still used?\n              null),\n           defaults[\"null\"]);\n\n  def(\"TSDeclareMethod\")\n    .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n    .build(\"key\", \"params\", \"returnType\")\n    .field(\"async\", Boolean, defaults[\"false\"])\n    .field(\"generator\", Boolean, defaults[\"false\"])\n    .field(\"params\", [def(\"Pattern\")])\n    // classMethodOrPropertyCommon\n    .field(\"abstract\", Boolean, defaults[\"false\"])\n    .field(\"accessibility\",\n           or(\"public\", \"private\", \"protected\", void 0),\n           defaults[\"undefined\"])\n    .field(\"static\", Boolean, defaults[\"false\"])\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"optional\", Boolean, defaults[\"false\"])\n    .field(\"key\", or(\n      def(\"Identifier\"),\n      def(\"StringLiteral\"),\n      def(\"NumericLiteral\"),\n      // Only allowed if .computed is true.\n      def(\"Expression\")\n    ))\n    // classMethodOrDeclareMethodCommon\n    .field(\"kind\",\n           or(\"get\", \"set\", \"method\", \"constructor\"),\n           function getDefault() { return \"method\"; })\n    .field(\"access\", // Not \"accessibility\"?\n           or(\"public\", \"private\", \"protected\", void 0),\n           defaults[\"undefined\"])\n    .field(\"decorators\",\n           or([def(\"Decorator\")], null),\n           defaults[\"null\"])\n    // tSFunctionTypeAnnotationCommon\n    .field(\"returnType\",\n           or(def(\"TSTypeAnnotation\"),\n              def(\"Noop\"), // Still used?\n              null),\n           defaults[\"null\"]);\n\n  def(\"TSMappedType\")\n    .bases(\"TSType\")\n    .build(\"typeParameter\", \"typeAnnotation\")\n    .field(\"readonly\", Boolean, defaults[\"false\"])\n    .field(\"typeParameter\", def(\"TSTypeParameter\"))\n    .field(\"optional\", Boolean, defaults[\"false\"])\n    .field(\"typeAnnotation\",\n           or(def(\"TSType\"), null),\n           defaults[\"null\"]);\n\n  def(\"TSTupleType\")\n    .bases(\"TSType\")\n    .build(\"elementTypes\")\n    .field(\"elementTypes\", [def(\"TSType\")]);\n\n  def(\"TSIndexedAccessType\")\n    .bases(\"TSType\")\n    .build(\"objectType\", \"indexType\")\n    .field(\"objectType\", def(\"TSType\"))\n    .field(\"indexType\", def(\"TSType\"))\n\n  def(\"TSTypeOperator\")\n    .bases(\"TSType\")\n    .build(\"operator\")\n    .field(\"operator\", String)\n    .field(\"typeAnnotation\", def(\"TSType\"));\n\n  def(\"TSTypeAnnotation\")\n    .bases(\"Node\")\n    .build(\"typeAnnotation\")\n    .field(\"typeAnnotation\",\n           or(def(\"TSType\"),\n              def(\"TSTypeAnnotation\")));\n\n  def(\"TSIndexSignature\")\n    .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n    .build(\"parameters\")\n    .field(\"parameters\", [def(\"Identifier\")]) // Length === 1\n    .field(\"readonly\", Boolean, defaults[\"false\"]);\n\n  def(\"TSPropertySignature\")\n    .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n    .build(\"key\")\n    .field(\"key\", def(\"Expression\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"readonly\", Boolean, defaults[\"false\"])\n    .field(\"optional\", Boolean, defaults[\"false\"])\n    .field(\"initializer\",\n           or(def(\"Expression\"), null),\n           defaults[\"null\"]);\n\n  def(\"TSMethodSignature\")\n    .bases(\"Declaration\",\n           \"TSHasOptionalTypeParameters\",\n           \"TSHasOptionalTypeAnnotation\")\n    .build(\"key\")\n    .field(\"key\", def(\"Expression\"))\n    .field(\"computed\", Boolean, defaults[\"false\"])\n    .field(\"optional\", Boolean, defaults[\"false\"])\n    .field(\"parameters\", ParametersType);\n\n  def(\"TSTypePredicate\")\n    .bases(\"TSTypeAnnotation\")\n    .build(\"parameterName\", \"typeAnnotation\")\n    .field(\"parameterName\",\n           or(def(\"Identifier\"),\n              def(\"TSThisType\")))\n    .field(\"typeAnnotation\", def(\"TSTypeAnnotation\"));\n\n  [\"TSCallSignatureDeclaration\",\n   \"TSConstructSignatureDeclaration\",\n  ].forEach(typeName => {\n    def(typeName)\n      .bases(\"Declaration\",\n             \"TSHasOptionalTypeParameters\",\n             \"TSHasOptionalTypeAnnotation\")\n      .build(\"parameters\")\n      .field(\"parameters\", ParametersType);\n  });\n\n  def(\"TSEnumMember\")\n    .bases(\"Node\")\n    .build(\"id\", \"initializer\")\n    .field(\"id\", or(def(\"Identifier\"), StringLiteral))\n    .field(\"initializer\",\n           or(def(\"Expression\"), null),\n           defaults[\"null\"]);\n\n  def(\"TSTypeQuery\")\n    .bases(\"TSType\")\n    .build(\"exprName\")\n    .field(\"exprName\", def(\"Identifier\"));\n\n  // Inferred from Babylon's tsParseTypeMember method.\n  var TSTypeMember = or(\n    def(\"TSCallSignatureDeclaration\"),\n    def(\"TSConstructSignatureDeclaration\"),\n    def(\"TSIndexSignature\"),\n    def(\"TSMethodSignature\"),\n    def(\"TSPropertySignature\")\n  );\n\n  def(\"TSTypeLiteral\")\n    .bases(\"TSType\")\n    .build(\"members\")\n    .field(\"members\", [TSTypeMember]);\n\n  def(\"TSTypeParameter\")\n    .bases(\"Identifier\")\n    .field(\"name\", String)\n    .field(\"constraint\", or(def(\"TSType\"), null), defaults[\"null\"])\n    .field(\"default\", or(def(\"TSType\"), null), defaults[\"null\"]);\n\n  def(\"TSTypeAssertion\")\n    .bases(\"Expression\")\n    .build(\"typeAnnotation\", \"expression\")\n    .field(\"typeAnnotation\", def(\"TSType\"))\n    .field(\"expression\", def(\"Expression\"))\n    .field(\"extra\",\n           or({ parenthesized: Boolean }, null),\n           defaults[\"null\"]);\n\n  def(\"TSTypeParameterDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"params\")\n    .field(\"params\", [def(\"TSTypeParameter\")]);\n\n  def(\"TSTypeParameterInstantiation\")\n    .bases(\"Node\")\n    .build(\"params\")\n    .field(\"params\", [def(\"TSType\")]);\n\n  def(\"TSEnumDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"members\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"const\", Boolean, defaults[\"false\"])\n    .field(\"declare\", Boolean, defaults[\"false\"])\n    .field(\"members\", [def(\"TSEnumMember\")])\n    .field(\"initializer\",\n           or(def(\"Expression\"), null),\n           defaults[\"null\"]);\n\n  def(\"TSTypeAliasDeclaration\")\n    .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"declare\", Boolean, defaults[\"false\"])\n    .field(\"typeAnnotation\", def(\"TSType\"));\n\n  def(\"TSModuleBlock\")\n    .bases(\"Node\")\n    .build(\"body\")\n    .field(\"body\", [def(\"Statement\")]);\n\n  def(\"TSModuleDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"body\")\n    .field(\"id\", or(StringLiteral, IdOrQualifiedName))\n    .field(\"declare\", Boolean, defaults[\"false\"])\n    .field(\"global\", Boolean, defaults[\"false\"])\n    .field(\"body\",\n           or(def(\"TSModuleBlock\"),\n              def(\"TSModuleDeclaration\"),\n              null),\n           defaults[\"null\"]);\n\n  def(\"TSImportEqualsDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\", \"moduleReference\")\n    .field(\"id\", def(\"Identifier\"))\n    .field(\"isExport\", Boolean, defaults[\"false\"])\n    .field(\"moduleReference\",\n           or(IdOrQualifiedName,\n              def(\"TSExternalModuleReference\")));\n\n  def(\"TSExternalModuleReference\")\n    .bases(\"Declaration\")\n    .build(\"expression\")\n    .field(\"expression\", StringLiteral);\n\n  def(\"TSExportAssignment\")\n    .bases(\"Statement\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"TSNamespaceExportDeclaration\")\n    .bases(\"Declaration\")\n    .build(\"id\")\n    .field(\"id\", def(\"Identifier\"));\n\n  def(\"TSInterfaceBody\")\n    .bases(\"Node\")\n    .build(\"body\")\n    .field(\"body\", [TSTypeMember]);\n\n  def(\"TSExpressionWithTypeArguments\")\n    .bases(\"TSType\")\n    .build(\"expression\", \"typeParameters\")\n    .field(\"expression\", IdOrQualifiedName)\n    .field(\"typeParameters\",\n           or(def(\"TSTypeParameterInstantiation\"), null),\n           defaults[\"null\"]);\n\n  def(\"TSInterfaceDeclaration\")\n    .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n    .build(\"id\", \"body\")\n    .field(\"id\", IdOrQualifiedName)\n    .field(\"declare\", Boolean, defaults[\"false\"])\n    .field(\"extends\",\n           or([def(\"TSExpressionWithTypeArguments\")], null),\n           defaults[\"null\"])\n    .field(\"body\", def(\"TSInterfaceBody\"));\n\n  [\"ClassDeclaration\",\n   \"ClassExpression\",\n  ].forEach(typeName => {\n    def(typeName)\n      .field(\"implements\",\n             [def(\"TSExpressionWithTypeArguments\")],\n             defaults.emptyArray);\n  });\n\n  def(\"TSParameterProperty\")\n    .bases(\"Pattern\")\n    .build(\"parameter\")\n    .field(\"accessibility\",\n           or(\"public\", \"private\", \"protected\", void 0),\n           defaults[\"undefined\"])\n    .field(\"readonly\", Boolean, defaults[\"false\"])\n    .field(\"parameter\", or(def(\"Identifier\"),\n                           def(\"AssignmentPattern\")));\n\n  // Defined already in es6 and babel-core.\n  def(\"ClassBody\")\n    .field(\"body\", [or(\n      def(\"MethodDefinition\"),\n      def(\"VariableDeclarator\"),\n      def(\"ClassPropertyDefinition\"),\n      def(\"ClassProperty\"),\n      def(\"ClassMethod\"),\n      // Just need to add these types:\n      def(\"TSDeclareMethod\"),\n      TSTypeMember\n    )]);\n};\n","module.exports = function (fork) {\n  fork.use(require('./core'));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var Type = types.Type;\n  var def = types.Type.def;\n  var or = Type.or;\n\n  var shared = fork.use(require(\"../lib/shared\"));\n  var defaults = shared.defaults;\n\n\n  // https://github.com/tc39/proposal-optional-chaining\n  // `a?.b` as per https://github.com/estree/estree/issues/146\n  def(\"OptionalMemberExpression\")\n    .bases(\"MemberExpression\")\n    .build(\"object\", \"property\", \"computed\", \"optional\")\n    .field(\"optional\", Boolean, defaults[\"true\"])\n\n  // a?.b()\n  def(\"OptionalCallExpression\")\n    .bases(\"CallExpression\")\n    .build(\"callee\", \"arguments\", \"optional\")\n    .field(\"optional\", Boolean, defaults[\"true\"])\n\n\n  // https://github.com/tc39/proposal-nullish-coalescing\n  // `a ?? b` as per https://github.com/babel/babylon/pull/761/files\n  var LogicalOperator = or(\"||\", \"&&\", \"??\");\n\n  def(\"LogicalExpression\")\n    .field(\"operator\", LogicalOperator)\n};\n","module.exports = require('./fork')([\n  // This core module of AST types captures ES5 as it is parsed today by\n  // git://github.com/ariya/esprima.git#master.\n  require(\"./def/core\"),\n\n  // Feel free to add to or remove from this list of extension modules to\n  // configure the precise type hierarchy that you need.\n  require(\"./def/es6\"),\n  require(\"./def/es7\"),\n  require(\"./def/mozilla\"),\n  require(\"./def/e4x\"),\n  require(\"./def/jsx\"),\n  require(\"./def/flow\"),\n  require(\"./def/esprima\"),\n  require(\"./def/babel\"),\n  require(\"./def/typescript\"),\n  require(\"./def/es-proposals\")\n]);\n","// This module was originally created so that Recast could add its own\n// custom types to the AST type system (in particular, the File type), but\n// those types are now incorporated into ast-types, so this module doesn't\n// have much to do anymore. Still, it might prove useful in the future.\nmodule.exports = require(\"ast-types\");\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar getFieldValue = types.getFieldValue;\nvar n = types.namedTypes;\nvar sourceMap = require(\"source-map\");\nvar SourceMapConsumer = sourceMap.SourceMapConsumer;\nvar SourceMapGenerator = sourceMap.SourceMapGenerator;\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar util = exports;\n\nfunction getOption(options, key, defaultValue) {\n  if (options && hasOwn.call(options, key)) {\n    return options[key];\n  }\n  return defaultValue;\n}\nutil.getOption = getOption;\n\nfunction getUnionOfKeys() {\n  var result = {};\n  var argc = arguments.length;\n  for (var i = 0; i < argc; ++i) {\n    var keys = Object.keys(arguments[i]);\n    var keyCount = keys.length;\n    for (var j = 0; j < keyCount; ++j) {\n      result[keys[j]] = true;\n    }\n  }\n  return result;\n}\nutil.getUnionOfKeys = getUnionOfKeys;\n\nfunction comparePos(pos1, pos2) {\n  return (pos1.line - pos2.line) || (pos1.column - pos2.column);\n}\nutil.comparePos = comparePos;\n\nfunction copyPos(pos) {\n  return {\n    line: pos.line,\n    column: pos.column\n  };\n}\nutil.copyPos = copyPos;\n\nutil.composeSourceMaps = function(formerMap, latterMap) {\n  if (formerMap) {\n    if (!latterMap) {\n      return formerMap;\n    }\n  } else {\n    return latterMap || null;\n  }\n\n  var smcFormer = new SourceMapConsumer(formerMap);\n  var smcLatter = new SourceMapConsumer(latterMap);\n  var smg = new SourceMapGenerator({\n    file: latterMap.file,\n    sourceRoot: latterMap.sourceRoot\n  });\n\n  var sourcesToContents = {};\n\n  smcLatter.eachMapping(function(mapping) {\n    var origPos = smcFormer.originalPositionFor({\n      line: mapping.originalLine,\n      column: mapping.originalColumn\n    });\n\n    var sourceName = origPos.source;\n    if (sourceName === null) {\n      return;\n    }\n\n    smg.addMapping({\n      source: sourceName,\n      original: copyPos(origPos),\n      generated: {\n        line: mapping.generatedLine,\n        column: mapping.generatedColumn\n      },\n      name: mapping.name\n    });\n\n    var sourceContent = smcFormer.sourceContentFor(sourceName);\n    if (sourceContent && !hasOwn.call(sourcesToContents, sourceName)) {\n      sourcesToContents[sourceName] = sourceContent;\n      smg.setSourceContent(sourceName, sourceContent);\n    }\n  });\n\n  return smg.toJSON();\n};\n\nutil.getTrueLoc = function(node, lines) {\n  // It's possible that node is newly-created (not parsed by Esprima),\n  // in which case it probably won't have a .loc property (or an\n  // .original property for that matter). That's fine; we'll just\n  // pretty-print it as usual.\n  if (!node.loc) {\n    return null;\n  }\n\n  var result = {\n    start: node.loc.start,\n    end: node.loc.end\n  };\n\n  function include(node) {\n    expandLoc(result, node.loc);\n  }\n\n  // If the node is an export declaration and its .declaration has any\n  // decorators, their locations might contribute to the true start/end\n  // positions of the export declaration node.\n  if (node.declaration &&\n      node.declaration.decorators &&\n      util.isExportDeclaration(node)) {\n    node.declaration.decorators.forEach(include);\n  }\n\n  if (comparePos(result.start, result.end) < 0) {\n    // Trim leading whitespace.\n    result.start = copyPos(result.start);\n    lines.skipSpaces(result.start, false, true);\n\n    if (comparePos(result.start, result.end) < 0) {\n      // Trim trailing whitespace, if the end location is not already the\n      // same as the start location.\n      result.end = copyPos(result.end);\n      lines.skipSpaces(result.end, true, true);\n    }\n  }\n\n  // If the node has any comments, their locations might contribute to\n  // the true start/end positions of the node.\n  if (node.comments) {\n    node.comments.forEach(include);\n  }\n\n  return result;\n};\n\nfunction expandLoc(parentLoc, childLoc) {\n  if (parentLoc && childLoc) {\n    if (comparePos(childLoc.start, parentLoc.start) < 0) {\n      parentLoc.start = childLoc.start;\n    }\n\n    if (comparePos(parentLoc.end, childLoc.end) < 0) {\n      parentLoc.end = childLoc.end;\n    }\n  }\n}\n\nutil.fixFaultyLocations = function(node, lines) {\n  var loc = node.loc;\n  if (loc) {\n    if (loc.start.line < 1) {\n      loc.start.line = 1;\n    }\n\n    if (loc.end.line < 1) {\n      loc.end.line = 1;\n    }\n  }\n\n  if (node.type === \"File\") {\n    // Babylon returns File nodes whose .loc.{start,end} do not include\n    // leading or trailing whitespace.\n    loc.start = lines.firstPos();\n    loc.end = lines.lastPos();\n  }\n\n  fixForLoopHead(node, lines);\n  fixTemplateLiteral(node, lines);\n\n  if (loc && node.decorators) {\n    // Expand the .loc of the node responsible for printing the decorators\n    // (here, the decorated node) so that it includes node.decorators.\n    node.decorators.forEach(function (decorator) {\n      expandLoc(loc, decorator.loc);\n    });\n\n  } else if (node.declaration && util.isExportDeclaration(node)) {\n    // Nullify .loc information for the child declaration so that we never\n    // try to reprint it without also reprinting the export declaration.\n    node.declaration.loc = null;\n\n    // Expand the .loc of the node responsible for printing the decorators\n    // (here, the export declaration) so that it includes node.decorators.\n    var decorators = node.declaration.decorators;\n    if (decorators) {\n      decorators.forEach(function (decorator) {\n        expandLoc(loc, decorator.loc);\n      });\n    }\n\n  } else if ((n.MethodDefinition && n.MethodDefinition.check(node)) ||\n             (n.Property.check(node) && (node.method || node.shorthand))) {\n    // If the node is a MethodDefinition or a .method or .shorthand\n    // Property, then the location information stored in\n    // node.value.loc is very likely untrustworthy (just the {body}\n    // part of a method, or nothing in the case of shorthand\n    // properties), so we null out that information to prevent\n    // accidental reuse of bogus source code during reprinting.\n    node.value.loc = null;\n\n    if (n.FunctionExpression.check(node.value)) {\n      // FunctionExpression method values should be anonymous,\n      // because their .id fields are ignored anyway.\n      node.value.id = null;\n    }\n\n  } else if (node.type === \"ObjectTypeProperty\") {\n    var loc = node.loc;\n    var end = loc && loc.end;\n    if (end) {\n      end = copyPos(end);\n      if (lines.prevPos(end) &&\n          lines.charAt(end) === \",\") {\n        // Some parsers accidentally include trailing commas in the\n        // .loc.end information for ObjectTypeProperty nodes.\n        if ((end = lines.skipSpaces(end, true, true))) {\n          loc.end = end;\n        }\n      }\n    }\n  }\n};\n\nfunction fixForLoopHead(node, lines) {\n  if (node.type !== \"ForStatement\") {\n    return;\n  }\n\n  function fix(child) {\n    var loc = child && child.loc;\n    var start = loc && loc.start;\n    var end = loc && copyPos(loc.end);\n\n    while (start && end && comparePos(start, end) < 0) {\n      lines.prevPos(end);\n      if (lines.charAt(end) === \";\") {\n        // Update child.loc.end to *exclude* the ';' character.\n        loc.end.line = end.line;\n        loc.end.column = end.column;\n      } else {\n        break;\n      }\n    }\n  }\n\n  fix(node.init);\n  fix(node.test);\n  fix(node.update);\n}\n\nfunction fixTemplateLiteral(node, lines) {\n  if (node.type !== \"TemplateLiteral\") {\n    return;\n  }\n\n  if (node.quasis.length === 0) {\n    // If there are no quasi elements, then there is nothing to fix.\n    return;\n  }\n\n  // First we need to exclude the opening ` from the .loc of the first\n  // quasi element, in case the parser accidentally decided to include it.\n  var afterLeftBackTickPos = copyPos(node.loc.start);\n  assert.strictEqual(lines.charAt(afterLeftBackTickPos), \"`\");\n  assert.ok(lines.nextPos(afterLeftBackTickPos));\n  var firstQuasi = node.quasis[0];\n  if (comparePos(firstQuasi.loc.start, afterLeftBackTickPos) < 0) {\n    firstQuasi.loc.start = afterLeftBackTickPos;\n  }\n\n  // Next we need to exclude the closing ` from the .loc of the last quasi\n  // element, in case the parser accidentally decided to include it.\n  var rightBackTickPos = copyPos(node.loc.end);\n  assert.ok(lines.prevPos(rightBackTickPos));\n  assert.strictEqual(lines.charAt(rightBackTickPos), \"`\");\n  var lastQuasi = node.quasis[node.quasis.length - 1];\n  if (comparePos(rightBackTickPos, lastQuasi.loc.end) < 0) {\n    lastQuasi.loc.end = rightBackTickPos;\n  }\n\n  // Now we need to exclude ${ and } characters from the .loc's of all\n  // quasi elements, since some parsers accidentally include them.\n  node.expressions.forEach(function (expr, i) {\n    // Rewind from expr.loc.start over any whitespace and the ${ that\n    // precedes the expression. The position of the $ should be the same\n    // as the .loc.end of the preceding quasi element, but some parsers\n    // accidentally include the ${ in the .loc of the quasi element.\n    var dollarCurlyPos = lines.skipSpaces(expr.loc.start, true, false);\n    if (lines.prevPos(dollarCurlyPos) &&\n        lines.charAt(dollarCurlyPos) === \"{\" &&\n        lines.prevPos(dollarCurlyPos) &&\n        lines.charAt(dollarCurlyPos) === \"$\") {\n      var quasiBefore = node.quasis[i];\n      if (comparePos(dollarCurlyPos, quasiBefore.loc.end) < 0) {\n        quasiBefore.loc.end = dollarCurlyPos;\n      }\n    }\n\n    // Likewise, some parsers accidentally include the } that follows\n    // the expression in the .loc of the following quasi element.\n    var rightCurlyPos = lines.skipSpaces(expr.loc.end, false, false);\n    if (lines.charAt(rightCurlyPos) === \"}\") {\n      assert.ok(lines.nextPos(rightCurlyPos));\n      // Now rightCurlyPos is technically the position just after the }.\n      var quasiAfter = node.quasis[i + 1];\n      if (comparePos(quasiAfter.loc.start, rightCurlyPos) < 0) {\n        quasiAfter.loc.start = rightCurlyPos;\n      }\n    }\n  });\n}\n\nutil.isExportDeclaration = function (node) {\n  if (node) switch (node.type) {\n  case \"ExportDeclaration\":\n  case \"ExportDefaultDeclaration\":\n  case \"ExportDefaultSpecifier\":\n  case \"DeclareExportDeclaration\":\n  case \"ExportNamedDeclaration\":\n  case \"ExportAllDeclaration\":\n    return true;\n  }\n\n  return false;\n};\n\nutil.getParentExportDeclaration = function (path) {\n  var parentNode = path.getParentNode();\n  if (path.getName() === \"declaration\" &&\n      util.isExportDeclaration(parentNode)) {\n    return parentNode;\n  }\n\n  return null;\n};\n\nutil.isTrailingCommaEnabled = function(options, context) {\n  var trailingComma = options.trailingComma;\n  if (typeof trailingComma === \"object\") {\n    return !!trailingComma[context];\n  }\n  return !!trailingComma;\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n/* istanbul ignore next */\n\telse if(typeof exports === 'object')\n\t\texports[\"esprima\"] = factory();\n\telse\n\t\troot[\"esprima\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/*\r\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\r\n\r\n\t  Redistribution and use in source and binary forms, with or without\r\n\t  modification, are permitted provided that the following conditions are met:\r\n\r\n\t    * Redistributions of source code must retain the above copyright\r\n\t      notice, this list of conditions and the following disclaimer.\r\n\t    * Redistributions in binary form must reproduce the above copyright\r\n\t      notice, this list of conditions and the following disclaimer in the\r\n\t      documentation and/or other materials provided with the distribution.\r\n\r\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t*/\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar comment_handler_1 = __webpack_require__(1);\r\n\tvar jsx_parser_1 = __webpack_require__(3);\r\n\tvar parser_1 = __webpack_require__(8);\r\n\tvar tokenizer_1 = __webpack_require__(15);\r\n\tfunction parse(code, options, delegate) {\r\n\t    var commentHandler = null;\r\n\t    var proxyDelegate = function (node, metadata) {\r\n\t        if (delegate) {\r\n\t            delegate(node, metadata);\r\n\t        }\r\n\t        if (commentHandler) {\r\n\t            commentHandler.visit(node, metadata);\r\n\t        }\r\n\t    };\r\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\r\n\t    var collectComment = false;\r\n\t    if (options) {\r\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\r\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\r\n\t        if (collectComment || attachComment) {\r\n\t            commentHandler = new comment_handler_1.CommentHandler();\r\n\t            commentHandler.attach = attachComment;\r\n\t            options.comment = true;\r\n\t            parserDelegate = proxyDelegate;\r\n\t        }\r\n\t    }\r\n\t    var isModule = false;\r\n\t    if (options && typeof options.sourceType === 'string') {\r\n\t        isModule = (options.sourceType === 'module');\r\n\t    }\r\n\t    var parser;\r\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\r\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\r\n\t    }\r\n\t    else {\r\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\r\n\t    }\r\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\r\n\t    var ast = program;\r\n\t    if (collectComment && commentHandler) {\r\n\t        ast.comments = commentHandler.comments;\r\n\t    }\r\n\t    if (parser.config.tokens) {\r\n\t        ast.tokens = parser.tokens;\r\n\t    }\r\n\t    if (parser.config.tolerant) {\r\n\t        ast.errors = parser.errorHandler.errors;\r\n\t    }\r\n\t    return ast;\r\n\t}\r\n\texports.parse = parse;\r\n\tfunction parseModule(code, options, delegate) {\r\n\t    var parsingOptions = options || {};\r\n\t    parsingOptions.sourceType = 'module';\r\n\t    return parse(code, parsingOptions, delegate);\r\n\t}\r\n\texports.parseModule = parseModule;\r\n\tfunction parseScript(code, options, delegate) {\r\n\t    var parsingOptions = options || {};\r\n\t    parsingOptions.sourceType = 'script';\r\n\t    return parse(code, parsingOptions, delegate);\r\n\t}\r\n\texports.parseScript = parseScript;\r\n\tfunction tokenize(code, options, delegate) {\r\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\r\n\t    var tokens;\r\n\t    tokens = [];\r\n\t    try {\r\n\t        while (true) {\r\n\t            var token = tokenizer.getNextToken();\r\n\t            if (!token) {\r\n\t                break;\r\n\t            }\r\n\t            if (delegate) {\r\n\t                token = delegate(token);\r\n\t            }\r\n\t            tokens.push(token);\r\n\t        }\r\n\t    }\r\n\t    catch (e) {\r\n\t        tokenizer.errorHandler.tolerate(e);\r\n\t    }\r\n\t    if (tokenizer.errorHandler.tolerant) {\r\n\t        tokens.errors = tokenizer.errors();\r\n\t    }\r\n\t    return tokens;\r\n\t}\r\n\texports.tokenize = tokenize;\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\texports.Syntax = syntax_1.Syntax;\r\n\t// Sync with *.json manifests.\r\n\texports.version = '4.0.0';\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar CommentHandler = (function () {\r\n\t    function CommentHandler() {\r\n\t        this.attach = false;\r\n\t        this.comments = [];\r\n\t        this.stack = [];\r\n\t        this.leading = [];\r\n\t        this.trailing = [];\r\n\t    }\r\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\r\n\t        //  innnerComments for properties empty block\r\n\t        //  `function a() {/** comments **\\/}`\r\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\r\n\t            var innerComments = [];\r\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t                var entry = this.leading[i];\r\n\t                if (metadata.end.offset >= entry.start) {\r\n\t                    innerComments.unshift(entry.comment);\r\n\t                    this.leading.splice(i, 1);\r\n\t                    this.trailing.splice(i, 1);\r\n\t                }\r\n\t            }\r\n\t            if (innerComments.length) {\r\n\t                node.innerComments = innerComments;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\r\n\t        var trailingComments = [];\r\n\t        if (this.trailing.length > 0) {\r\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\r\n\t                var entry_1 = this.trailing[i];\r\n\t                if (entry_1.start >= metadata.end.offset) {\r\n\t                    trailingComments.unshift(entry_1.comment);\r\n\t                }\r\n\t            }\r\n\t            this.trailing.length = 0;\r\n\t            return trailingComments;\r\n\t        }\r\n\t        var entry = this.stack[this.stack.length - 1];\r\n\t        if (entry && entry.node.trailingComments) {\r\n\t            var firstComment = entry.node.trailingComments[0];\r\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\r\n\t                trailingComments = entry.node.trailingComments;\r\n\t                delete entry.node.trailingComments;\r\n\t            }\r\n\t        }\r\n\t        return trailingComments;\r\n\t    };\r\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\r\n\t        var leadingComments = [];\r\n\t        var target;\r\n\t        while (this.stack.length > 0) {\r\n\t            var entry = this.stack[this.stack.length - 1];\r\n\t            if (entry && entry.start >= metadata.start.offset) {\r\n\t                target = entry.node;\r\n\t                this.stack.pop();\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        if (target) {\r\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\r\n\t            for (var i = count - 1; i >= 0; --i) {\r\n\t                var comment = target.leadingComments[i];\r\n\t                if (comment.range[1] <= metadata.start.offset) {\r\n\t                    leadingComments.unshift(comment);\r\n\t                    target.leadingComments.splice(i, 1);\r\n\t                }\r\n\t            }\r\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\r\n\t                delete target.leadingComments;\r\n\t            }\r\n\t            return leadingComments;\r\n\t        }\r\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\r\n\t            var entry = this.leading[i];\r\n\t            if (entry.start <= metadata.start.offset) {\r\n\t                leadingComments.unshift(entry.comment);\r\n\t                this.leading.splice(i, 1);\r\n\t            }\r\n\t        }\r\n\t        return leadingComments;\r\n\t    };\r\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\r\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\r\n\t            return;\r\n\t        }\r\n\t        this.insertInnerComments(node, metadata);\r\n\t        var trailingComments = this.findTrailingComments(metadata);\r\n\t        var leadingComments = this.findLeadingComments(metadata);\r\n\t        if (leadingComments.length > 0) {\r\n\t            node.leadingComments = leadingComments;\r\n\t        }\r\n\t        if (trailingComments.length > 0) {\r\n\t            node.trailingComments = trailingComments;\r\n\t        }\r\n\t        this.stack.push({\r\n\t            node: node,\r\n\t            start: metadata.start.offset\r\n\t        });\r\n\t    };\r\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\r\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\r\n\t        var comment = {\r\n\t            type: type,\r\n\t            value: node.value\r\n\t        };\r\n\t        if (node.range) {\r\n\t            comment.range = node.range;\r\n\t        }\r\n\t        if (node.loc) {\r\n\t            comment.loc = node.loc;\r\n\t        }\r\n\t        this.comments.push(comment);\r\n\t        if (this.attach) {\r\n\t            var entry = {\r\n\t                comment: {\r\n\t                    type: type,\r\n\t                    value: node.value,\r\n\t                    range: [metadata.start.offset, metadata.end.offset]\r\n\t                },\r\n\t                start: metadata.start.offset\r\n\t            };\r\n\t            if (node.loc) {\r\n\t                entry.comment.loc = node.loc;\r\n\t            }\r\n\t            node.type = type;\r\n\t            this.leading.push(entry);\r\n\t            this.trailing.push(entry);\r\n\t        }\r\n\t    };\r\n\t    CommentHandler.prototype.visit = function (node, metadata) {\r\n\t        if (node.type === 'LineComment') {\r\n\t            this.visitComment(node, metadata);\r\n\t        }\r\n\t        else if (node.type === 'BlockComment') {\r\n\t            this.visitComment(node, metadata);\r\n\t        }\r\n\t        else if (this.attach) {\r\n\t            this.visitNode(node, metadata);\r\n\t        }\r\n\t    };\r\n\t    return CommentHandler;\r\n\t}());\r\n\texports.CommentHandler = CommentHandler;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.Syntax = {\r\n\t    AssignmentExpression: 'AssignmentExpression',\r\n\t    AssignmentPattern: 'AssignmentPattern',\r\n\t    ArrayExpression: 'ArrayExpression',\r\n\t    ArrayPattern: 'ArrayPattern',\r\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\r\n\t    AwaitExpression: 'AwaitExpression',\r\n\t    BlockStatement: 'BlockStatement',\r\n\t    BinaryExpression: 'BinaryExpression',\r\n\t    BreakStatement: 'BreakStatement',\r\n\t    CallExpression: 'CallExpression',\r\n\t    CatchClause: 'CatchClause',\r\n\t    ClassBody: 'ClassBody',\r\n\t    ClassDeclaration: 'ClassDeclaration',\r\n\t    ClassExpression: 'ClassExpression',\r\n\t    ConditionalExpression: 'ConditionalExpression',\r\n\t    ContinueStatement: 'ContinueStatement',\r\n\t    DoWhileStatement: 'DoWhileStatement',\r\n\t    DebuggerStatement: 'DebuggerStatement',\r\n\t    EmptyStatement: 'EmptyStatement',\r\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\r\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\r\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\r\n\t    ExportSpecifier: 'ExportSpecifier',\r\n\t    ExpressionStatement: 'ExpressionStatement',\r\n\t    ForStatement: 'ForStatement',\r\n\t    ForOfStatement: 'ForOfStatement',\r\n\t    ForInStatement: 'ForInStatement',\r\n\t    FunctionDeclaration: 'FunctionDeclaration',\r\n\t    FunctionExpression: 'FunctionExpression',\r\n\t    Identifier: 'Identifier',\r\n\t    IfStatement: 'IfStatement',\r\n\t    ImportDeclaration: 'ImportDeclaration',\r\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\r\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\r\n\t    ImportSpecifier: 'ImportSpecifier',\r\n\t    Literal: 'Literal',\r\n\t    LabeledStatement: 'LabeledStatement',\r\n\t    LogicalExpression: 'LogicalExpression',\r\n\t    MemberExpression: 'MemberExpression',\r\n\t    MetaProperty: 'MetaProperty',\r\n\t    MethodDefinition: 'MethodDefinition',\r\n\t    NewExpression: 'NewExpression',\r\n\t    ObjectExpression: 'ObjectExpression',\r\n\t    ObjectPattern: 'ObjectPattern',\r\n\t    Program: 'Program',\r\n\t    Property: 'Property',\r\n\t    RestElement: 'RestElement',\r\n\t    ReturnStatement: 'ReturnStatement',\r\n\t    SequenceExpression: 'SequenceExpression',\r\n\t    SpreadElement: 'SpreadElement',\r\n\t    Super: 'Super',\r\n\t    SwitchCase: 'SwitchCase',\r\n\t    SwitchStatement: 'SwitchStatement',\r\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\r\n\t    TemplateElement: 'TemplateElement',\r\n\t    TemplateLiteral: 'TemplateLiteral',\r\n\t    ThisExpression: 'ThisExpression',\r\n\t    ThrowStatement: 'ThrowStatement',\r\n\t    TryStatement: 'TryStatement',\r\n\t    UnaryExpression: 'UnaryExpression',\r\n\t    UpdateExpression: 'UpdateExpression',\r\n\t    VariableDeclaration: 'VariableDeclaration',\r\n\t    VariableDeclarator: 'VariableDeclarator',\r\n\t    WhileStatement: 'WhileStatement',\r\n\t    WithStatement: 'WithStatement',\r\n\t    YieldExpression: 'YieldExpression'\r\n\t};\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\r\n\t    var extendStatics = Object.setPrototypeOf ||\r\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\t    return function (d, b) {\r\n\t        extendStatics(d, b);\r\n\t        function __() { this.constructor = d; }\r\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t    };\r\n\t})();\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar character_1 = __webpack_require__(4);\r\n\tvar JSXNode = __webpack_require__(5);\r\n\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\tvar Node = __webpack_require__(7);\r\n\tvar parser_1 = __webpack_require__(8);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar xhtml_entities_1 = __webpack_require__(14);\r\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\r\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\r\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\r\n\tfunction getQualifiedElementName(elementName) {\r\n\t    var qualifiedName;\r\n\t    switch (elementName.type) {\r\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\r\n\t            var id = elementName;\r\n\t            qualifiedName = id.name;\r\n\t            break;\r\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\r\n\t            var ns = elementName;\r\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\r\n\t                getQualifiedElementName(ns.name);\r\n\t            break;\r\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\r\n\t            var expr = elementName;\r\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\r\n\t                getQualifiedElementName(expr.property);\r\n\t            break;\r\n\t        /* istanbul ignore next */\r\n\t        default:\r\n\t            break;\r\n\t    }\r\n\t    return qualifiedName;\r\n\t}\r\n\tvar JSXParser = (function (_super) {\r\n\t    __extends(JSXParser, _super);\r\n\t    function JSXParser(code, options, delegate) {\r\n\t        return _super.call(this, code, options, delegate) || this;\r\n\t    }\r\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\r\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\r\n\t    };\r\n\t    JSXParser.prototype.startJSX = function () {\r\n\t        // Unwind the scanner before the lookahead token.\r\n\t        this.scanner.index = this.startMarker.index;\r\n\t        this.scanner.lineNumber = this.startMarker.line;\r\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\r\n\t    };\r\n\t    JSXParser.prototype.finishJSX = function () {\r\n\t        // Prime the next lookahead.\r\n\t        this.nextToken();\r\n\t    };\r\n\t    JSXParser.prototype.reenterJSX = function () {\r\n\t        this.startJSX();\r\n\t        this.expectJSX('}');\r\n\t        // Pop the closing '}' added from the lookahead.\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.pop();\r\n\t        }\r\n\t    };\r\n\t    JSXParser.prototype.createJSXNode = function () {\r\n\t        this.collectComments();\r\n\t        return {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    };\r\n\t    JSXParser.prototype.createJSXChildNode = function () {\r\n\t        return {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    };\r\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\r\n\t        var result = '&';\r\n\t        var valid = true;\r\n\t        var terminated = false;\r\n\t        var numeric = false;\r\n\t        var hex = false;\r\n\t        while (!this.scanner.eof() && valid && !terminated) {\r\n\t            var ch = this.scanner.source[this.scanner.index];\r\n\t            if (ch === quote) {\r\n\t                break;\r\n\t            }\r\n\t            terminated = (ch === ';');\r\n\t            result += ch;\r\n\t            ++this.scanner.index;\r\n\t            if (!terminated) {\r\n\t                switch (result.length) {\r\n\t                    case 2:\r\n\t                        // e.g. '&#123;'\r\n\t                        numeric = (ch === '#');\r\n\t                        break;\r\n\t                    case 3:\r\n\t                        if (numeric) {\r\n\t                            // e.g. '&#x41;'\r\n\t                            hex = (ch === 'x');\r\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\r\n\t                            numeric = numeric && !hex;\r\n\t                        }\r\n\t                        break;\r\n\t                    default:\r\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\r\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (valid && terminated && result.length > 2) {\r\n\t            // e.g. '&#x41;' becomes just '#x41'\r\n\t            var str = result.substr(1, result.length - 2);\r\n\t            if (numeric && str.length > 1) {\r\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\r\n\t            }\r\n\t            else if (hex && str.length > 2) {\r\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\r\n\t            }\r\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\r\n\t                result = xhtml_entities_1.XHTMLEntities[str];\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\r\n\t    JSXParser.prototype.lexJSX = function () {\r\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t        // < > / : = { }\r\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\r\n\t            var value = this.scanner.source[this.scanner.index++];\r\n\t            return {\r\n\t                type: 7 /* Punctuator */,\r\n\t                value: value,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: this.scanner.index - 1,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // \" '\r\n\t        if (cp === 34 || cp === 39) {\r\n\t            var start = this.scanner.index;\r\n\t            var quote = this.scanner.source[this.scanner.index++];\r\n\t            var str = '';\r\n\t            while (!this.scanner.eof()) {\r\n\t                var ch = this.scanner.source[this.scanner.index++];\r\n\t                if (ch === quote) {\r\n\t                    break;\r\n\t                }\r\n\t                else if (ch === '&') {\r\n\t                    str += this.scanXHTMLEntity(quote);\r\n\t                }\r\n\t                else {\r\n\t                    str += ch;\r\n\t                }\r\n\t            }\r\n\t            return {\r\n\t                type: 8 /* StringLiteral */,\r\n\t                value: str,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // ... or .\r\n\t        if (cp === 46) {\r\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\r\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\r\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\r\n\t            var start = this.scanner.index;\r\n\t            this.scanner.index += value.length;\r\n\t            return {\r\n\t                type: 7 /* Punctuator */,\r\n\t                value: value,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // `\r\n\t        if (cp === 96) {\r\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\r\n\t            return {\r\n\t                type: 10 /* Template */,\r\n\t                value: '',\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: this.scanner.index,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        // Identifer can not contain backslash (char code 92).\r\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\r\n\t            var start = this.scanner.index;\r\n\t            ++this.scanner.index;\r\n\t            while (!this.scanner.eof()) {\r\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\r\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                else if (ch === 45) {\r\n\t                    // Hyphen (char code 45) can be part of an identifier.\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\r\n\t            return {\r\n\t                type: 100 /* Identifier */,\r\n\t                value: id,\r\n\t                lineNumber: this.scanner.lineNumber,\r\n\t                lineStart: this.scanner.lineStart,\r\n\t                start: start,\r\n\t                end: this.scanner.index\r\n\t            };\r\n\t        }\r\n\t        return this.scanner.lex();\r\n\t    };\r\n\t    JSXParser.prototype.nextJSXToken = function () {\r\n\t        this.collectComments();\r\n\t        this.startMarker.index = this.scanner.index;\r\n\t        this.startMarker.line = this.scanner.lineNumber;\r\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var token = this.lexJSX();\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    JSXParser.prototype.nextJSXText = function () {\r\n\t        this.startMarker.index = this.scanner.index;\r\n\t        this.startMarker.line = this.scanner.lineNumber;\r\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var start = this.scanner.index;\r\n\t        var text = '';\r\n\t        while (!this.scanner.eof()) {\r\n\t            var ch = this.scanner.source[this.scanner.index];\r\n\t            if (ch === '{' || ch === '<') {\r\n\t                break;\r\n\t            }\r\n\t            ++this.scanner.index;\r\n\t            text += ch;\r\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                ++this.scanner.lineNumber;\r\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\r\n\t                    ++this.scanner.index;\r\n\t                }\r\n\t                this.scanner.lineStart = this.scanner.index;\r\n\t            }\r\n\t        }\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        var token = {\r\n\t            type: 101 /* Text */,\r\n\t            value: text,\r\n\t            lineNumber: this.scanner.lineNumber,\r\n\t            lineStart: this.scanner.lineStart,\r\n\t            start: start,\r\n\t            end: this.scanner.index\r\n\t        };\r\n\t        if ((text.length > 0) && this.config.tokens) {\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    JSXParser.prototype.peekJSXToken = function () {\r\n\t        var state = this.scanner.saveState();\r\n\t        this.scanner.scanComments();\r\n\t        var next = this.lexJSX();\r\n\t        this.scanner.restoreState(state);\r\n\t        return next;\r\n\t    };\r\n\t    // Expect the next JSX token to match the specified punctuator.\r\n\t    // If not, an exception will be thrown.\r\n\t    JSXParser.prototype.expectJSX = function (value) {\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Return true if the next JSX token matches the specified punctuator.\r\n\t    JSXParser.prototype.matchJSX = function (value) {\r\n\t        var next = this.peekJSXToken();\r\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 100 /* Identifier */) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXElementName = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var elementName = this.parseJSXIdentifier();\r\n\t        if (this.matchJSX(':')) {\r\n\t            var namespace = elementName;\r\n\t            this.expectJSX(':');\r\n\t            var name_1 = this.parseJSXIdentifier();\r\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\r\n\t        }\r\n\t        else if (this.matchJSX('.')) {\r\n\t            while (this.matchJSX('.')) {\r\n\t                var object = elementName;\r\n\t                this.expectJSX('.');\r\n\t                var property = this.parseJSXIdentifier();\r\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\r\n\t            }\r\n\t        }\r\n\t        return elementName;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var attributeName;\r\n\t        var identifier = this.parseJSXIdentifier();\r\n\t        if (this.matchJSX(':')) {\r\n\t            var namespace = identifier;\r\n\t            this.expectJSX(':');\r\n\t            var name_2 = this.parseJSXIdentifier();\r\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\r\n\t        }\r\n\t        else {\r\n\t            attributeName = identifier;\r\n\t        }\r\n\t        return attributeName;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var token = this.nextJSXToken();\r\n\t        if (token.type !== 8 /* StringLiteral */) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        var raw = this.getTokenRaw(token);\r\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        this.finishJSX();\r\n\t        if (this.match('}')) {\r\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\r\n\t        }\r\n\t        var expression = this.parseAssignmentExpression();\r\n\t        this.reenterJSX();\r\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\r\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\r\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var name = this.parseJSXAttributeName();\r\n\t        var value = null;\r\n\t        if (this.matchJSX('=')) {\r\n\t            this.expectJSX('=');\r\n\t            value = this.parseJSXAttributeValue();\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        this.expectJSX('...');\r\n\t        this.finishJSX();\r\n\t        var argument = this.parseAssignmentExpression();\r\n\t        this.reenterJSX();\r\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXAttributes = function () {\r\n\t        var attributes = [];\r\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\r\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\r\n\t                this.parseJSXNameValueAttribute();\r\n\t            attributes.push(attribute);\r\n\t        }\r\n\t        return attributes;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('<');\r\n\t        var name = this.parseJSXElementName();\r\n\t        var attributes = this.parseJSXAttributes();\r\n\t        var selfClosing = this.matchJSX('/');\r\n\t        if (selfClosing) {\r\n\t            this.expectJSX('/');\r\n\t        }\r\n\t        this.expectJSX('>');\r\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('<');\r\n\t        if (this.matchJSX('/')) {\r\n\t            this.expectJSX('/');\r\n\t            var name_3 = this.parseJSXElementName();\r\n\t            this.expectJSX('>');\r\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\r\n\t        }\r\n\t        var name = this.parseJSXElementName();\r\n\t        var attributes = this.parseJSXAttributes();\r\n\t        var selfClosing = this.matchJSX('/');\r\n\t        if (selfClosing) {\r\n\t            this.expectJSX('/');\r\n\t        }\r\n\t        this.expectJSX('>');\r\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\r\n\t        var node = this.createJSXChildNode();\r\n\t        this.collectComments();\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        this.expectJSX('{');\r\n\t        var expression;\r\n\t        if (this.matchJSX('}')) {\r\n\t            expression = this.parseJSXEmptyExpression();\r\n\t            this.expectJSX('}');\r\n\t        }\r\n\t        else {\r\n\t            this.finishJSX();\r\n\t            expression = this.parseAssignmentExpression();\r\n\t            this.reenterJSX();\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXChildren = function () {\r\n\t        var children = [];\r\n\t        while (!this.scanner.eof()) {\r\n\t            var node = this.createJSXChildNode();\r\n\t            var token = this.nextJSXText();\r\n\t            if (token.start < token.end) {\r\n\t                var raw = this.getTokenRaw(token);\r\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\r\n\t                children.push(child);\r\n\t            }\r\n\t            if (this.scanner.source[this.scanner.index] === '{') {\r\n\t                var container = this.parseJSXExpressionContainer();\r\n\t                children.push(container);\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return children;\r\n\t    };\r\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\r\n\t        var stack = [];\r\n\t        while (!this.scanner.eof()) {\r\n\t            el.children = el.children.concat(this.parseJSXChildren());\r\n\t            var node = this.createJSXChildNode();\r\n\t            var element = this.parseJSXBoundaryElement();\r\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\r\n\t                var opening = element;\r\n\t                if (opening.selfClosing) {\r\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\r\n\t                    el.children.push(child);\r\n\t                }\r\n\t                else {\r\n\t                    stack.push(el);\r\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\r\n\t                }\r\n\t            }\r\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\r\n\t                el.closing = element;\r\n\t                var open_1 = getQualifiedElementName(el.opening.name);\r\n\t                var close_1 = getQualifiedElementName(el.closing.name);\r\n\t                if (open_1 !== close_1) {\r\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\r\n\t                }\r\n\t                if (stack.length > 0) {\r\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\r\n\t                    el = stack[stack.length - 1];\r\n\t                    el.children.push(child);\r\n\t                    stack.pop();\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return el;\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXElement = function () {\r\n\t        var node = this.createJSXNode();\r\n\t        var opening = this.parseJSXOpeningElement();\r\n\t        var children = [];\r\n\t        var closing = null;\r\n\t        if (!opening.selfClosing) {\r\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\r\n\t            children = el.children;\r\n\t            closing = el.closing;\r\n\t        }\r\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\r\n\t    };\r\n\t    JSXParser.prototype.parseJSXRoot = function () {\r\n\t        // Pop the opening '<' added from the lookahead.\r\n\t        if (this.config.tokens) {\r\n\t            this.tokens.pop();\r\n\t        }\r\n\t        this.startJSX();\r\n\t        var element = this.parseJSXElement();\r\n\t        this.finishJSX();\r\n\t        return element;\r\n\t    };\r\n\t    JSXParser.prototype.isStartOfExpression = function () {\r\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\r\n\t    };\r\n\t    return JSXParser;\r\n\t}(parser_1.Parser));\r\n\texports.JSXParser = JSXParser;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t// See also tools/generate-unicode-regex.js.\r\n\tvar Regex = {\r\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\r\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\r\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\r\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\r\n\t};\r\n\texports.Character = {\r\n\t    /* tslint:disable:no-bitwise */\r\n\t    fromCodePoint: function (cp) {\r\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\r\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\r\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-white-space\r\n\t    isWhiteSpace: function (cp) {\r\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\r\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\r\n\t    isLineTerminator: function (cp) {\r\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t    isIdentifierStart: function (cp) {\r\n\t        return (cp === 0x24) || (cp === 0x5F) ||\r\n\t            (cp >= 0x41 && cp <= 0x5A) ||\r\n\t            (cp >= 0x61 && cp <= 0x7A) ||\r\n\t            (cp === 0x5C) ||\r\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\r\n\t    },\r\n\t    isIdentifierPart: function (cp) {\r\n\t        return (cp === 0x24) || (cp === 0x5F) ||\r\n\t            (cp >= 0x41 && cp <= 0x5A) ||\r\n\t            (cp >= 0x61 && cp <= 0x7A) ||\r\n\t            (cp >= 0x30 && cp <= 0x39) ||\r\n\t            (cp === 0x5C) ||\r\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\r\n\t    },\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t    isDecimalDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\r\n\t    },\r\n\t    isHexDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x39) ||\r\n\t            (cp >= 0x41 && cp <= 0x46) ||\r\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\r\n\t    },\r\n\t    isOctalDigit: function (cp) {\r\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar jsx_syntax_1 = __webpack_require__(6);\r\n\t/* tslint:disable:max-classes-per-file */\r\n\tvar JSXClosingElement = (function () {\r\n\t    function JSXClosingElement(name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXClosingElement;\r\n\t}());\r\n\texports.JSXClosingElement = JSXClosingElement;\r\n\tvar JSXElement = (function () {\r\n\t    function JSXElement(openingElement, children, closingElement) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\r\n\t        this.openingElement = openingElement;\r\n\t        this.children = children;\r\n\t        this.closingElement = closingElement;\r\n\t    }\r\n\t    return JSXElement;\r\n\t}());\r\n\texports.JSXElement = JSXElement;\r\n\tvar JSXEmptyExpression = (function () {\r\n\t    function JSXEmptyExpression() {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\r\n\t    }\r\n\t    return JSXEmptyExpression;\r\n\t}());\r\n\texports.JSXEmptyExpression = JSXEmptyExpression;\r\n\tvar JSXExpressionContainer = (function () {\r\n\t    function JSXExpressionContainer(expression) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return JSXExpressionContainer;\r\n\t}());\r\n\texports.JSXExpressionContainer = JSXExpressionContainer;\r\n\tvar JSXIdentifier = (function () {\r\n\t    function JSXIdentifier(name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXIdentifier;\r\n\t}());\r\n\texports.JSXIdentifier = JSXIdentifier;\r\n\tvar JSXMemberExpression = (function () {\r\n\t    function JSXMemberExpression(object, property) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return JSXMemberExpression;\r\n\t}());\r\n\texports.JSXMemberExpression = JSXMemberExpression;\r\n\tvar JSXAttribute = (function () {\r\n\t    function JSXAttribute(name, value) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\r\n\t        this.name = name;\r\n\t        this.value = value;\r\n\t    }\r\n\t    return JSXAttribute;\r\n\t}());\r\n\texports.JSXAttribute = JSXAttribute;\r\n\tvar JSXNamespacedName = (function () {\r\n\t    function JSXNamespacedName(namespace, name) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\r\n\t        this.namespace = namespace;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return JSXNamespacedName;\r\n\t}());\r\n\texports.JSXNamespacedName = JSXNamespacedName;\r\n\tvar JSXOpeningElement = (function () {\r\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\r\n\t        this.name = name;\r\n\t        this.selfClosing = selfClosing;\r\n\t        this.attributes = attributes;\r\n\t    }\r\n\t    return JSXOpeningElement;\r\n\t}());\r\n\texports.JSXOpeningElement = JSXOpeningElement;\r\n\tvar JSXSpreadAttribute = (function () {\r\n\t    function JSXSpreadAttribute(argument) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return JSXSpreadAttribute;\r\n\t}());\r\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\r\n\tvar JSXText = (function () {\r\n\t    function JSXText(value, raw) {\r\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t    }\r\n\t    return JSXText;\r\n\t}());\r\n\texports.JSXText = JSXText;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.JSXSyntax = {\r\n\t    JSXAttribute: 'JSXAttribute',\r\n\t    JSXClosingElement: 'JSXClosingElement',\r\n\t    JSXElement: 'JSXElement',\r\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\r\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\r\n\t    JSXIdentifier: 'JSXIdentifier',\r\n\t    JSXMemberExpression: 'JSXMemberExpression',\r\n\t    JSXNamespacedName: 'JSXNamespacedName',\r\n\t    JSXOpeningElement: 'JSXOpeningElement',\r\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\r\n\t    JSXText: 'JSXText'\r\n\t};\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\t/* tslint:disable:max-classes-per-file */\r\n\tvar ArrayExpression = (function () {\r\n\t    function ArrayExpression(elements) {\r\n\t        this.type = syntax_1.Syntax.ArrayExpression;\r\n\t        this.elements = elements;\r\n\t    }\r\n\t    return ArrayExpression;\r\n\t}());\r\n\texports.ArrayExpression = ArrayExpression;\r\n\tvar ArrayPattern = (function () {\r\n\t    function ArrayPattern(elements) {\r\n\t        this.type = syntax_1.Syntax.ArrayPattern;\r\n\t        this.elements = elements;\r\n\t    }\r\n\t    return ArrayPattern;\r\n\t}());\r\n\texports.ArrayPattern = ArrayPattern;\r\n\tvar ArrowFunctionExpression = (function () {\r\n\t    function ArrowFunctionExpression(params, body, expression) {\r\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t        this.id = null;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = expression;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return ArrowFunctionExpression;\r\n\t}());\r\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\r\n\tvar AssignmentExpression = (function () {\r\n\t    function AssignmentExpression(operator, left, right) {\r\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\r\n\t        this.operator = operator;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return AssignmentExpression;\r\n\t}());\r\n\texports.AssignmentExpression = AssignmentExpression;\r\n\tvar AssignmentPattern = (function () {\r\n\t    function AssignmentPattern(left, right) {\r\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return AssignmentPattern;\r\n\t}());\r\n\texports.AssignmentPattern = AssignmentPattern;\r\n\tvar AsyncArrowFunctionExpression = (function () {\r\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\r\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\r\n\t        this.id = null;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = expression;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncArrowFunctionExpression;\r\n\t}());\r\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\r\n\tvar AsyncFunctionDeclaration = (function () {\r\n\t    function AsyncFunctionDeclaration(id, params, body) {\r\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = false;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncFunctionDeclaration;\r\n\t}());\r\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\r\n\tvar AsyncFunctionExpression = (function () {\r\n\t    function AsyncFunctionExpression(id, params, body) {\r\n\t        this.type = syntax_1.Syntax.FunctionExpression;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = false;\r\n\t        this.expression = false;\r\n\t        this.async = true;\r\n\t    }\r\n\t    return AsyncFunctionExpression;\r\n\t}());\r\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\r\n\tvar AwaitExpression = (function () {\r\n\t    function AwaitExpression(argument) {\r\n\t        this.type = syntax_1.Syntax.AwaitExpression;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return AwaitExpression;\r\n\t}());\r\n\texports.AwaitExpression = AwaitExpression;\r\n\tvar BinaryExpression = (function () {\r\n\t    function BinaryExpression(operator, left, right) {\r\n\t        var logical = (operator === '||' || operator === '&&');\r\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\r\n\t        this.operator = operator;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t    }\r\n\t    return BinaryExpression;\r\n\t}());\r\n\texports.BinaryExpression = BinaryExpression;\r\n\tvar BlockStatement = (function () {\r\n\t    function BlockStatement(body) {\r\n\t        this.type = syntax_1.Syntax.BlockStatement;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return BlockStatement;\r\n\t}());\r\n\texports.BlockStatement = BlockStatement;\r\n\tvar BreakStatement = (function () {\r\n\t    function BreakStatement(label) {\r\n\t        this.type = syntax_1.Syntax.BreakStatement;\r\n\t        this.label = label;\r\n\t    }\r\n\t    return BreakStatement;\r\n\t}());\r\n\texports.BreakStatement = BreakStatement;\r\n\tvar CallExpression = (function () {\r\n\t    function CallExpression(callee, args) {\r\n\t        this.type = syntax_1.Syntax.CallExpression;\r\n\t        this.callee = callee;\r\n\t        this.arguments = args;\r\n\t    }\r\n\t    return CallExpression;\r\n\t}());\r\n\texports.CallExpression = CallExpression;\r\n\tvar CatchClause = (function () {\r\n\t    function CatchClause(param, body) {\r\n\t        this.type = syntax_1.Syntax.CatchClause;\r\n\t        this.param = param;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return CatchClause;\r\n\t}());\r\n\texports.CatchClause = CatchClause;\r\n\tvar ClassBody = (function () {\r\n\t    function ClassBody(body) {\r\n\t        this.type = syntax_1.Syntax.ClassBody;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassBody;\r\n\t}());\r\n\texports.ClassBody = ClassBody;\r\n\tvar ClassDeclaration = (function () {\r\n\t    function ClassDeclaration(id, superClass, body) {\r\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\r\n\t        this.id = id;\r\n\t        this.superClass = superClass;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassDeclaration;\r\n\t}());\r\n\texports.ClassDeclaration = ClassDeclaration;\r\n\tvar ClassExpression = (function () {\r\n\t    function ClassExpression(id, superClass, body) {\r\n\t        this.type = syntax_1.Syntax.ClassExpression;\r\n\t        this.id = id;\r\n\t        this.superClass = superClass;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ClassExpression;\r\n\t}());\r\n\texports.ClassExpression = ClassExpression;\r\n\tvar ComputedMemberExpression = (function () {\r\n\t    function ComputedMemberExpression(object, property) {\r\n\t        this.type = syntax_1.Syntax.MemberExpression;\r\n\t        this.computed = true;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return ComputedMemberExpression;\r\n\t}());\r\n\texports.ComputedMemberExpression = ComputedMemberExpression;\r\n\tvar ConditionalExpression = (function () {\r\n\t    function ConditionalExpression(test, consequent, alternate) {\r\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t        this.alternate = alternate;\r\n\t    }\r\n\t    return ConditionalExpression;\r\n\t}());\r\n\texports.ConditionalExpression = ConditionalExpression;\r\n\tvar ContinueStatement = (function () {\r\n\t    function ContinueStatement(label) {\r\n\t        this.type = syntax_1.Syntax.ContinueStatement;\r\n\t        this.label = label;\r\n\t    }\r\n\t    return ContinueStatement;\r\n\t}());\r\n\texports.ContinueStatement = ContinueStatement;\r\n\tvar DebuggerStatement = (function () {\r\n\t    function DebuggerStatement() {\r\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\r\n\t    }\r\n\t    return DebuggerStatement;\r\n\t}());\r\n\texports.DebuggerStatement = DebuggerStatement;\r\n\tvar Directive = (function () {\r\n\t    function Directive(expression, directive) {\r\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\r\n\t        this.expression = expression;\r\n\t        this.directive = directive;\r\n\t    }\r\n\t    return Directive;\r\n\t}());\r\n\texports.Directive = Directive;\r\n\tvar DoWhileStatement = (function () {\r\n\t    function DoWhileStatement(body, test) {\r\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\r\n\t        this.body = body;\r\n\t        this.test = test;\r\n\t    }\r\n\t    return DoWhileStatement;\r\n\t}());\r\n\texports.DoWhileStatement = DoWhileStatement;\r\n\tvar EmptyStatement = (function () {\r\n\t    function EmptyStatement() {\r\n\t        this.type = syntax_1.Syntax.EmptyStatement;\r\n\t    }\r\n\t    return EmptyStatement;\r\n\t}());\r\n\texports.EmptyStatement = EmptyStatement;\r\n\tvar ExportAllDeclaration = (function () {\r\n\t    function ExportAllDeclaration(source) {\r\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ExportAllDeclaration;\r\n\t}());\r\n\texports.ExportAllDeclaration = ExportAllDeclaration;\r\n\tvar ExportDefaultDeclaration = (function () {\r\n\t    function ExportDefaultDeclaration(declaration) {\r\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\r\n\t        this.declaration = declaration;\r\n\t    }\r\n\t    return ExportDefaultDeclaration;\r\n\t}());\r\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\r\n\tvar ExportNamedDeclaration = (function () {\r\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\r\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\r\n\t        this.declaration = declaration;\r\n\t        this.specifiers = specifiers;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ExportNamedDeclaration;\r\n\t}());\r\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\r\n\tvar ExportSpecifier = (function () {\r\n\t    function ExportSpecifier(local, exported) {\r\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\r\n\t        this.exported = exported;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ExportSpecifier;\r\n\t}());\r\n\texports.ExportSpecifier = ExportSpecifier;\r\n\tvar ExpressionStatement = (function () {\r\n\t    function ExpressionStatement(expression) {\r\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return ExpressionStatement;\r\n\t}());\r\n\texports.ExpressionStatement = ExpressionStatement;\r\n\tvar ForInStatement = (function () {\r\n\t    function ForInStatement(left, right, body) {\r\n\t        this.type = syntax_1.Syntax.ForInStatement;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t        this.body = body;\r\n\t        this.each = false;\r\n\t    }\r\n\t    return ForInStatement;\r\n\t}());\r\n\texports.ForInStatement = ForInStatement;\r\n\tvar ForOfStatement = (function () {\r\n\t    function ForOfStatement(left, right, body) {\r\n\t        this.type = syntax_1.Syntax.ForOfStatement;\r\n\t        this.left = left;\r\n\t        this.right = right;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ForOfStatement;\r\n\t}());\r\n\texports.ForOfStatement = ForOfStatement;\r\n\tvar ForStatement = (function () {\r\n\t    function ForStatement(init, test, update, body) {\r\n\t        this.type = syntax_1.Syntax.ForStatement;\r\n\t        this.init = init;\r\n\t        this.test = test;\r\n\t        this.update = update;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return ForStatement;\r\n\t}());\r\n\texports.ForStatement = ForStatement;\r\n\tvar FunctionDeclaration = (function () {\r\n\t    function FunctionDeclaration(id, params, body, generator) {\r\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = generator;\r\n\t        this.expression = false;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return FunctionDeclaration;\r\n\t}());\r\n\texports.FunctionDeclaration = FunctionDeclaration;\r\n\tvar FunctionExpression = (function () {\r\n\t    function FunctionExpression(id, params, body, generator) {\r\n\t        this.type = syntax_1.Syntax.FunctionExpression;\r\n\t        this.id = id;\r\n\t        this.params = params;\r\n\t        this.body = body;\r\n\t        this.generator = generator;\r\n\t        this.expression = false;\r\n\t        this.async = false;\r\n\t    }\r\n\t    return FunctionExpression;\r\n\t}());\r\n\texports.FunctionExpression = FunctionExpression;\r\n\tvar Identifier = (function () {\r\n\t    function Identifier(name) {\r\n\t        this.type = syntax_1.Syntax.Identifier;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return Identifier;\r\n\t}());\r\n\texports.Identifier = Identifier;\r\n\tvar IfStatement = (function () {\r\n\t    function IfStatement(test, consequent, alternate) {\r\n\t        this.type = syntax_1.Syntax.IfStatement;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t        this.alternate = alternate;\r\n\t    }\r\n\t    return IfStatement;\r\n\t}());\r\n\texports.IfStatement = IfStatement;\r\n\tvar ImportDeclaration = (function () {\r\n\t    function ImportDeclaration(specifiers, source) {\r\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\r\n\t        this.specifiers = specifiers;\r\n\t        this.source = source;\r\n\t    }\r\n\t    return ImportDeclaration;\r\n\t}());\r\n\texports.ImportDeclaration = ImportDeclaration;\r\n\tvar ImportDefaultSpecifier = (function () {\r\n\t    function ImportDefaultSpecifier(local) {\r\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ImportDefaultSpecifier;\r\n\t}());\r\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\r\n\tvar ImportNamespaceSpecifier = (function () {\r\n\t    function ImportNamespaceSpecifier(local) {\r\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\r\n\t        this.local = local;\r\n\t    }\r\n\t    return ImportNamespaceSpecifier;\r\n\t}());\r\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\r\n\tvar ImportSpecifier = (function () {\r\n\t    function ImportSpecifier(local, imported) {\r\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\r\n\t        this.local = local;\r\n\t        this.imported = imported;\r\n\t    }\r\n\t    return ImportSpecifier;\r\n\t}());\r\n\texports.ImportSpecifier = ImportSpecifier;\r\n\tvar LabeledStatement = (function () {\r\n\t    function LabeledStatement(label, body) {\r\n\t        this.type = syntax_1.Syntax.LabeledStatement;\r\n\t        this.label = label;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return LabeledStatement;\r\n\t}());\r\n\texports.LabeledStatement = LabeledStatement;\r\n\tvar Literal = (function () {\r\n\t    function Literal(value, raw) {\r\n\t        this.type = syntax_1.Syntax.Literal;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t    }\r\n\t    return Literal;\r\n\t}());\r\n\texports.Literal = Literal;\r\n\tvar MetaProperty = (function () {\r\n\t    function MetaProperty(meta, property) {\r\n\t        this.type = syntax_1.Syntax.MetaProperty;\r\n\t        this.meta = meta;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return MetaProperty;\r\n\t}());\r\n\texports.MetaProperty = MetaProperty;\r\n\tvar MethodDefinition = (function () {\r\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\r\n\t        this.type = syntax_1.Syntax.MethodDefinition;\r\n\t        this.key = key;\r\n\t        this.computed = computed;\r\n\t        this.value = value;\r\n\t        this.kind = kind;\r\n\t        this.static = isStatic;\r\n\t    }\r\n\t    return MethodDefinition;\r\n\t}());\r\n\texports.MethodDefinition = MethodDefinition;\r\n\tvar Module = (function () {\r\n\t    function Module(body) {\r\n\t        this.type = syntax_1.Syntax.Program;\r\n\t        this.body = body;\r\n\t        this.sourceType = 'module';\r\n\t    }\r\n\t    return Module;\r\n\t}());\r\n\texports.Module = Module;\r\n\tvar NewExpression = (function () {\r\n\t    function NewExpression(callee, args) {\r\n\t        this.type = syntax_1.Syntax.NewExpression;\r\n\t        this.callee = callee;\r\n\t        this.arguments = args;\r\n\t    }\r\n\t    return NewExpression;\r\n\t}());\r\n\texports.NewExpression = NewExpression;\r\n\tvar ObjectExpression = (function () {\r\n\t    function ObjectExpression(properties) {\r\n\t        this.type = syntax_1.Syntax.ObjectExpression;\r\n\t        this.properties = properties;\r\n\t    }\r\n\t    return ObjectExpression;\r\n\t}());\r\n\texports.ObjectExpression = ObjectExpression;\r\n\tvar ObjectPattern = (function () {\r\n\t    function ObjectPattern(properties) {\r\n\t        this.type = syntax_1.Syntax.ObjectPattern;\r\n\t        this.properties = properties;\r\n\t    }\r\n\t    return ObjectPattern;\r\n\t}());\r\n\texports.ObjectPattern = ObjectPattern;\r\n\tvar Property = (function () {\r\n\t    function Property(kind, key, computed, value, method, shorthand) {\r\n\t        this.type = syntax_1.Syntax.Property;\r\n\t        this.key = key;\r\n\t        this.computed = computed;\r\n\t        this.value = value;\r\n\t        this.kind = kind;\r\n\t        this.method = method;\r\n\t        this.shorthand = shorthand;\r\n\t    }\r\n\t    return Property;\r\n\t}());\r\n\texports.Property = Property;\r\n\tvar RegexLiteral = (function () {\r\n\t    function RegexLiteral(value, raw, pattern, flags) {\r\n\t        this.type = syntax_1.Syntax.Literal;\r\n\t        this.value = value;\r\n\t        this.raw = raw;\r\n\t        this.regex = { pattern: pattern, flags: flags };\r\n\t    }\r\n\t    return RegexLiteral;\r\n\t}());\r\n\texports.RegexLiteral = RegexLiteral;\r\n\tvar RestElement = (function () {\r\n\t    function RestElement(argument) {\r\n\t        this.type = syntax_1.Syntax.RestElement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return RestElement;\r\n\t}());\r\n\texports.RestElement = RestElement;\r\n\tvar ReturnStatement = (function () {\r\n\t    function ReturnStatement(argument) {\r\n\t        this.type = syntax_1.Syntax.ReturnStatement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return ReturnStatement;\r\n\t}());\r\n\texports.ReturnStatement = ReturnStatement;\r\n\tvar Script = (function () {\r\n\t    function Script(body) {\r\n\t        this.type = syntax_1.Syntax.Program;\r\n\t        this.body = body;\r\n\t        this.sourceType = 'script';\r\n\t    }\r\n\t    return Script;\r\n\t}());\r\n\texports.Script = Script;\r\n\tvar SequenceExpression = (function () {\r\n\t    function SequenceExpression(expressions) {\r\n\t        this.type = syntax_1.Syntax.SequenceExpression;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return SequenceExpression;\r\n\t}());\r\n\texports.SequenceExpression = SequenceExpression;\r\n\tvar SpreadElement = (function () {\r\n\t    function SpreadElement(argument) {\r\n\t        this.type = syntax_1.Syntax.SpreadElement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return SpreadElement;\r\n\t}());\r\n\texports.SpreadElement = SpreadElement;\r\n\tvar StaticMemberExpression = (function () {\r\n\t    function StaticMemberExpression(object, property) {\r\n\t        this.type = syntax_1.Syntax.MemberExpression;\r\n\t        this.computed = false;\r\n\t        this.object = object;\r\n\t        this.property = property;\r\n\t    }\r\n\t    return StaticMemberExpression;\r\n\t}());\r\n\texports.StaticMemberExpression = StaticMemberExpression;\r\n\tvar Super = (function () {\r\n\t    function Super() {\r\n\t        this.type = syntax_1.Syntax.Super;\r\n\t    }\r\n\t    return Super;\r\n\t}());\r\n\texports.Super = Super;\r\n\tvar SwitchCase = (function () {\r\n\t    function SwitchCase(test, consequent) {\r\n\t        this.type = syntax_1.Syntax.SwitchCase;\r\n\t        this.test = test;\r\n\t        this.consequent = consequent;\r\n\t    }\r\n\t    return SwitchCase;\r\n\t}());\r\n\texports.SwitchCase = SwitchCase;\r\n\tvar SwitchStatement = (function () {\r\n\t    function SwitchStatement(discriminant, cases) {\r\n\t        this.type = syntax_1.Syntax.SwitchStatement;\r\n\t        this.discriminant = discriminant;\r\n\t        this.cases = cases;\r\n\t    }\r\n\t    return SwitchStatement;\r\n\t}());\r\n\texports.SwitchStatement = SwitchStatement;\r\n\tvar TaggedTemplateExpression = (function () {\r\n\t    function TaggedTemplateExpression(tag, quasi) {\r\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\r\n\t        this.tag = tag;\r\n\t        this.quasi = quasi;\r\n\t    }\r\n\t    return TaggedTemplateExpression;\r\n\t}());\r\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\r\n\tvar TemplateElement = (function () {\r\n\t    function TemplateElement(value, tail) {\r\n\t        this.type = syntax_1.Syntax.TemplateElement;\r\n\t        this.value = value;\r\n\t        this.tail = tail;\r\n\t    }\r\n\t    return TemplateElement;\r\n\t}());\r\n\texports.TemplateElement = TemplateElement;\r\n\tvar TemplateLiteral = (function () {\r\n\t    function TemplateLiteral(quasis, expressions) {\r\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\r\n\t        this.quasis = quasis;\r\n\t        this.expressions = expressions;\r\n\t    }\r\n\t    return TemplateLiteral;\r\n\t}());\r\n\texports.TemplateLiteral = TemplateLiteral;\r\n\tvar ThisExpression = (function () {\r\n\t    function ThisExpression() {\r\n\t        this.type = syntax_1.Syntax.ThisExpression;\r\n\t    }\r\n\t    return ThisExpression;\r\n\t}());\r\n\texports.ThisExpression = ThisExpression;\r\n\tvar ThrowStatement = (function () {\r\n\t    function ThrowStatement(argument) {\r\n\t        this.type = syntax_1.Syntax.ThrowStatement;\r\n\t        this.argument = argument;\r\n\t    }\r\n\t    return ThrowStatement;\r\n\t}());\r\n\texports.ThrowStatement = ThrowStatement;\r\n\tvar TryStatement = (function () {\r\n\t    function TryStatement(block, handler, finalizer) {\r\n\t        this.type = syntax_1.Syntax.TryStatement;\r\n\t        this.block = block;\r\n\t        this.handler = handler;\r\n\t        this.finalizer = finalizer;\r\n\t    }\r\n\t    return TryStatement;\r\n\t}());\r\n\texports.TryStatement = TryStatement;\r\n\tvar UnaryExpression = (function () {\r\n\t    function UnaryExpression(operator, argument) {\r\n\t        this.type = syntax_1.Syntax.UnaryExpression;\r\n\t        this.operator = operator;\r\n\t        this.argument = argument;\r\n\t        this.prefix = true;\r\n\t    }\r\n\t    return UnaryExpression;\r\n\t}());\r\n\texports.UnaryExpression = UnaryExpression;\r\n\tvar UpdateExpression = (function () {\r\n\t    function UpdateExpression(operator, argument, prefix) {\r\n\t        this.type = syntax_1.Syntax.UpdateExpression;\r\n\t        this.operator = operator;\r\n\t        this.argument = argument;\r\n\t        this.prefix = prefix;\r\n\t    }\r\n\t    return UpdateExpression;\r\n\t}());\r\n\texports.UpdateExpression = UpdateExpression;\r\n\tvar VariableDeclaration = (function () {\r\n\t    function VariableDeclaration(declarations, kind) {\r\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\r\n\t        this.declarations = declarations;\r\n\t        this.kind = kind;\r\n\t    }\r\n\t    return VariableDeclaration;\r\n\t}());\r\n\texports.VariableDeclaration = VariableDeclaration;\r\n\tvar VariableDeclarator = (function () {\r\n\t    function VariableDeclarator(id, init) {\r\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\r\n\t        this.id = id;\r\n\t        this.init = init;\r\n\t    }\r\n\t    return VariableDeclarator;\r\n\t}());\r\n\texports.VariableDeclarator = VariableDeclarator;\r\n\tvar WhileStatement = (function () {\r\n\t    function WhileStatement(test, body) {\r\n\t        this.type = syntax_1.Syntax.WhileStatement;\r\n\t        this.test = test;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return WhileStatement;\r\n\t}());\r\n\texports.WhileStatement = WhileStatement;\r\n\tvar WithStatement = (function () {\r\n\t    function WithStatement(object, body) {\r\n\t        this.type = syntax_1.Syntax.WithStatement;\r\n\t        this.object = object;\r\n\t        this.body = body;\r\n\t    }\r\n\t    return WithStatement;\r\n\t}());\r\n\texports.WithStatement = WithStatement;\r\n\tvar YieldExpression = (function () {\r\n\t    function YieldExpression(argument, delegate) {\r\n\t        this.type = syntax_1.Syntax.YieldExpression;\r\n\t        this.argument = argument;\r\n\t        this.delegate = delegate;\r\n\t    }\r\n\t    return YieldExpression;\r\n\t}());\r\n\texports.YieldExpression = YieldExpression;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar assert_1 = __webpack_require__(9);\r\n\tvar error_handler_1 = __webpack_require__(10);\r\n\tvar messages_1 = __webpack_require__(11);\r\n\tvar Node = __webpack_require__(7);\r\n\tvar scanner_1 = __webpack_require__(12);\r\n\tvar syntax_1 = __webpack_require__(2);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\r\n\tvar Parser = (function () {\r\n\t    function Parser(code, options, delegate) {\r\n\t        if (options === void 0) { options = {}; }\r\n\t        this.config = {\r\n\t            range: (typeof options.range === 'boolean') && options.range,\r\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\r\n\t            source: null,\r\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\r\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\r\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\r\n\t        };\r\n\t        if (this.config.loc && options.source && options.source !== null) {\r\n\t            this.config.source = String(options.source);\r\n\t        }\r\n\t        this.delegate = delegate;\r\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\r\n\t        this.errorHandler.tolerant = this.config.tolerant;\r\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t        this.scanner.trackComment = this.config.comment;\r\n\t        this.operatorPrecedence = {\r\n\t            ')': 0,\r\n\t            ';': 0,\r\n\t            ',': 0,\r\n\t            '=': 0,\r\n\t            ']': 0,\r\n\t            '||': 1,\r\n\t            '&&': 2,\r\n\t            '|': 3,\r\n\t            '^': 4,\r\n\t            '&': 5,\r\n\t            '==': 6,\r\n\t            '!=': 6,\r\n\t            '===': 6,\r\n\t            '!==': 6,\r\n\t            '<': 7,\r\n\t            '>': 7,\r\n\t            '<=': 7,\r\n\t            '>=': 7,\r\n\t            '<<': 8,\r\n\t            '>>': 8,\r\n\t            '>>>': 8,\r\n\t            '+': 9,\r\n\t            '-': 9,\r\n\t            '*': 11,\r\n\t            '/': 11,\r\n\t            '%': 11\r\n\t        };\r\n\t        this.lookahead = {\r\n\t            type: 2 /* EOF */,\r\n\t            value: '',\r\n\t            lineNumber: this.scanner.lineNumber,\r\n\t            lineStart: 0,\r\n\t            start: 0,\r\n\t            end: 0\r\n\t        };\r\n\t        this.hasLineTerminator = false;\r\n\t        this.context = {\r\n\t            isModule: false,\r\n\t            await: false,\r\n\t            allowIn: true,\r\n\t            allowStrictDirective: true,\r\n\t            allowYield: true,\r\n\t            firstCoverInitializedNameError: null,\r\n\t            isAssignmentTarget: false,\r\n\t            isBindingElement: false,\r\n\t            inFunctionBody: false,\r\n\t            inIteration: false,\r\n\t            inSwitch: false,\r\n\t            labelSet: {},\r\n\t            strict: false\r\n\t        };\r\n\t        this.tokens = [];\r\n\t        this.startMarker = {\r\n\t            index: 0,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: 0\r\n\t        };\r\n\t        this.lastMarker = {\r\n\t            index: 0,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: 0\r\n\t        };\r\n\t        this.nextToken();\r\n\t        this.lastMarker = {\r\n\t            index: this.scanner.index,\r\n\t            line: this.scanner.lineNumber,\r\n\t            column: this.scanner.index - this.scanner.lineStart\r\n\t        };\r\n\t    }\r\n\t    Parser.prototype.throwError = function (messageFormat) {\r\n\t        var values = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            values[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        var args = Array.prototype.slice.call(arguments, 1);\r\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t            return args[idx];\r\n\t        });\r\n\t        var index = this.lastMarker.index;\r\n\t        var line = this.lastMarker.line;\r\n\t        var column = this.lastMarker.column + 1;\r\n\t        throw this.errorHandler.createError(index, line, column, msg);\r\n\t    };\r\n\t    Parser.prototype.tolerateError = function (messageFormat) {\r\n\t        var values = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            values[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        var args = Array.prototype.slice.call(arguments, 1);\r\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\r\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\r\n\t            return args[idx];\r\n\t        });\r\n\t        var index = this.lastMarker.index;\r\n\t        var line = this.scanner.lineNumber;\r\n\t        var column = this.lastMarker.column + 1;\r\n\t        this.errorHandler.tolerateError(index, line, column, msg);\r\n\t    };\r\n\t    // Throw an exception because of the token.\r\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\r\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\r\n\t        var value;\r\n\t        if (token) {\r\n\t            if (!message) {\r\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\r\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\r\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\r\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\r\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\r\n\t                                    messages_1.Messages.UnexpectedToken;\r\n\t                if (token.type === 4 /* Keyword */) {\r\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\r\n\t                        msg = messages_1.Messages.UnexpectedReserved;\r\n\t                    }\r\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                        msg = messages_1.Messages.StrictReservedWord;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            value = token.value;\r\n\t        }\r\n\t        else {\r\n\t            value = 'ILLEGAL';\r\n\t        }\r\n\t        msg = msg.replace('%0', value);\r\n\t        if (token && typeof token.lineNumber === 'number') {\r\n\t            var index = token.start;\r\n\t            var line = token.lineNumber;\r\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\r\n\t            var column = token.start - lastMarkerLineStart + 1;\r\n\t            return this.errorHandler.createError(index, line, column, msg);\r\n\t        }\r\n\t        else {\r\n\t            var index = this.lastMarker.index;\r\n\t            var line = this.lastMarker.line;\r\n\t            var column = this.lastMarker.column + 1;\r\n\t            return this.errorHandler.createError(index, line, column, msg);\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\r\n\t        throw this.unexpectedTokenError(token, message);\r\n\t    };\r\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\r\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\r\n\t    };\r\n\t    Parser.prototype.collectComments = function () {\r\n\t        if (!this.config.comment) {\r\n\t            this.scanner.scanComments();\r\n\t        }\r\n\t        else {\r\n\t            var comments = this.scanner.scanComments();\r\n\t            if (comments.length > 0 && this.delegate) {\r\n\t                for (var i = 0; i < comments.length; ++i) {\r\n\t                    var e = comments[i];\r\n\t                    var node = void 0;\r\n\t                    node = {\r\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\r\n\t                    };\r\n\t                    if (this.config.range) {\r\n\t                        node.range = e.range;\r\n\t                    }\r\n\t                    if (this.config.loc) {\r\n\t                        node.loc = e.loc;\r\n\t                    }\r\n\t                    var metadata = {\r\n\t                        start: {\r\n\t                            line: e.loc.start.line,\r\n\t                            column: e.loc.start.column,\r\n\t                            offset: e.range[0]\r\n\t                        },\r\n\t                        end: {\r\n\t                            line: e.loc.end.line,\r\n\t                            column: e.loc.end.column,\r\n\t                            offset: e.range[1]\r\n\t                        }\r\n\t                    };\r\n\t                    this.delegate(node, metadata);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    // From internal representation to an external structure\r\n\t    Parser.prototype.getTokenRaw = function (token) {\r\n\t        return this.scanner.source.slice(token.start, token.end);\r\n\t    };\r\n\t    Parser.prototype.convertToken = function (token) {\r\n\t        var t = {\r\n\t            type: token_1.TokenName[token.type],\r\n\t            value: this.getTokenRaw(token)\r\n\t        };\r\n\t        if (this.config.range) {\r\n\t            t.range = [token.start, token.end];\r\n\t        }\r\n\t        if (this.config.loc) {\r\n\t            t.loc = {\r\n\t                start: {\r\n\t                    line: this.startMarker.line,\r\n\t                    column: this.startMarker.column\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.scanner.lineNumber,\r\n\t                    column: this.scanner.index - this.scanner.lineStart\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t        if (token.type === 9 /* RegularExpression */) {\r\n\t            var pattern = token.pattern;\r\n\t            var flags = token.flags;\r\n\t            t.regex = { pattern: pattern, flags: flags };\r\n\t        }\r\n\t        return t;\r\n\t    };\r\n\t    Parser.prototype.nextToken = function () {\r\n\t        var token = this.lookahead;\r\n\t        this.lastMarker.index = this.scanner.index;\r\n\t        this.lastMarker.line = this.scanner.lineNumber;\r\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        this.collectComments();\r\n\t        if (this.scanner.index !== this.startMarker.index) {\r\n\t            this.startMarker.index = this.scanner.index;\r\n\t            this.startMarker.line = this.scanner.lineNumber;\r\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\r\n\t        }\r\n\t        var next = this.scanner.lex();\r\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\r\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\r\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\r\n\t                next.type = 4 /* Keyword */;\r\n\t            }\r\n\t        }\r\n\t        this.lookahead = next;\r\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\r\n\t            this.tokens.push(this.convertToken(next));\r\n\t        }\r\n\t        return token;\r\n\t    };\r\n\t    Parser.prototype.nextRegexToken = function () {\r\n\t        this.collectComments();\r\n\t        var token = this.scanner.scanRegExp();\r\n\t        if (this.config.tokens) {\r\n\t            // Pop the previous token, '/' or '/='\r\n\t            // This is added from the lookahead token.\r\n\t            this.tokens.pop();\r\n\t            this.tokens.push(this.convertToken(token));\r\n\t        }\r\n\t        // Prime the next lookahead.\r\n\t        this.lookahead = token;\r\n\t        this.nextToken();\r\n\t        return token;\r\n\t    };\r\n\t    Parser.prototype.createNode = function () {\r\n\t        return {\r\n\t            index: this.startMarker.index,\r\n\t            line: this.startMarker.line,\r\n\t            column: this.startMarker.column\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.startNode = function (token) {\r\n\t        return {\r\n\t            index: token.start,\r\n\t            line: token.lineNumber,\r\n\t            column: token.start - token.lineStart\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.finalize = function (marker, node) {\r\n\t        if (this.config.range) {\r\n\t            node.range = [marker.index, this.lastMarker.index];\r\n\t        }\r\n\t        if (this.config.loc) {\r\n\t            node.loc = {\r\n\t                start: {\r\n\t                    line: marker.line,\r\n\t                    column: marker.column,\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.lastMarker.line,\r\n\t                    column: this.lastMarker.column\r\n\t                }\r\n\t            };\r\n\t            if (this.config.source) {\r\n\t                node.loc.source = this.config.source;\r\n\t            }\r\n\t        }\r\n\t        if (this.delegate) {\r\n\t            var metadata = {\r\n\t                start: {\r\n\t                    line: marker.line,\r\n\t                    column: marker.column,\r\n\t                    offset: marker.index\r\n\t                },\r\n\t                end: {\r\n\t                    line: this.lastMarker.line,\r\n\t                    column: this.lastMarker.column,\r\n\t                    offset: this.lastMarker.index\r\n\t                }\r\n\t            };\r\n\t            this.delegate(node, metadata);\r\n\t        }\r\n\t        return node;\r\n\t    };\r\n\t    // Expect the next token to match the specified punctuator.\r\n\t    // If not, an exception will be thrown.\r\n\t    Parser.prototype.expect = function (value) {\r\n\t        var token = this.nextToken();\r\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\r\n\t    Parser.prototype.expectCommaSeparator = function () {\r\n\t        if (this.config.tolerant) {\r\n\t            var token = this.lookahead;\r\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\r\n\t                this.nextToken();\r\n\t            }\r\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\r\n\t                this.nextToken();\r\n\t                this.tolerateUnexpectedToken(token);\r\n\t            }\r\n\t            else {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            this.expect(',');\r\n\t        }\r\n\t    };\r\n\t    // Expect the next token to match the specified keyword.\r\n\t    // If not, an exception will be thrown.\r\n\t    Parser.prototype.expectKeyword = function (keyword) {\r\n\t        var token = this.nextToken();\r\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t    };\r\n\t    // Return true if the next token matches the specified punctuator.\r\n\t    Parser.prototype.match = function (value) {\r\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\r\n\t    };\r\n\t    // Return true if the next token matches the specified keyword\r\n\t    Parser.prototype.matchKeyword = function (keyword) {\r\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\r\n\t    };\r\n\t    // Return true if the next token matches the specified contextual keyword\r\n\t    // (where an identifier is sometimes a keyword depending on the context)\r\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\r\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\r\n\t    };\r\n\t    // Return true if the next token is an assignment operator\r\n\t    Parser.prototype.matchAssign = function () {\r\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\r\n\t            return false;\r\n\t        }\r\n\t        var op = this.lookahead.value;\r\n\t        return op === '=' ||\r\n\t            op === '*=' ||\r\n\t            op === '**=' ||\r\n\t            op === '/=' ||\r\n\t            op === '%=' ||\r\n\t            op === '+=' ||\r\n\t            op === '-=' ||\r\n\t            op === '<<=' ||\r\n\t            op === '>>=' ||\r\n\t            op === '>>>=' ||\r\n\t            op === '&=' ||\r\n\t            op === '^=' ||\r\n\t            op === '|=';\r\n\t    };\r\n\t    // Cover grammar support.\r\n\t    //\r\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\r\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\r\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\r\n\t    //\r\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\r\n\t    // after the outermost pair is closed. They are:\r\n\t    //\r\n\t    //   1. AssignmentExpression\r\n\t    //   2. BindingElements\r\n\t    //   3. AssignmentTargets\r\n\t    //\r\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\r\n\t    // binding element or assignment target.\r\n\t    //\r\n\t    // The three productions have the relationship:\r\n\t    //\r\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\r\n\t    //\r\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\r\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\r\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\r\n\t    //\r\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\r\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\r\n\t    // the CoverInitializedName check is conducted.\r\n\t    //\r\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\r\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\r\n\t    // pattern. The CoverInitializedName check is deferred.\r\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\r\n\t        var previousIsBindingElement = this.context.isBindingElement;\r\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t        this.context.isBindingElement = true;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        var result = parseFunction.call(this);\r\n\t        if (this.context.firstCoverInitializedNameError !== null) {\r\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\r\n\t        }\r\n\t        this.context.isBindingElement = previousIsBindingElement;\r\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\r\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\r\n\t        return result;\r\n\t    };\r\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\r\n\t        var previousIsBindingElement = this.context.isBindingElement;\r\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\r\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\r\n\t        this.context.isBindingElement = true;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        var result = parseFunction.call(this);\r\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\r\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\r\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\r\n\t        return result;\r\n\t    };\r\n\t    Parser.prototype.consumeSemicolon = function () {\r\n\t        if (this.match(';')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else if (!this.hasLineTerminator) {\r\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            this.lastMarker.index = this.startMarker.index;\r\n\t            this.lastMarker.line = this.startMarker.line;\r\n\t            this.lastMarker.column = this.startMarker.column;\r\n\t        }\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\r\n\t    Parser.prototype.parsePrimaryExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr;\r\n\t        var token, raw;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 3 /* Identifier */:\r\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\r\n\t                    this.tolerateUnexpectedToken(this.lookahead);\r\n\t                }\r\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t                break;\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 8 /* StringLiteral */:\r\n\t                if (this.context.strict && this.lookahead.octal) {\r\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t                break;\r\n\t            case 1 /* BooleanLiteral */:\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\r\n\t                break;\r\n\t            case 5 /* NullLiteral */:\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                token = this.nextToken();\r\n\t                raw = this.getTokenRaw(token);\r\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\r\n\t                break;\r\n\t            case 10 /* Template */:\r\n\t                expr = this.parseTemplateLiteral();\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                switch (this.lookahead.value) {\r\n\t                    case '(':\r\n\t                        this.context.isBindingElement = false;\r\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\r\n\t                        break;\r\n\t                    case '[':\r\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\r\n\t                        break;\r\n\t                    case '{':\r\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\r\n\t                        break;\r\n\t                    case '/':\r\n\t                    case '/=':\r\n\t                        this.context.isAssignmentTarget = false;\r\n\t                        this.context.isBindingElement = false;\r\n\t                        this.scanner.index = this.startMarker.index;\r\n\t                        token = this.nextRegexToken();\r\n\t                        raw = this.getTokenRaw(token);\r\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\r\n\t                        break;\r\n\t                    default:\r\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\r\n\t                }\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\r\n\t                    expr = this.parseIdentifierName();\r\n\t                }\r\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\r\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\r\n\t                }\r\n\t                else {\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    if (this.matchKeyword('function')) {\r\n\t                        expr = this.parseFunctionExpression();\r\n\t                    }\r\n\t                    else if (this.matchKeyword('this')) {\r\n\t                        this.nextToken();\r\n\t                        expr = this.finalize(node, new Node.ThisExpression());\r\n\t                    }\r\n\t                    else if (this.matchKeyword('class')) {\r\n\t                        expr = this.parseClassExpression();\r\n\t                    }\r\n\t                    else {\r\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                expr = this.throwUnexpectedToken(this.nextToken());\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\r\n\t    Parser.prototype.parseSpreadElement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t        return this.finalize(node, new Node.SpreadElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseArrayInitializer = function () {\r\n\t        var node = this.createNode();\r\n\t        var elements = [];\r\n\t        this.expect('[');\r\n\t        while (!this.match(']')) {\r\n\t            if (this.match(',')) {\r\n\t                this.nextToken();\r\n\t                elements.push(null);\r\n\t            }\r\n\t            else if (this.match('...')) {\r\n\t                var element = this.parseSpreadElement();\r\n\t                if (!this.match(']')) {\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    this.expect(',');\r\n\t                }\r\n\t                elements.push(element);\r\n\t            }\r\n\t            else {\r\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t                if (!this.match(']')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(']');\r\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\r\n\t    Parser.prototype.parsePropertyMethod = function (params) {\r\n\t        this.context.isAssignmentTarget = false;\r\n\t        this.context.isBindingElement = false;\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = params.simple;\r\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\r\n\t        if (this.context.strict && params.firstRestricted) {\r\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\r\n\t        }\r\n\t        if (this.context.strict && params.stricted) {\r\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        return body;\r\n\t    };\r\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\r\n\t        var isGenerator = false;\r\n\t        var node = this.createNode();\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = false;\r\n\t        var params = this.parseFormalParameters();\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\r\n\t        var node = this.createNode();\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        var previousAwait = this.context.await;\r\n\t        this.context.allowYield = false;\r\n\t        this.context.await = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        this.context.await = previousAwait;\r\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\r\n\t    };\r\n\t    Parser.prototype.parseObjectPropertyKey = function () {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var key;\r\n\t        switch (token.type) {\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t                if (this.context.strict && token.octal) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                var raw = this.getTokenRaw(token);\r\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\r\n\t                break;\r\n\t            case 3 /* Identifier */:\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 4 /* Keyword */:\r\n\t                key = this.finalize(node, new Node.Identifier(token.value));\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                if (token.value === '[') {\r\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    this.expect(']');\r\n\t                }\r\n\t                else {\r\n\t                    key = this.throwUnexpectedToken(token);\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                key = this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return key;\r\n\t    };\r\n\t    Parser.prototype.isPropertyKey = function (key, value) {\r\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\r\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\r\n\t    };\r\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\r\n\t        var node = this.createNode();\r\n\t        var token = this.lookahead;\r\n\t        var kind;\r\n\t        var key = null;\r\n\t        var value = null;\r\n\t        var computed = false;\r\n\t        var method = false;\r\n\t        var shorthand = false;\r\n\t        var isAsync = false;\r\n\t        if (token.type === 3 /* Identifier */) {\r\n\t            var id = token.value;\r\n\t            this.nextToken();\r\n\t            computed = this.match('[');\r\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\r\n\t                !this.match(':') && !this.match('(') && !this.match('*');\r\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\r\n\t        }\r\n\t        else if (this.match('*')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t        }\r\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\r\n\t            kind = 'get';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            this.context.allowYield = false;\r\n\t            value = this.parseGetterMethod();\r\n\t        }\r\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\r\n\t            kind = 'set';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseSetterMethod();\r\n\t        }\r\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t            kind = 'init';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseGeneratorMethod();\r\n\t            method = true;\r\n\t        }\r\n\t        else {\r\n\t            if (!key) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            kind = 'init';\r\n\t            if (this.match(':') && !isAsync) {\r\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\r\n\t                    if (hasProto.value) {\r\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\r\n\t                    }\r\n\t                    hasProto.value = true;\r\n\t                }\r\n\t                this.nextToken();\r\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t            }\r\n\t            else if (this.match('(')) {\r\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t                method = true;\r\n\t            }\r\n\t            else if (token.type === 3 /* Identifier */) {\r\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\r\n\t                if (this.match('=')) {\r\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\r\n\t                    this.nextToken();\r\n\t                    shorthand = true;\r\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\r\n\t                }\r\n\t                else {\r\n\t                    shorthand = true;\r\n\t                    value = id;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\r\n\t    };\r\n\t    Parser.prototype.parseObjectInitializer = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var properties = [];\r\n\t        var hasProto = { value: false };\r\n\t        while (!this.match('}')) {\r\n\t            properties.push(this.parseObjectProperty(hasProto));\r\n\t            if (!this.match('}')) {\r\n\t                this.expectCommaSeparator();\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\r\n\t    Parser.prototype.parseTemplateHead = function () {\r\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var raw = token.value;\r\n\t        var cooked = token.cooked;\r\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t    };\r\n\t    Parser.prototype.parseTemplateElement = function () {\r\n\t        if (this.lookahead.type !== 10 /* Template */) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        var raw = token.value;\r\n\t        var cooked = token.cooked;\r\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\r\n\t    };\r\n\t    Parser.prototype.parseTemplateLiteral = function () {\r\n\t        var node = this.createNode();\r\n\t        var expressions = [];\r\n\t        var quasis = [];\r\n\t        var quasi = this.parseTemplateHead();\r\n\t        quasis.push(quasi);\r\n\t        while (!quasi.tail) {\r\n\t            expressions.push(this.parseExpression());\r\n\t            quasi = this.parseTemplateElement();\r\n\t            quasis.push(quasi);\r\n\t        }\r\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\r\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\r\n\t        switch (expr.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t            case syntax_1.Syntax.MemberExpression:\r\n\t            case syntax_1.Syntax.RestElement:\r\n\t            case syntax_1.Syntax.AssignmentPattern:\r\n\t                break;\r\n\t            case syntax_1.Syntax.SpreadElement:\r\n\t                expr.type = syntax_1.Syntax.RestElement;\r\n\t                this.reinterpretExpressionAsPattern(expr.argument);\r\n\t                break;\r\n\t            case syntax_1.Syntax.ArrayExpression:\r\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\r\n\t                for (var i = 0; i < expr.elements.length; i++) {\r\n\t                    if (expr.elements[i] !== null) {\r\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.ObjectExpression:\r\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\r\n\t                for (var i = 0; i < expr.properties.length; i++) {\r\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.AssignmentExpression:\r\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\r\n\t                delete expr.operator;\r\n\t                this.reinterpretExpressionAsPattern(expr.left);\r\n\t                break;\r\n\t            default:\r\n\t                // Allow other node type for tolerant parsing.\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.parseGroupExpression = function () {\r\n\t        var expr;\r\n\t        this.expect('(');\r\n\t        if (this.match(')')) {\r\n\t            this.nextToken();\r\n\t            if (!this.match('=>')) {\r\n\t                this.expect('=>');\r\n\t            }\r\n\t            expr = {\r\n\t                type: ArrowParameterPlaceHolder,\r\n\t                params: [],\r\n\t                async: false\r\n\t            };\r\n\t        }\r\n\t        else {\r\n\t            var startToken = this.lookahead;\r\n\t            var params = [];\r\n\t            if (this.match('...')) {\r\n\t                expr = this.parseRestElement(params);\r\n\t                this.expect(')');\r\n\t                if (!this.match('=>')) {\r\n\t                    this.expect('=>');\r\n\t                }\r\n\t                expr = {\r\n\t                    type: ArrowParameterPlaceHolder,\r\n\t                    params: [expr],\r\n\t                    async: false\r\n\t                };\r\n\t            }\r\n\t            else {\r\n\t                var arrow = false;\r\n\t                this.context.isBindingElement = true;\r\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t                if (this.match(',')) {\r\n\t                    var expressions = [];\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    expressions.push(expr);\r\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                        if (!this.match(',')) {\r\n\t                            break;\r\n\t                        }\r\n\t                        this.nextToken();\r\n\t                        if (this.match(')')) {\r\n\t                            this.nextToken();\r\n\t                            for (var i = 0; i < expressions.length; i++) {\r\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\r\n\t                            }\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: expressions,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        else if (this.match('...')) {\r\n\t                            if (!this.context.isBindingElement) {\r\n\t                                this.throwUnexpectedToken(this.lookahead);\r\n\t                            }\r\n\t                            expressions.push(this.parseRestElement(params));\r\n\t                            this.expect(')');\r\n\t                            if (!this.match('=>')) {\r\n\t                                this.expect('=>');\r\n\t                            }\r\n\t                            this.context.isBindingElement = false;\r\n\t                            for (var i = 0; i < expressions.length; i++) {\r\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\r\n\t                            }\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: expressions,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        else {\r\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\r\n\t                        }\r\n\t                        if (arrow) {\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                    if (!arrow) {\r\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t                    }\r\n\t                }\r\n\t                if (!arrow) {\r\n\t                    this.expect(')');\r\n\t                    if (this.match('=>')) {\r\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\r\n\t                            arrow = true;\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: [expr],\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                        if (!arrow) {\r\n\t                            if (!this.context.isBindingElement) {\r\n\t                                this.throwUnexpectedToken(this.lookahead);\r\n\t                            }\r\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\r\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\r\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\r\n\t                                }\r\n\t                            }\r\n\t                            else {\r\n\t                                this.reinterpretExpressionAsPattern(expr);\r\n\t                            }\r\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\r\n\t                            expr = {\r\n\t                                type: ArrowParameterPlaceHolder,\r\n\t                                params: parameters,\r\n\t                                async: false\r\n\t                            };\r\n\t                        }\r\n\t                    }\r\n\t                    this.context.isBindingElement = false;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\r\n\t    Parser.prototype.parseArguments = function () {\r\n\t        this.expect('(');\r\n\t        var args = [];\r\n\t        if (!this.match(')')) {\r\n\t            while (true) {\r\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\r\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                args.push(expr);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expectCommaSeparator();\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return args;\r\n\t    };\r\n\t    Parser.prototype.isIdentifierName = function (token) {\r\n\t        return token.type === 3 /* Identifier */ ||\r\n\t            token.type === 4 /* Keyword */ ||\r\n\t            token.type === 1 /* BooleanLiteral */ ||\r\n\t            token.type === 5 /* NullLiteral */;\r\n\t    };\r\n\t    Parser.prototype.parseIdentifierName = function () {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        if (!this.isIdentifierName(token)) {\r\n\t            this.throwUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Identifier(token.value));\r\n\t    };\r\n\t    Parser.prototype.parseNewExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var id = this.parseIdentifierName();\r\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\r\n\t        var expr;\r\n\t        if (this.match('.')) {\r\n\t            this.nextToken();\r\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = new Node.MetaProperty(id, property);\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\r\n\t            var args = this.match('(') ? this.parseArguments() : [];\r\n\t            expr = new Node.NewExpression(callee, args);\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        return this.finalize(node, expr);\r\n\t    };\r\n\t    Parser.prototype.parseAsyncArgument = function () {\r\n\t        var arg = this.parseAssignmentExpression();\r\n\t        this.context.firstCoverInitializedNameError = null;\r\n\t        return arg;\r\n\t    };\r\n\t    Parser.prototype.parseAsyncArguments = function () {\r\n\t        this.expect('(');\r\n\t        var args = [];\r\n\t        if (!this.match(')')) {\r\n\t            while (true) {\r\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\r\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\r\n\t                args.push(expr);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expectCommaSeparator();\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return args;\r\n\t    };\r\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var maybeAsync = this.matchContextualKeyword('async');\r\n\t        var previousAllowIn = this.context.allowIn;\r\n\t        this.context.allowIn = true;\r\n\t        var expr;\r\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\r\n\t            expr = this.createNode();\r\n\t            this.nextToken();\r\n\t            expr = this.finalize(expr, new Node.Super());\r\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t        }\r\n\t        while (true) {\r\n\t            if (this.match('.')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('.');\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.match('(')) {\r\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\r\n\t                if (asyncArrow && this.match('=>')) {\r\n\t                    for (var i = 0; i < args.length; ++i) {\r\n\t                        this.reinterpretExpressionAsPattern(args[i]);\r\n\t                    }\r\n\t                    expr = {\r\n\t                        type: ArrowParameterPlaceHolder,\r\n\t                        params: args,\r\n\t                        async: true\r\n\t                    };\r\n\t                }\r\n\t            }\r\n\t            else if (this.match('[')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('[');\r\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\r\n\t                this.expect(']');\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t                var quasi = this.parseTemplateLiteral();\r\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        this.context.allowIn = previousAllowIn;\r\n\t        return expr;\r\n\t    };\r\n\t    Parser.prototype.parseSuper = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('super');\r\n\t        if (!this.match('[') && !this.match('.')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Super());\r\n\t    };\r\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\r\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\r\n\t        var node = this.startNode(this.lookahead);\r\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\r\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\r\n\t        while (true) {\r\n\t            if (this.match('[')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('[');\r\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\r\n\t                this.expect(']');\r\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.match('.')) {\r\n\t                this.context.isBindingElement = false;\r\n\t                this.context.isAssignmentTarget = true;\r\n\t                this.expect('.');\r\n\t                var property = this.parseIdentifierName();\r\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\r\n\t            }\r\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\r\n\t                var quasi = this.parseTemplateLiteral();\r\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\r\n\t    Parser.prototype.parseUpdateExpression = function () {\r\n\t        var expr;\r\n\t        var startToken = this.lookahead;\r\n\t        if (this.match('++') || this.match('--')) {\r\n\t            var node = this.startNode(startToken);\r\n\t            var token = this.nextToken();\r\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\r\n\t            }\r\n\t            if (!this.context.isAssignmentTarget) {\r\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t            }\r\n\t            var prefix = true;\r\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        else {\r\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\r\n\t                if (this.match('++') || this.match('--')) {\r\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\r\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\r\n\t                    }\r\n\t                    if (!this.context.isAssignmentTarget) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t                    }\r\n\t                    this.context.isAssignmentTarget = false;\r\n\t                    this.context.isBindingElement = false;\r\n\t                    var operator = this.nextToken().value;\r\n\t                    var prefix = false;\r\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\r\n\t    Parser.prototype.parseAwaitExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        this.nextToken();\r\n\t        var argument = this.parseUnaryExpression();\r\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\r\n\t    };\r\n\t    Parser.prototype.parseUnaryExpression = function () {\r\n\t        var expr;\r\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\r\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\r\n\t            var node = this.startNode(this.lookahead);\r\n\t            var token = this.nextToken();\r\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\r\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\r\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\r\n\t            }\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\r\n\t            expr = this.parseAwaitExpression();\r\n\t        }\r\n\t        else {\r\n\t            expr = this.parseUpdateExpression();\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    Parser.prototype.parseExponentiationExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\r\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\r\n\t            this.nextToken();\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t            var left = expr;\r\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\r\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\r\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\r\n\t    Parser.prototype.binaryPrecedence = function (token) {\r\n\t        var op = token.value;\r\n\t        var precedence;\r\n\t        if (token.type === 7 /* Punctuator */) {\r\n\t            precedence = this.operatorPrecedence[op] || 0;\r\n\t        }\r\n\t        else if (token.type === 4 /* Keyword */) {\r\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\r\n\t        }\r\n\t        else {\r\n\t            precedence = 0;\r\n\t        }\r\n\t        return precedence;\r\n\t    };\r\n\t    Parser.prototype.parseBinaryExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\r\n\t        var token = this.lookahead;\r\n\t        var prec = this.binaryPrecedence(token);\r\n\t        if (prec > 0) {\r\n\t            this.nextToken();\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t            var markers = [startToken, this.lookahead];\r\n\t            var left = expr;\r\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\r\n\t            var stack = [left, token.value, right];\r\n\t            var precedences = [prec];\r\n\t            while (true) {\r\n\t                prec = this.binaryPrecedence(this.lookahead);\r\n\t                if (prec <= 0) {\r\n\t                    break;\r\n\t                }\r\n\t                // Reduce: make a binary expression from the three topmost entries.\r\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\r\n\t                    right = stack.pop();\r\n\t                    var operator = stack.pop();\r\n\t                    precedences.pop();\r\n\t                    left = stack.pop();\r\n\t                    markers.pop();\r\n\t                    var node = this.startNode(markers[markers.length - 1]);\r\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\r\n\t                }\r\n\t                // Shift.\r\n\t                stack.push(this.nextToken().value);\r\n\t                precedences.push(prec);\r\n\t                markers.push(this.lookahead);\r\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\r\n\t            }\r\n\t            // Final reduce to clean-up the stack.\r\n\t            var i = stack.length - 1;\r\n\t            expr = stack[i];\r\n\t            markers.pop();\r\n\t            while (i > 1) {\r\n\t                var node = this.startNode(markers.pop());\r\n\t                var operator = stack[i - 1];\r\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\r\n\t                i -= 2;\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\r\n\t    Parser.prototype.parseConditionalExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\r\n\t        if (this.match('?')) {\r\n\t            this.nextToken();\r\n\t            var previousAllowIn = this.context.allowIn;\r\n\t            this.context.allowIn = true;\r\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            this.context.allowIn = previousAllowIn;\r\n\t            this.expect(':');\r\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\r\n\t            this.context.isAssignmentTarget = false;\r\n\t            this.context.isBindingElement = false;\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\r\n\t    Parser.prototype.checkPatternParam = function (options, param) {\r\n\t        switch (param.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t                this.validateParam(options, param, param.name);\r\n\t                break;\r\n\t            case syntax_1.Syntax.RestElement:\r\n\t                this.checkPatternParam(options, param.argument);\r\n\t                break;\r\n\t            case syntax_1.Syntax.AssignmentPattern:\r\n\t                this.checkPatternParam(options, param.left);\r\n\t                break;\r\n\t            case syntax_1.Syntax.ArrayPattern:\r\n\t                for (var i = 0; i < param.elements.length; i++) {\r\n\t                    if (param.elements[i] !== null) {\r\n\t                        this.checkPatternParam(options, param.elements[i]);\r\n\t                    }\r\n\t                }\r\n\t                break;\r\n\t            case syntax_1.Syntax.ObjectPattern:\r\n\t                for (var i = 0; i < param.properties.length; i++) {\r\n\t                    this.checkPatternParam(options, param.properties[i].value);\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\r\n\t    };\r\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\r\n\t        var params = [expr];\r\n\t        var options;\r\n\t        var asyncArrow = false;\r\n\t        switch (expr.type) {\r\n\t            case syntax_1.Syntax.Identifier:\r\n\t                break;\r\n\t            case ArrowParameterPlaceHolder:\r\n\t                params = expr.params;\r\n\t                asyncArrow = expr.async;\r\n\t                break;\r\n\t            default:\r\n\t                return null;\r\n\t        }\r\n\t        options = {\r\n\t            simple: true,\r\n\t            paramSet: {}\r\n\t        };\r\n\t        for (var i = 0; i < params.length; ++i) {\r\n\t            var param = params[i];\r\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\r\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\r\n\t                    if (param.right.argument) {\r\n\t                        this.throwUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                    param.right.type = syntax_1.Syntax.Identifier;\r\n\t                    param.right.name = 'yield';\r\n\t                    delete param.right.argument;\r\n\t                    delete param.right.delegate;\r\n\t                }\r\n\t            }\r\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\r\n\t                this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            this.checkPatternParam(options, param);\r\n\t            params[i] = param;\r\n\t        }\r\n\t        if (this.context.strict || !this.context.allowYield) {\r\n\t            for (var i = 0; i < params.length; ++i) {\r\n\t                var param = params[i];\r\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\r\n\t                    this.throwUnexpectedToken(this.lookahead);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\r\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\r\n\t            this.throwUnexpectedToken(token, options.message);\r\n\t        }\r\n\t        return {\r\n\t            simple: options.simple,\r\n\t            params: params,\r\n\t            stricted: options.stricted,\r\n\t            firstRestricted: options.firstRestricted,\r\n\t            message: options.message\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.parseAssignmentExpression = function () {\r\n\t        var expr;\r\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\r\n\t            expr = this.parseYieldExpression();\r\n\t        }\r\n\t        else {\r\n\t            var startToken = this.lookahead;\r\n\t            var token = startToken;\r\n\t            expr = this.parseConditionalExpression();\r\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\r\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\r\n\t                    var arg = this.parsePrimaryExpression();\r\n\t                    this.reinterpretExpressionAsPattern(arg);\r\n\t                    expr = {\r\n\t                        type: ArrowParameterPlaceHolder,\r\n\t                        params: [arg],\r\n\t                        async: true\r\n\t                    };\r\n\t                }\r\n\t            }\r\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\r\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\r\n\t                this.context.isAssignmentTarget = false;\r\n\t                this.context.isBindingElement = false;\r\n\t                var isAsync = expr.async;\r\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\r\n\t                if (list) {\r\n\t                    if (this.hasLineTerminator) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                    this.context.firstCoverInitializedNameError = null;\r\n\t                    var previousStrict = this.context.strict;\r\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t                    this.context.allowStrictDirective = list.simple;\r\n\t                    var previousAllowYield = this.context.allowYield;\r\n\t                    var previousAwait = this.context.await;\r\n\t                    this.context.allowYield = true;\r\n\t                    this.context.await = isAsync;\r\n\t                    var node = this.startNode(startToken);\r\n\t                    this.expect('=>');\r\n\t                    var body = void 0;\r\n\t                    if (this.match('{')) {\r\n\t                        var previousAllowIn = this.context.allowIn;\r\n\t                        this.context.allowIn = true;\r\n\t                        body = this.parseFunctionSourceElements();\r\n\t                        this.context.allowIn = previousAllowIn;\r\n\t                    }\r\n\t                    else {\r\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    }\r\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\r\n\t                    if (this.context.strict && list.firstRestricted) {\r\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\r\n\t                    }\r\n\t                    if (this.context.strict && list.stricted) {\r\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\r\n\t                    }\r\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\r\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\r\n\t                    this.context.strict = previousStrict;\r\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t                    this.context.allowYield = previousAllowYield;\r\n\t                    this.context.await = previousAwait;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.matchAssign()) {\r\n\t                    if (!this.context.isAssignmentTarget) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\r\n\t                    }\r\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\r\n\t                        var id = expr;\r\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\r\n\t                        }\r\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t                        }\r\n\t                    }\r\n\t                    if (!this.match('=')) {\r\n\t                        this.context.isAssignmentTarget = false;\r\n\t                        this.context.isBindingElement = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.reinterpretExpressionAsPattern(expr);\r\n\t                    }\r\n\t                    token = this.nextToken();\r\n\t                    var operator = token.value;\r\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\r\n\t                    this.context.firstCoverInitializedNameError = null;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\r\n\t    Parser.prototype.parseExpression = function () {\r\n\t        var startToken = this.lookahead;\r\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        if (this.match(',')) {\r\n\t            var expressions = [];\r\n\t            expressions.push(expr);\r\n\t            while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                if (!this.match(',')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.nextToken();\r\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t            }\r\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\r\n\t        }\r\n\t        return expr;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-block\r\n\t    Parser.prototype.parseStatementListItem = function () {\r\n\t        var statement;\r\n\t        this.context.isAssignmentTarget = true;\r\n\t        this.context.isBindingElement = true;\r\n\t        if (this.lookahead.type === 4 /* Keyword */) {\r\n\t            switch (this.lookahead.value) {\r\n\t                case 'export':\r\n\t                    if (!this.context.isModule) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\r\n\t                    }\r\n\t                    statement = this.parseExportDeclaration();\r\n\t                    break;\r\n\t                case 'import':\r\n\t                    if (!this.context.isModule) {\r\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\r\n\t                    }\r\n\t                    statement = this.parseImportDeclaration();\r\n\t                    break;\r\n\t                case 'const':\r\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\r\n\t                    break;\r\n\t                case 'function':\r\n\t                    statement = this.parseFunctionDeclaration();\r\n\t                    break;\r\n\t                case 'class':\r\n\t                    statement = this.parseClassDeclaration();\r\n\t                    break;\r\n\t                case 'let':\r\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\r\n\t                    break;\r\n\t                default:\r\n\t                    statement = this.parseStatement();\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            statement = this.parseStatement();\r\n\t        }\r\n\t        return statement;\r\n\t    };\r\n\t    Parser.prototype.parseBlock = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var block = [];\r\n\t        while (true) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            block.push(this.parseStatementListItem());\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.BlockStatement(block));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\r\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\r\n\t        var node = this.createNode();\r\n\t        var params = [];\r\n\t        var id = this.parsePattern(params, kind);\r\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\r\n\t            }\r\n\t        }\r\n\t        var init = null;\r\n\t        if (kind === 'const') {\r\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\r\n\t                if (this.match('=')) {\r\n\t                    this.nextToken();\r\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t                }\r\n\t                else {\r\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\r\n\t            this.expect('=');\r\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        }\r\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t    };\r\n\t    Parser.prototype.parseBindingList = function (kind, options) {\r\n\t        var list = [this.parseLexicalBinding(kind, options)];\r\n\t        while (this.match(',')) {\r\n\t            this.nextToken();\r\n\t            list.push(this.parseLexicalBinding(kind, options));\r\n\t        }\r\n\t        return list;\r\n\t    };\r\n\t    Parser.prototype.isLexicalDeclaration = function () {\r\n\t        var state = this.scanner.saveState();\r\n\t        this.scanner.scanComments();\r\n\t        var next = this.scanner.lex();\r\n\t        this.scanner.restoreState(state);\r\n\t        return (next.type === 3 /* Identifier */) ||\r\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\r\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\r\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\r\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\r\n\t    };\r\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\r\n\t        var node = this.createNode();\r\n\t        var kind = this.nextToken().value;\r\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\r\n\t        var declarations = this.parseBindingList(kind, options);\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\r\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params, kind);\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('[');\r\n\t        var elements = [];\r\n\t        while (!this.match(']')) {\r\n\t            if (this.match(',')) {\r\n\t                this.nextToken();\r\n\t                elements.push(null);\r\n\t            }\r\n\t            else {\r\n\t                if (this.match('...')) {\r\n\t                    elements.push(this.parseBindingRestElement(params, kind));\r\n\t                    break;\r\n\t                }\r\n\t                else {\r\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\r\n\t                }\r\n\t                if (!this.match(']')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(']');\r\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\r\n\t    };\r\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        var computed = false;\r\n\t        var shorthand = false;\r\n\t        var method = false;\r\n\t        var key;\r\n\t        var value;\r\n\t        if (this.lookahead.type === 3 /* Identifier */) {\r\n\t            var keyToken = this.lookahead;\r\n\t            key = this.parseVariableIdentifier();\r\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\r\n\t            if (this.match('=')) {\r\n\t                params.push(keyToken);\r\n\t                shorthand = true;\r\n\t                this.nextToken();\r\n\t                var expr = this.parseAssignmentExpression();\r\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\r\n\t            }\r\n\t            else if (!this.match(':')) {\r\n\t                params.push(keyToken);\r\n\t                shorthand = true;\r\n\t                value = init;\r\n\t            }\r\n\t            else {\r\n\t                this.expect(':');\r\n\t                value = this.parsePatternWithDefault(params, kind);\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            this.expect(':');\r\n\t            value = this.parsePatternWithDefault(params, kind);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\r\n\t    };\r\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\r\n\t        var node = this.createNode();\r\n\t        var properties = [];\r\n\t        this.expect('{');\r\n\t        while (!this.match('}')) {\r\n\t            properties.push(this.parsePropertyPattern(params, kind));\r\n\t            if (!this.match('}')) {\r\n\t                this.expect(',');\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\r\n\t    };\r\n\t    Parser.prototype.parsePattern = function (params, kind) {\r\n\t        var pattern;\r\n\t        if (this.match('[')) {\r\n\t            pattern = this.parseArrayPattern(params, kind);\r\n\t        }\r\n\t        else if (this.match('{')) {\r\n\t            pattern = this.parseObjectPattern(params, kind);\r\n\t        }\r\n\t        else {\r\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\r\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\r\n\t            }\r\n\t            params.push(this.lookahead);\r\n\t            pattern = this.parseVariableIdentifier(kind);\r\n\t        }\r\n\t        return pattern;\r\n\t    };\r\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\r\n\t        var startToken = this.lookahead;\r\n\t        var pattern = this.parsePattern(params, kind);\r\n\t        if (this.match('=')) {\r\n\t            this.nextToken();\r\n\t            var previousAllowYield = this.context.allowYield;\r\n\t            this.context.allowYield = true;\r\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t            this.context.allowYield = previousAllowYield;\r\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\r\n\t        }\r\n\t        return pattern;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\r\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\r\n\t        var node = this.createNode();\r\n\t        var token = this.nextToken();\r\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\r\n\t            if (this.context.strict) {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t            }\r\n\t            else if (!this.context.allowYield) {\r\n\t                this.throwUnexpectedToken(token);\r\n\t            }\r\n\t        }\r\n\t        else if (token.type !== 3 /* Identifier */) {\r\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\r\n\t            }\r\n\t            else {\r\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\r\n\t                    this.throwUnexpectedToken(token);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\r\n\t            this.tolerateUnexpectedToken(token);\r\n\t        }\r\n\t        return this.finalize(node, new Node.Identifier(token.value));\r\n\t    };\r\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\r\n\t        var node = this.createNode();\r\n\t        var params = [];\r\n\t        var id = this.parsePattern(params, 'var');\r\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(id.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\r\n\t            }\r\n\t        }\r\n\t        var init = null;\r\n\t        if (this.match('=')) {\r\n\t            this.nextToken();\r\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\r\n\t        }\r\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\r\n\t            this.expect('=');\r\n\t        }\r\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\r\n\t    };\r\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\r\n\t        var opt = { inFor: options.inFor };\r\n\t        var list = [];\r\n\t        list.push(this.parseVariableDeclaration(opt));\r\n\t        while (this.match(',')) {\r\n\t            this.nextToken();\r\n\t            list.push(this.parseVariableDeclaration(opt));\r\n\t        }\r\n\t        return list;\r\n\t    };\r\n\t    Parser.prototype.parseVariableStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('var');\r\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\r\n\t    Parser.prototype.parseEmptyStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect(';');\r\n\t        return this.finalize(node, new Node.EmptyStatement());\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\r\n\t    Parser.prototype.parseExpressionStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\r\n\t    Parser.prototype.parseIfClause = function () {\r\n\t        if (this.context.strict && this.matchKeyword('function')) {\r\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\r\n\t        }\r\n\t        return this.parseStatement();\r\n\t    };\r\n\t    Parser.prototype.parseIfStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var consequent;\r\n\t        var alternate = null;\r\n\t        this.expectKeyword('if');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            consequent = this.parseIfClause();\r\n\t            if (this.matchKeyword('else')) {\r\n\t                this.nextToken();\r\n\t                alternate = this.parseIfClause();\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\r\n\t    Parser.prototype.parseDoWhileStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('do');\r\n\t        var previousInIteration = this.context.inIteration;\r\n\t        this.context.inIteration = true;\r\n\t        var body = this.parseStatement();\r\n\t        this.context.inIteration = previousInIteration;\r\n\t        this.expectKeyword('while');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            if (this.match(';')) {\r\n\t                this.nextToken();\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\r\n\t    Parser.prototype.parseWhileStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var body;\r\n\t        this.expectKeyword('while');\r\n\t        this.expect('(');\r\n\t        var test = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            var previousInIteration = this.context.inIteration;\r\n\t            this.context.inIteration = true;\r\n\t            body = this.parseStatement();\r\n\t            this.context.inIteration = previousInIteration;\r\n\t        }\r\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\r\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\r\n\t    Parser.prototype.parseForStatement = function () {\r\n\t        var init = null;\r\n\t        var test = null;\r\n\t        var update = null;\r\n\t        var forIn = true;\r\n\t        var left, right;\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('for');\r\n\t        this.expect('(');\r\n\t        if (this.match(';')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            if (this.matchKeyword('var')) {\r\n\t                init = this.createNode();\r\n\t                this.nextToken();\r\n\t                var previousAllowIn = this.context.allowIn;\r\n\t                this.context.allowIn = false;\r\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\r\n\t                this.context.allowIn = previousAllowIn;\r\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\r\n\t                    var decl = declarations[0];\r\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\r\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\r\n\t                    }\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseAssignmentExpression();\r\n\t                    init = null;\r\n\t                    forIn = false;\r\n\t                }\r\n\t                else {\r\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\r\n\t                    this.expect(';');\r\n\t                }\r\n\t            }\r\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\r\n\t                init = this.createNode();\r\n\t                var kind = this.nextToken().value;\r\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\r\n\t                    init = this.finalize(init, new Node.Identifier(kind));\r\n\t                    this.nextToken();\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else {\r\n\t                    var previousAllowIn = this.context.allowIn;\r\n\t                    this.context.allowIn = false;\r\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\r\n\t                    this.context.allowIn = previousAllowIn;\r\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                        this.nextToken();\r\n\t                        left = init;\r\n\t                        right = this.parseExpression();\r\n\t                        init = null;\r\n\t                    }\r\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                        this.nextToken();\r\n\t                        left = init;\r\n\t                        right = this.parseAssignmentExpression();\r\n\t                        init = null;\r\n\t                        forIn = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.consumeSemicolon();\r\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                var initStartToken = this.lookahead;\r\n\t                var previousAllowIn = this.context.allowIn;\r\n\t                this.context.allowIn = false;\r\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\r\n\t                this.context.allowIn = previousAllowIn;\r\n\t                if (this.matchKeyword('in')) {\r\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\r\n\t                    }\r\n\t                    this.nextToken();\r\n\t                    this.reinterpretExpressionAsPattern(init);\r\n\t                    left = init;\r\n\t                    right = this.parseExpression();\r\n\t                    init = null;\r\n\t                }\r\n\t                else if (this.matchContextualKeyword('of')) {\r\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\r\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\r\n\t                    }\r\n\t                    this.nextToken();\r\n\t                    this.reinterpretExpressionAsPattern(init);\r\n\t                    left = init;\r\n\t                    right = this.parseAssignmentExpression();\r\n\t                    init = null;\r\n\t                    forIn = false;\r\n\t                }\r\n\t                else {\r\n\t                    if (this.match(',')) {\r\n\t                        var initSeq = [init];\r\n\t                        while (this.match(',')) {\r\n\t                            this.nextToken();\r\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\r\n\t                        }\r\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\r\n\t                    }\r\n\t                    this.expect(';');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (typeof left === 'undefined') {\r\n\t            if (!this.match(';')) {\r\n\t                test = this.parseExpression();\r\n\t            }\r\n\t            this.expect(';');\r\n\t            if (!this.match(')')) {\r\n\t                update = this.parseExpression();\r\n\t            }\r\n\t        }\r\n\t        var body;\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            var previousInIteration = this.context.inIteration;\r\n\t            this.context.inIteration = true;\r\n\t            body = this.isolateCoverGrammar(this.parseStatement);\r\n\t            this.context.inIteration = previousInIteration;\r\n\t        }\r\n\t        return (typeof left === 'undefined') ?\r\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\r\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\r\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\r\n\t    Parser.prototype.parseContinueStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('continue');\r\n\t        var label = null;\r\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t            var id = this.parseVariableIdentifier();\r\n\t            label = id;\r\n\t            var key = '$' + id.name;\r\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t            }\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        if (label === null && !this.context.inIteration) {\r\n\t            this.throwError(messages_1.Messages.IllegalContinue);\r\n\t        }\r\n\t        return this.finalize(node, new Node.ContinueStatement(label));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\r\n\t    Parser.prototype.parseBreakStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('break');\r\n\t        var label = null;\r\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\r\n\t            var id = this.parseVariableIdentifier();\r\n\t            var key = '$' + id.name;\r\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\r\n\t            }\r\n\t            label = id;\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\r\n\t            this.throwError(messages_1.Messages.IllegalBreak);\r\n\t        }\r\n\t        return this.finalize(node, new Node.BreakStatement(label));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\r\n\t    Parser.prototype.parseReturnStatement = function () {\r\n\t        if (!this.context.inFunctionBody) {\r\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('return');\r\n\t        var hasArgument = !this.match(';') && !this.match('}') &&\r\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */;\r\n\t        var argument = hasArgument ? this.parseExpression() : null;\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\r\n\t    Parser.prototype.parseWithStatement = function () {\r\n\t        if (this.context.strict) {\r\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        var body;\r\n\t        this.expectKeyword('with');\r\n\t        this.expect('(');\r\n\t        var object = this.parseExpression();\r\n\t        if (!this.match(')') && this.config.tolerant) {\r\n\t            this.tolerateUnexpectedToken(this.nextToken());\r\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\r\n\t        }\r\n\t        else {\r\n\t            this.expect(')');\r\n\t            body = this.parseStatement();\r\n\t        }\r\n\t        return this.finalize(node, new Node.WithStatement(object, body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\r\n\t    Parser.prototype.parseSwitchCase = function () {\r\n\t        var node = this.createNode();\r\n\t        var test;\r\n\t        if (this.matchKeyword('default')) {\r\n\t            this.nextToken();\r\n\t            test = null;\r\n\t        }\r\n\t        else {\r\n\t            this.expectKeyword('case');\r\n\t            test = this.parseExpression();\r\n\t        }\r\n\t        this.expect(':');\r\n\t        var consequent = [];\r\n\t        while (true) {\r\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\r\n\t                break;\r\n\t            }\r\n\t            consequent.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\r\n\t    };\r\n\t    Parser.prototype.parseSwitchStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('switch');\r\n\t        this.expect('(');\r\n\t        var discriminant = this.parseExpression();\r\n\t        this.expect(')');\r\n\t        var previousInSwitch = this.context.inSwitch;\r\n\t        this.context.inSwitch = true;\r\n\t        var cases = [];\r\n\t        var defaultFound = false;\r\n\t        this.expect('{');\r\n\t        while (true) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            var clause = this.parseSwitchCase();\r\n\t            if (clause.test === null) {\r\n\t                if (defaultFound) {\r\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\r\n\t                }\r\n\t                defaultFound = true;\r\n\t            }\r\n\t            cases.push(clause);\r\n\t        }\r\n\t        this.expect('}');\r\n\t        this.context.inSwitch = previousInSwitch;\r\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\r\n\t    Parser.prototype.parseLabelledStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        var statement;\r\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\r\n\t            this.nextToken();\r\n\t            var id = expr;\r\n\t            var key = '$' + id.name;\r\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\r\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\r\n\t            }\r\n\t            this.context.labelSet[key] = true;\r\n\t            var body = void 0;\r\n\t            if (this.matchKeyword('class')) {\r\n\t                this.tolerateUnexpectedToken(this.lookahead);\r\n\t                body = this.parseClassDeclaration();\r\n\t            }\r\n\t            else if (this.matchKeyword('function')) {\r\n\t                var token = this.lookahead;\r\n\t                var declaration = this.parseFunctionDeclaration();\r\n\t                if (this.context.strict) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\r\n\t                }\r\n\t                else if (declaration.generator) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\r\n\t                }\r\n\t                body = declaration;\r\n\t            }\r\n\t            else {\r\n\t                body = this.parseStatement();\r\n\t            }\r\n\t            delete this.context.labelSet[key];\r\n\t            statement = new Node.LabeledStatement(id, body);\r\n\t        }\r\n\t        else {\r\n\t            this.consumeSemicolon();\r\n\t            statement = new Node.ExpressionStatement(expr);\r\n\t        }\r\n\t        return this.finalize(node, statement);\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\r\n\t    Parser.prototype.parseThrowStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('throw');\r\n\t        if (this.hasLineTerminator) {\r\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\r\n\t        }\r\n\t        var argument = this.parseExpression();\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\r\n\t    Parser.prototype.parseCatchClause = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('catch');\r\n\t        this.expect('(');\r\n\t        if (this.match(')')) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        var params = [];\r\n\t        var param = this.parsePattern(params);\r\n\t        var paramMap = {};\r\n\t        for (var i = 0; i < params.length; i++) {\r\n\t            var key = '$' + params[i].value;\r\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\r\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\r\n\t            }\r\n\t            paramMap[key] = true;\r\n\t        }\r\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\r\n\t            if (this.scanner.isRestrictedWord(param.name)) {\r\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        var body = this.parseBlock();\r\n\t        return this.finalize(node, new Node.CatchClause(param, body));\r\n\t    };\r\n\t    Parser.prototype.parseFinallyClause = function () {\r\n\t        this.expectKeyword('finally');\r\n\t        return this.parseBlock();\r\n\t    };\r\n\t    Parser.prototype.parseTryStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('try');\r\n\t        var block = this.parseBlock();\r\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\r\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\r\n\t        if (!handler && !finalizer) {\r\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\r\n\t        }\r\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\r\n\t    Parser.prototype.parseDebuggerStatement = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('debugger');\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.DebuggerStatement());\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\r\n\t    Parser.prototype.parseStatement = function () {\r\n\t        var statement;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 10 /* Template */:\r\n\t            case 9 /* RegularExpression */:\r\n\t                statement = this.parseExpressionStatement();\r\n\t                break;\r\n\t            case 7 /* Punctuator */:\r\n\t                var value = this.lookahead.value;\r\n\t                if (value === '{') {\r\n\t                    statement = this.parseBlock();\r\n\t                }\r\n\t                else if (value === '(') {\r\n\t                    statement = this.parseExpressionStatement();\r\n\t                }\r\n\t                else if (value === ';') {\r\n\t                    statement = this.parseEmptyStatement();\r\n\t                }\r\n\t                else {\r\n\t                    statement = this.parseExpressionStatement();\r\n\t                }\r\n\t                break;\r\n\t            case 3 /* Identifier */:\r\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                switch (this.lookahead.value) {\r\n\t                    case 'break':\r\n\t                        statement = this.parseBreakStatement();\r\n\t                        break;\r\n\t                    case 'continue':\r\n\t                        statement = this.parseContinueStatement();\r\n\t                        break;\r\n\t                    case 'debugger':\r\n\t                        statement = this.parseDebuggerStatement();\r\n\t                        break;\r\n\t                    case 'do':\r\n\t                        statement = this.parseDoWhileStatement();\r\n\t                        break;\r\n\t                    case 'for':\r\n\t                        statement = this.parseForStatement();\r\n\t                        break;\r\n\t                    case 'function':\r\n\t                        statement = this.parseFunctionDeclaration();\r\n\t                        break;\r\n\t                    case 'if':\r\n\t                        statement = this.parseIfStatement();\r\n\t                        break;\r\n\t                    case 'return':\r\n\t                        statement = this.parseReturnStatement();\r\n\t                        break;\r\n\t                    case 'switch':\r\n\t                        statement = this.parseSwitchStatement();\r\n\t                        break;\r\n\t                    case 'throw':\r\n\t                        statement = this.parseThrowStatement();\r\n\t                        break;\r\n\t                    case 'try':\r\n\t                        statement = this.parseTryStatement();\r\n\t                        break;\r\n\t                    case 'var':\r\n\t                        statement = this.parseVariableStatement();\r\n\t                        break;\r\n\t                    case 'while':\r\n\t                        statement = this.parseWhileStatement();\r\n\t                        break;\r\n\t                    case 'with':\r\n\t                        statement = this.parseWithStatement();\r\n\t                        break;\r\n\t                    default:\r\n\t                        statement = this.parseExpressionStatement();\r\n\t                        break;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                statement = this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        return statement;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\r\n\t    Parser.prototype.parseFunctionSourceElements = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('{');\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        var previousLabelSet = this.context.labelSet;\r\n\t        var previousInIteration = this.context.inIteration;\r\n\t        var previousInSwitch = this.context.inSwitch;\r\n\t        var previousInFunctionBody = this.context.inFunctionBody;\r\n\t        this.context.labelSet = {};\r\n\t        this.context.inIteration = false;\r\n\t        this.context.inSwitch = false;\r\n\t        this.context.inFunctionBody = true;\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            if (this.match('}')) {\r\n\t                break;\r\n\t            }\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        this.expect('}');\r\n\t        this.context.labelSet = previousLabelSet;\r\n\t        this.context.inIteration = previousInIteration;\r\n\t        this.context.inSwitch = previousInSwitch;\r\n\t        this.context.inFunctionBody = previousInFunctionBody;\r\n\t        return this.finalize(node, new Node.BlockStatement(body));\r\n\t    };\r\n\t    Parser.prototype.validateParam = function (options, param, name) {\r\n\t        var key = '$' + name;\r\n\t        if (this.context.strict) {\r\n\t            if (this.scanner.isRestrictedWord(name)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamName;\r\n\t            }\r\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamDupe;\r\n\t            }\r\n\t        }\r\n\t        else if (!options.firstRestricted) {\r\n\t            if (this.scanner.isRestrictedWord(name)) {\r\n\t                options.firstRestricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamName;\r\n\t            }\r\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\r\n\t                options.firstRestricted = param;\r\n\t                options.message = messages_1.Messages.StrictReservedWord;\r\n\t            }\r\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\r\n\t                options.stricted = param;\r\n\t                options.message = messages_1.Messages.StrictParamDupe;\r\n\t            }\r\n\t        }\r\n\t        /* istanbul ignore next */\r\n\t        if (typeof Object.defineProperty === 'function') {\r\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\r\n\t        }\r\n\t        else {\r\n\t            options.paramSet[key] = true;\r\n\t        }\r\n\t    };\r\n\t    Parser.prototype.parseRestElement = function (params) {\r\n\t        var node = this.createNode();\r\n\t        this.expect('...');\r\n\t        var arg = this.parsePattern(params);\r\n\t        if (this.match('=')) {\r\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\r\n\t        }\r\n\t        if (!this.match(')')) {\r\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\r\n\t        }\r\n\t        return this.finalize(node, new Node.RestElement(arg));\r\n\t    };\r\n\t    Parser.prototype.parseFormalParameter = function (options) {\r\n\t        var params = [];\r\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\r\n\t        for (var i = 0; i < params.length; i++) {\r\n\t            this.validateParam(options, params[i], params[i].value);\r\n\t        }\r\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\r\n\t        options.params.push(param);\r\n\t    };\r\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\r\n\t        var options;\r\n\t        options = {\r\n\t            simple: true,\r\n\t            params: [],\r\n\t            firstRestricted: firstRestricted\r\n\t        };\r\n\t        this.expect('(');\r\n\t        if (!this.match(')')) {\r\n\t            options.paramSet = {};\r\n\t            while (this.lookahead.type !== 2 /* EOF */) {\r\n\t                this.parseFormalParameter(options);\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t                this.expect(',');\r\n\t                if (this.match(')')) {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        this.expect(')');\r\n\t        return {\r\n\t            simple: options.simple,\r\n\t            params: options.params,\r\n\t            stricted: options.stricted,\r\n\t            firstRestricted: options.firstRestricted,\r\n\t            message: options.message\r\n\t        };\r\n\t    };\r\n\t    Parser.prototype.matchAsyncFunction = function () {\r\n\t        var match = this.matchContextualKeyword('async');\r\n\t        if (match) {\r\n\t            var state = this.scanner.saveState();\r\n\t            this.scanner.scanComments();\r\n\t            var next = this.scanner.lex();\r\n\t            this.scanner.restoreState(state);\r\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\r\n\t        }\r\n\t        return match;\r\n\t    };\r\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\r\n\t        var node = this.createNode();\r\n\t        var isAsync = this.matchContextualKeyword('async');\r\n\t        if (isAsync) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        this.expectKeyword('function');\r\n\t        var isGenerator = isAsync ? false : this.match('*');\r\n\t        if (isGenerator) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        var message;\r\n\t        var id = null;\r\n\t        var firstRestricted = null;\r\n\t        if (!identifierIsOptional || !this.match('(')) {\r\n\t            var token = this.lookahead;\r\n\t            id = this.parseVariableIdentifier();\r\n\t            if (this.context.strict) {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictFunctionName;\r\n\t                }\r\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictReservedWord;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var previousAllowAwait = this.context.await;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.await = isAsync;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t        var params = formalParameters.params;\r\n\t        var stricted = formalParameters.stricted;\r\n\t        firstRestricted = formalParameters.firstRestricted;\r\n\t        if (formalParameters.message) {\r\n\t            message = formalParameters.message;\r\n\t        }\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = formalParameters.simple;\r\n\t        var body = this.parseFunctionSourceElements();\r\n\t        if (this.context.strict && firstRestricted) {\r\n\t            this.throwUnexpectedToken(firstRestricted, message);\r\n\t        }\r\n\t        if (this.context.strict && stricted) {\r\n\t            this.tolerateUnexpectedToken(stricted, message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        this.context.await = previousAllowAwait;\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\r\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseFunctionExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var isAsync = this.matchContextualKeyword('async');\r\n\t        if (isAsync) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        this.expectKeyword('function');\r\n\t        var isGenerator = isAsync ? false : this.match('*');\r\n\t        if (isGenerator) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        var message;\r\n\t        var id = null;\r\n\t        var firstRestricted;\r\n\t        var previousAllowAwait = this.context.await;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.await = isAsync;\r\n\t        this.context.allowYield = !isGenerator;\r\n\t        if (!this.match('(')) {\r\n\t            var token = this.lookahead;\r\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\r\n\t            if (this.context.strict) {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (this.scanner.isRestrictedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictFunctionName;\r\n\t                }\r\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\r\n\t                    firstRestricted = token;\r\n\t                    message = messages_1.Messages.StrictReservedWord;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\r\n\t        var params = formalParameters.params;\r\n\t        var stricted = formalParameters.stricted;\r\n\t        firstRestricted = formalParameters.firstRestricted;\r\n\t        if (formalParameters.message) {\r\n\t            message = formalParameters.message;\r\n\t        }\r\n\t        var previousStrict = this.context.strict;\r\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\r\n\t        this.context.allowStrictDirective = formalParameters.simple;\r\n\t        var body = this.parseFunctionSourceElements();\r\n\t        if (this.context.strict && firstRestricted) {\r\n\t            this.throwUnexpectedToken(firstRestricted, message);\r\n\t        }\r\n\t        if (this.context.strict && stricted) {\r\n\t            this.tolerateUnexpectedToken(stricted, message);\r\n\t        }\r\n\t        this.context.strict = previousStrict;\r\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\r\n\t        this.context.await = previousAllowAwait;\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\r\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\r\n\t    Parser.prototype.parseDirective = function () {\r\n\t        var token = this.lookahead;\r\n\t        var node = this.createNode();\r\n\t        var expr = this.parseExpression();\r\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\r\n\t    };\r\n\t    Parser.prototype.parseDirectivePrologues = function () {\r\n\t        var firstRestricted = null;\r\n\t        var body = [];\r\n\t        while (true) {\r\n\t            var token = this.lookahead;\r\n\t            if (token.type !== 8 /* StringLiteral */) {\r\n\t                break;\r\n\t            }\r\n\t            var statement = this.parseDirective();\r\n\t            body.push(statement);\r\n\t            var directive = statement.directive;\r\n\t            if (typeof directive !== 'string') {\r\n\t                break;\r\n\t            }\r\n\t            if (directive === 'use strict') {\r\n\t                this.context.strict = true;\r\n\t                if (firstRestricted) {\r\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\r\n\t                }\r\n\t                if (!this.context.allowStrictDirective) {\r\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (!firstRestricted && token.octal) {\r\n\t                    firstRestricted = token;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return body;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\r\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\r\n\t        switch (token.type) {\r\n\t            case 3 /* Identifier */:\r\n\t            case 8 /* StringLiteral */:\r\n\t            case 1 /* BooleanLiteral */:\r\n\t            case 5 /* NullLiteral */:\r\n\t            case 6 /* NumericLiteral */:\r\n\t            case 4 /* Keyword */:\r\n\t                return true;\r\n\t            case 7 /* Punctuator */:\r\n\t                return token.value === '[';\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    Parser.prototype.parseGetterMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = false;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = false;\r\n\t        var formalParameters = this.parseFormalParameters();\r\n\t        if (formalParameters.params.length > 0) {\r\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\r\n\t        }\r\n\t        var method = this.parsePropertyMethod(formalParameters);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseSetterMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = false;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = false;\r\n\t        var formalParameters = this.parseFormalParameters();\r\n\t        if (formalParameters.params.length !== 1) {\r\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\r\n\t        }\r\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\r\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\r\n\t        }\r\n\t        var method = this.parsePropertyMethod(formalParameters);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\r\n\t    };\r\n\t    Parser.prototype.parseGeneratorMethod = function () {\r\n\t        var node = this.createNode();\r\n\t        var isGenerator = true;\r\n\t        var previousAllowYield = this.context.allowYield;\r\n\t        this.context.allowYield = true;\r\n\t        var params = this.parseFormalParameters();\r\n\t        this.context.allowYield = false;\r\n\t        var method = this.parsePropertyMethod(params);\r\n\t        this.context.allowYield = previousAllowYield;\r\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\r\n\t    Parser.prototype.isStartOfExpression = function () {\r\n\t        var start = true;\r\n\t        var value = this.lookahead.value;\r\n\t        switch (this.lookahead.type) {\r\n\t            case 7 /* Punctuator */:\r\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\r\n\t                    (value === '+') || (value === '-') ||\r\n\t                    (value === '!') || (value === '~') ||\r\n\t                    (value === '++') || (value === '--') ||\r\n\t                    (value === '/') || (value === '/='); // regular expression literal\r\n\t                break;\r\n\t            case 4 /* Keyword */:\r\n\t                start = (value === 'class') || (value === 'delete') ||\r\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\r\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\r\n\t                    (value === 'void') || (value === 'yield');\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return start;\r\n\t    };\r\n\t    Parser.prototype.parseYieldExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('yield');\r\n\t        var argument = null;\r\n\t        var delegate = false;\r\n\t        if (!this.hasLineTerminator) {\r\n\t            var previousAllowYield = this.context.allowYield;\r\n\t            this.context.allowYield = false;\r\n\t            delegate = this.match('*');\r\n\t            if (delegate) {\r\n\t                this.nextToken();\r\n\t                argument = this.parseAssignmentExpression();\r\n\t            }\r\n\t            else if (this.isStartOfExpression()) {\r\n\t                argument = this.parseAssignmentExpression();\r\n\t            }\r\n\t            this.context.allowYield = previousAllowYield;\r\n\t        }\r\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\r\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\r\n\t        var token = this.lookahead;\r\n\t        var node = this.createNode();\r\n\t        var kind = '';\r\n\t        var key = null;\r\n\t        var value = null;\r\n\t        var computed = false;\r\n\t        var method = false;\r\n\t        var isStatic = false;\r\n\t        var isAsync = false;\r\n\t        if (this.match('*')) {\r\n\t            this.nextToken();\r\n\t        }\r\n\t        else {\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            var id = key;\r\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\r\n\t                token = this.lookahead;\r\n\t                isStatic = true;\r\n\t                computed = this.match('[');\r\n\t                if (this.match('*')) {\r\n\t                    this.nextToken();\r\n\t                }\r\n\t                else {\r\n\t                    key = this.parseObjectPropertyKey();\r\n\t                }\r\n\t            }\r\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\r\n\t                var punctuator = this.lookahead.value;\r\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\r\n\t                    isAsync = true;\r\n\t                    token = this.lookahead;\r\n\t                    key = this.parseObjectPropertyKey();\r\n\t                    if (token.type === 3 /* Identifier */) {\r\n\t                        if (token.value === 'get' || token.value === 'set') {\r\n\t                            this.tolerateUnexpectedToken(token);\r\n\t                        }\r\n\t                        else if (token.value === 'constructor') {\r\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\r\n\t        if (token.type === 3 /* Identifier */) {\r\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\r\n\t                kind = 'get';\r\n\t                computed = this.match('[');\r\n\t                key = this.parseObjectPropertyKey();\r\n\t                this.context.allowYield = false;\r\n\t                value = this.parseGetterMethod();\r\n\t            }\r\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\r\n\t                kind = 'set';\r\n\t                computed = this.match('[');\r\n\t                key = this.parseObjectPropertyKey();\r\n\t                value = this.parseSetterMethod();\r\n\t            }\r\n\t        }\r\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\r\n\t            kind = 'init';\r\n\t            computed = this.match('[');\r\n\t            key = this.parseObjectPropertyKey();\r\n\t            value = this.parseGeneratorMethod();\r\n\t            method = true;\r\n\t        }\r\n\t        if (!kind && key && this.match('(')) {\r\n\t            kind = 'init';\r\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\r\n\t            method = true;\r\n\t        }\r\n\t        if (!kind) {\r\n\t            this.throwUnexpectedToken(this.lookahead);\r\n\t        }\r\n\t        if (kind === 'init') {\r\n\t            kind = 'method';\r\n\t        }\r\n\t        if (!computed) {\r\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\r\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\r\n\t            }\r\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\r\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\r\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\r\n\t                }\r\n\t                if (hasConstructor.value) {\r\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\r\n\t                }\r\n\t                else {\r\n\t                    hasConstructor.value = true;\r\n\t                }\r\n\t                kind = 'constructor';\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\r\n\t    };\r\n\t    Parser.prototype.parseClassElementList = function () {\r\n\t        var body = [];\r\n\t        var hasConstructor = { value: false };\r\n\t        this.expect('{');\r\n\t        while (!this.match('}')) {\r\n\t            if (this.match(';')) {\r\n\t                this.nextToken();\r\n\t            }\r\n\t            else {\r\n\t                body.push(this.parseClassElement(hasConstructor));\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return body;\r\n\t    };\r\n\t    Parser.prototype.parseClassBody = function () {\r\n\t        var node = this.createNode();\r\n\t        var elementList = this.parseClassElementList();\r\n\t        return this.finalize(node, new Node.ClassBody(elementList));\r\n\t    };\r\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\r\n\t        var node = this.createNode();\r\n\t        var previousStrict = this.context.strict;\r\n\t        this.context.strict = true;\r\n\t        this.expectKeyword('class');\r\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\r\n\t        var superClass = null;\r\n\t        if (this.matchKeyword('extends')) {\r\n\t            this.nextToken();\r\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t        }\r\n\t        var classBody = this.parseClassBody();\r\n\t        this.context.strict = previousStrict;\r\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\r\n\t    };\r\n\t    Parser.prototype.parseClassExpression = function () {\r\n\t        var node = this.createNode();\r\n\t        var previousStrict = this.context.strict;\r\n\t        this.context.strict = true;\r\n\t        this.expectKeyword('class');\r\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\r\n\t        var superClass = null;\r\n\t        if (this.matchKeyword('extends')) {\r\n\t            this.nextToken();\r\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\r\n\t        }\r\n\t        var classBody = this.parseClassBody();\r\n\t        this.context.strict = previousStrict;\r\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-scripts\r\n\t    // https://tc39.github.io/ecma262/#sec-modules\r\n\t    Parser.prototype.parseModule = function () {\r\n\t        this.context.strict = true;\r\n\t        this.context.isModule = true;\r\n\t        var node = this.createNode();\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.Module(body));\r\n\t    };\r\n\t    Parser.prototype.parseScript = function () {\r\n\t        var node = this.createNode();\r\n\t        var body = this.parseDirectivePrologues();\r\n\t        while (this.lookahead.type !== 2 /* EOF */) {\r\n\t            body.push(this.parseStatementListItem());\r\n\t        }\r\n\t        return this.finalize(node, new Node.Script(body));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-imports\r\n\t    Parser.prototype.parseModuleSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\r\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\r\n\t        }\r\n\t        var token = this.nextToken();\r\n\t        var raw = this.getTokenRaw(token);\r\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\r\n\t    };\r\n\t    // import {<foo as bar>} ...;\r\n\t    Parser.prototype.parseImportSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var imported;\r\n\t        var local;\r\n\t        if (this.lookahead.type === 3 /* Identifier */) {\r\n\t            imported = this.parseVariableIdentifier();\r\n\t            local = imported;\r\n\t            if (this.matchContextualKeyword('as')) {\r\n\t                this.nextToken();\r\n\t                local = this.parseVariableIdentifier();\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            imported = this.parseIdentifierName();\r\n\t            local = imported;\r\n\t            if (this.matchContextualKeyword('as')) {\r\n\t                this.nextToken();\r\n\t                local = this.parseVariableIdentifier();\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t        }\r\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\r\n\t    };\r\n\t    // {foo, bar as bas}\r\n\t    Parser.prototype.parseNamedImports = function () {\r\n\t        this.expect('{');\r\n\t        var specifiers = [];\r\n\t        while (!this.match('}')) {\r\n\t            specifiers.push(this.parseImportSpecifier());\r\n\t            if (!this.match('}')) {\r\n\t                this.expect(',');\r\n\t            }\r\n\t        }\r\n\t        this.expect('}');\r\n\t        return specifiers;\r\n\t    };\r\n\t    // import <foo> ...;\r\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var local = this.parseIdentifierName();\r\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\r\n\t    };\r\n\t    // import <* as foo> ...;\r\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        this.expect('*');\r\n\t        if (!this.matchContextualKeyword('as')) {\r\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\r\n\t        }\r\n\t        this.nextToken();\r\n\t        var local = this.parseIdentifierName();\r\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\r\n\t    };\r\n\t    Parser.prototype.parseImportDeclaration = function () {\r\n\t        if (this.context.inFunctionBody) {\r\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('import');\r\n\t        var src;\r\n\t        var specifiers = [];\r\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\r\n\t            // import 'foo';\r\n\t            src = this.parseModuleSpecifier();\r\n\t        }\r\n\t        else {\r\n\t            if (this.match('{')) {\r\n\t                // import {bar}\r\n\t                specifiers = specifiers.concat(this.parseNamedImports());\r\n\t            }\r\n\t            else if (this.match('*')) {\r\n\t                // import * as foo\r\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\r\n\t            }\r\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\r\n\t                // import foo\r\n\t                specifiers.push(this.parseImportDefaultSpecifier());\r\n\t                if (this.match(',')) {\r\n\t                    this.nextToken();\r\n\t                    if (this.match('*')) {\r\n\t                        // import foo, * as foo\r\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\r\n\t                    }\r\n\t                    else if (this.match('{')) {\r\n\t                        // import foo, {bar}\r\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\r\n\t                    }\r\n\t                    else {\r\n\t                        this.throwUnexpectedToken(this.lookahead);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken(this.nextToken());\r\n\t            }\r\n\t            if (!this.matchContextualKeyword('from')) {\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            this.nextToken();\r\n\t            src = this.parseModuleSpecifier();\r\n\t        }\r\n\t        this.consumeSemicolon();\r\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-exports\r\n\t    Parser.prototype.parseExportSpecifier = function () {\r\n\t        var node = this.createNode();\r\n\t        var local = this.parseIdentifierName();\r\n\t        var exported = local;\r\n\t        if (this.matchContextualKeyword('as')) {\r\n\t            this.nextToken();\r\n\t            exported = this.parseIdentifierName();\r\n\t        }\r\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\r\n\t    };\r\n\t    Parser.prototype.parseExportDeclaration = function () {\r\n\t        if (this.context.inFunctionBody) {\r\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\r\n\t        }\r\n\t        var node = this.createNode();\r\n\t        this.expectKeyword('export');\r\n\t        var exportDeclaration;\r\n\t        if (this.matchKeyword('default')) {\r\n\t            // export default ...\r\n\t            this.nextToken();\r\n\t            if (this.matchKeyword('function')) {\r\n\t                // export default function foo () {}\r\n\t                // export default function () {}\r\n\t                var declaration = this.parseFunctionDeclaration(true);\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else if (this.matchKeyword('class')) {\r\n\t                // export default class foo {}\r\n\t                var declaration = this.parseClassDeclaration(true);\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else if (this.matchContextualKeyword('async')) {\r\n\t                // export default async function f () {}\r\n\t                // export default async function () {}\r\n\t                // export default async x => x\r\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t            else {\r\n\t                if (this.matchContextualKeyword('from')) {\r\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\r\n\t                }\r\n\t                // export default {};\r\n\t                // export default [];\r\n\t                // export default (1 + 2);\r\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\r\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\r\n\t                this.consumeSemicolon();\r\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\r\n\t            }\r\n\t        }\r\n\t        else if (this.match('*')) {\r\n\t            // export * from 'foo';\r\n\t            this.nextToken();\r\n\t            if (!this.matchContextualKeyword('from')) {\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            this.nextToken();\r\n\t            var src = this.parseModuleSpecifier();\r\n\t            this.consumeSemicolon();\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\r\n\t        }\r\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\r\n\t            // export var f = 1;\r\n\t            var declaration = void 0;\r\n\t            switch (this.lookahead.value) {\r\n\t                case 'let':\r\n\t                case 'const':\r\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\r\n\t                    break;\r\n\t                case 'var':\r\n\t                case 'class':\r\n\t                case 'function':\r\n\t                    declaration = this.parseStatementListItem();\r\n\t                    break;\r\n\t                default:\r\n\t                    this.throwUnexpectedToken(this.lookahead);\r\n\t            }\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t        }\r\n\t        else if (this.matchAsyncFunction()) {\r\n\t            var declaration = this.parseFunctionDeclaration();\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\r\n\t        }\r\n\t        else {\r\n\t            var specifiers = [];\r\n\t            var source = null;\r\n\t            var isExportFromIdentifier = false;\r\n\t            this.expect('{');\r\n\t            while (!this.match('}')) {\r\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\r\n\t                specifiers.push(this.parseExportSpecifier());\r\n\t                if (!this.match('}')) {\r\n\t                    this.expect(',');\r\n\t                }\r\n\t            }\r\n\t            this.expect('}');\r\n\t            if (this.matchContextualKeyword('from')) {\r\n\t                // export {default} from 'foo';\r\n\t                // export {foo} from 'foo';\r\n\t                this.nextToken();\r\n\t                source = this.parseModuleSpecifier();\r\n\t                this.consumeSemicolon();\r\n\t            }\r\n\t            else if (isExportFromIdentifier) {\r\n\t                // export {default}; // missing fromClause\r\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\r\n\t                this.throwError(message, this.lookahead.value);\r\n\t            }\r\n\t            else {\r\n\t                // export {foo};\r\n\t                this.consumeSemicolon();\r\n\t            }\r\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\r\n\t        }\r\n\t        return exportDeclaration;\r\n\t    };\r\n\t    return Parser;\r\n\t}());\r\n\texports.Parser = Parser;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t// Ensure the condition is true, otherwise throw an error.\r\n\t// This is only to have a better contract semantic, i.e. another safety net\r\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\r\n\t// Do NOT use this to enforce a certain condition on any user input.\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tfunction assert(condition, message) {\r\n\t    /* istanbul ignore if */\r\n\t    if (!condition) {\r\n\t        throw new Error('ASSERT: ' + message);\r\n\t    }\r\n\t}\r\n\texports.assert = assert;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/* tslint:disable:max-classes-per-file */\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar ErrorHandler = (function () {\r\n\t    function ErrorHandler() {\r\n\t        this.errors = [];\r\n\t        this.tolerant = false;\r\n\t    }\r\n\t    ErrorHandler.prototype.recordError = function (error) {\r\n\t        this.errors.push(error);\r\n\t    };\r\n\t    ErrorHandler.prototype.tolerate = function (error) {\r\n\t        if (this.tolerant) {\r\n\t            this.recordError(error);\r\n\t        }\r\n\t        else {\r\n\t            throw error;\r\n\t        }\r\n\t    };\r\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\r\n\t        var error = new Error(msg);\r\n\t        try {\r\n\t            throw error;\r\n\t        }\r\n\t        catch (base) {\r\n\t            /* istanbul ignore else */\r\n\t            if (Object.create && Object.defineProperty) {\r\n\t                error = Object.create(base);\r\n\t                Object.defineProperty(error, 'column', { value: column });\r\n\t            }\r\n\t        }\r\n\t        /* istanbul ignore next */\r\n\t        return error;\r\n\t    };\r\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\r\n\t        var msg = 'Line ' + line + ': ' + description;\r\n\t        var error = this.constructError(msg, col);\r\n\t        error.index = index;\r\n\t        error.lineNumber = line;\r\n\t        error.description = description;\r\n\t        return error;\r\n\t    };\r\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\r\n\t        throw this.createError(index, line, col, description);\r\n\t    };\r\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\r\n\t        var error = this.createError(index, line, col, description);\r\n\t        if (this.tolerant) {\r\n\t            this.recordError(error);\r\n\t        }\r\n\t        else {\r\n\t            throw error;\r\n\t        }\r\n\t    };\r\n\t    return ErrorHandler;\r\n\t}());\r\n\texports.ErrorHandler = ErrorHandler;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t// Error messages should be identical to V8.\r\n\texports.Messages = {\r\n\t    BadGetterArity: 'Getter must not have any formal parameters',\r\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\r\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\r\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\r\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\r\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\r\n\t    DefaultRestParameter: 'Unexpected token =',\r\n\t    DuplicateBinding: 'Duplicate binding %0',\r\n\t    DuplicateConstructor: 'A class may only have one constructor',\r\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\r\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\r\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\r\n\t    IllegalBreak: 'Illegal break statement',\r\n\t    IllegalContinue: 'Illegal continue statement',\r\n\t    IllegalExportDeclaration: 'Unexpected token',\r\n\t    IllegalImportDeclaration: 'Unexpected token',\r\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\r\n\t    IllegalReturn: 'Illegal return statement',\r\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\r\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\r\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\r\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\r\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\r\n\t    InvalidModuleSpecifier: 'Unexpected token',\r\n\t    InvalidRegExp: 'Invalid regular expression',\r\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\r\n\t    MissingFromClause: 'Unexpected token',\r\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\r\n\t    NewlineAfterThrow: 'Illegal newline after throw',\r\n\t    NoAsAfterImportNamespace: 'Unexpected token',\r\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\r\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\r\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\r\n\t    StaticPrototype: 'Classes may not have static property named prototype',\r\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\r\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\r\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\r\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\r\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\r\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\r\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\r\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\r\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\r\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\r\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\r\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\r\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\r\n\t    UnexpectedEOS: 'Unexpected end of input',\r\n\t    UnexpectedIdentifier: 'Unexpected identifier',\r\n\t    UnexpectedNumber: 'Unexpected number',\r\n\t    UnexpectedReserved: 'Unexpected reserved word',\r\n\t    UnexpectedString: 'Unexpected string',\r\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\r\n\t    UnexpectedToken: 'Unexpected token %0',\r\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\r\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\r\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\r\n\t};\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar assert_1 = __webpack_require__(9);\r\n\tvar character_1 = __webpack_require__(4);\r\n\tvar messages_1 = __webpack_require__(11);\r\n\tfunction hexValue(ch) {\r\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\r\n\t}\r\n\tfunction octalValue(ch) {\r\n\t    return '01234567'.indexOf(ch);\r\n\t}\r\n\tvar Scanner = (function () {\r\n\t    function Scanner(code, handler) {\r\n\t        this.source = code;\r\n\t        this.errorHandler = handler;\r\n\t        this.trackComment = false;\r\n\t        this.length = code.length;\r\n\t        this.index = 0;\r\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\r\n\t        this.lineStart = 0;\r\n\t        this.curlyStack = [];\r\n\t    }\r\n\t    Scanner.prototype.saveState = function () {\r\n\t        return {\r\n\t            index: this.index,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.restoreState = function (state) {\r\n\t        this.index = state.index;\r\n\t        this.lineNumber = state.lineNumber;\r\n\t        this.lineStart = state.lineStart;\r\n\t    };\r\n\t    Scanner.prototype.eof = function () {\r\n\t        return this.index >= this.length;\r\n\t    };\r\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\r\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t    };\r\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\r\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\r\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-comments\r\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\r\n\t        var comments = [];\r\n\t        var start, loc;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t            start = this.index - offset;\r\n\t            loc = {\r\n\t                start: {\r\n\t                    line: this.lineNumber,\r\n\t                    column: this.index - this.lineStart - offset\r\n\t                },\r\n\t                end: {}\r\n\t            };\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            ++this.index;\r\n\t            if (character_1.Character.isLineTerminator(ch)) {\r\n\t                if (this.trackComment) {\r\n\t                    loc.end = {\r\n\t                        line: this.lineNumber,\r\n\t                        column: this.index - this.lineStart - 1\r\n\t                    };\r\n\t                    var entry = {\r\n\t                        multiLine: false,\r\n\t                        slice: [start + offset, this.index - 1],\r\n\t                        range: [start, this.index - 1],\r\n\t                        loc: loc\r\n\t                    };\r\n\t                    comments.push(entry);\r\n\t                }\r\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                this.lineStart = this.index;\r\n\t                return comments;\r\n\t            }\r\n\t        }\r\n\t        if (this.trackComment) {\r\n\t            loc.end = {\r\n\t                line: this.lineNumber,\r\n\t                column: this.index - this.lineStart\r\n\t            };\r\n\t            var entry = {\r\n\t                multiLine: false,\r\n\t                slice: [start + offset, this.index],\r\n\t                range: [start, this.index],\r\n\t                loc: loc\r\n\t            };\r\n\t            comments.push(entry);\r\n\t        }\r\n\t        return comments;\r\n\t    };\r\n\t    Scanner.prototype.skipMultiLineComment = function () {\r\n\t        var comments = [];\r\n\t        var start, loc;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t            start = this.index - 2;\r\n\t            loc = {\r\n\t                start: {\r\n\t                    line: this.lineNumber,\r\n\t                    column: this.index - this.lineStart - 2\r\n\t                },\r\n\t                end: {}\r\n\t            };\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (character_1.Character.isLineTerminator(ch)) {\r\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                ++this.index;\r\n\t                this.lineStart = this.index;\r\n\t            }\r\n\t            else if (ch === 0x2A) {\r\n\t                // Block comment ends with '*/'.\r\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\r\n\t                    this.index += 2;\r\n\t                    if (this.trackComment) {\r\n\t                        loc.end = {\r\n\t                            line: this.lineNumber,\r\n\t                            column: this.index - this.lineStart\r\n\t                        };\r\n\t                        var entry = {\r\n\t                            multiLine: true,\r\n\t                            slice: [start + 2, this.index - 2],\r\n\t                            range: [start, this.index],\r\n\t                            loc: loc\r\n\t                        };\r\n\t                        comments.push(entry);\r\n\t                    }\r\n\t                    return comments;\r\n\t                }\r\n\t                ++this.index;\r\n\t            }\r\n\t            else {\r\n\t                ++this.index;\r\n\t            }\r\n\t        }\r\n\t        // Ran off the end of the file - the whole thing is a comment\r\n\t        if (this.trackComment) {\r\n\t            loc.end = {\r\n\t                line: this.lineNumber,\r\n\t                column: this.index - this.lineStart\r\n\t            };\r\n\t            var entry = {\r\n\t                multiLine: true,\r\n\t                slice: [start + 2, this.index],\r\n\t                range: [start, this.index],\r\n\t                loc: loc\r\n\t            };\r\n\t            comments.push(entry);\r\n\t        }\r\n\t        this.tolerateUnexpectedToken();\r\n\t        return comments;\r\n\t    };\r\n\t    Scanner.prototype.scanComments = function () {\r\n\t        var comments;\r\n\t        if (this.trackComment) {\r\n\t            comments = [];\r\n\t        }\r\n\t        var start = (this.index === 0);\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (character_1.Character.isWhiteSpace(ch)) {\r\n\t                ++this.index;\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch)) {\r\n\t                ++this.index;\r\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                ++this.lineNumber;\r\n\t                this.lineStart = this.index;\r\n\t                start = true;\r\n\t            }\r\n\t            else if (ch === 0x2F) {\r\n\t                ch = this.source.charCodeAt(this.index + 1);\r\n\t                if (ch === 0x2F) {\r\n\t                    this.index += 2;\r\n\t                    var comment = this.skipSingleLineComment(2);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                    start = true;\r\n\t                }\r\n\t                else if (ch === 0x2A) {\r\n\t                    this.index += 2;\r\n\t                    var comment = this.skipMultiLineComment();\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else if (start && ch === 0x2D) {\r\n\t                // U+003E is '>'\r\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\r\n\t                    // '-->' is a single-line comment\r\n\t                    this.index += 3;\r\n\t                    var comment = this.skipSingleLineComment(3);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else if (ch === 0x3C) {\r\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\r\n\t                    this.index += 4; // `<!--`\r\n\t                    var comment = this.skipSingleLineComment(4);\r\n\t                    if (this.trackComment) {\r\n\t                        comments = comments.concat(comment);\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return comments;\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\r\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\r\n\t        switch (id) {\r\n\t            case 'enum':\r\n\t            case 'export':\r\n\t            case 'import':\r\n\t            case 'super':\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\r\n\t        switch (id) {\r\n\t            case 'implements':\r\n\t            case 'interface':\r\n\t            case 'package':\r\n\t            case 'private':\r\n\t            case 'protected':\r\n\t            case 'public':\r\n\t            case 'static':\r\n\t            case 'yield':\r\n\t            case 'let':\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.isRestrictedWord = function (id) {\r\n\t        return id === 'eval' || id === 'arguments';\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-keywords\r\n\t    Scanner.prototype.isKeyword = function (id) {\r\n\t        switch (id.length) {\r\n\t            case 2:\r\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\r\n\t            case 3:\r\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\r\n\t                    (id === 'try') || (id === 'let');\r\n\t            case 4:\r\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\r\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\r\n\t            case 5:\r\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\r\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\r\n\t                    (id === 'class') || (id === 'super');\r\n\t            case 6:\r\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\r\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\r\n\t            case 7:\r\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\r\n\t            case 8:\r\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\r\n\t            case 10:\r\n\t                return (id === 'instanceof');\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.codePointAt = function (i) {\r\n\t        var cp = this.source.charCodeAt(i);\r\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\r\n\t            var second = this.source.charCodeAt(i + 1);\r\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\r\n\t                var first = cp;\r\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\r\n\t            }\r\n\t        }\r\n\t        return cp;\r\n\t    };\r\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\r\n\t        var len = (prefix === 'u') ? 4 : 2;\r\n\t        var code = 0;\r\n\t        for (var i = 0; i < len; ++i) {\r\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t                code = code * 16 + hexValue(this.source[this.index++]);\r\n\t            }\r\n\t            else {\r\n\t                return null;\r\n\t            }\r\n\t        }\r\n\t        return String.fromCharCode(code);\r\n\t    };\r\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\r\n\t        var ch = this.source[this.index];\r\n\t        var code = 0;\r\n\t        // At least, one hex digit is required.\r\n\t        if (ch === '}') {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index++];\r\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            code = code * 16 + hexValue(ch);\r\n\t        }\r\n\t        if (code > 0x10FFFF || ch !== '}') {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return character_1.Character.fromCodePoint(code);\r\n\t    };\r\n\t    Scanner.prototype.getIdentifier = function () {\r\n\t        var start = this.index++;\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source.charCodeAt(this.index);\r\n\t            if (ch === 0x5C) {\r\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\r\n\t                this.index = start;\r\n\t                return this.getComplexIdentifier();\r\n\t            }\r\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\r\n\t                // Need to handle surrogate pairs.\r\n\t                this.index = start;\r\n\t                return this.getComplexIdentifier();\r\n\t            }\r\n\t            if (character_1.Character.isIdentifierPart(ch)) {\r\n\t                ++this.index;\r\n\t            }\r\n\t            else {\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return this.source.slice(start, this.index);\r\n\t    };\r\n\t    Scanner.prototype.getComplexIdentifier = function () {\r\n\t        var cp = this.codePointAt(this.index);\r\n\t        var id = character_1.Character.fromCodePoint(cp);\r\n\t        this.index += id.length;\r\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t        var ch;\r\n\t        if (cp === 0x5C) {\r\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t            ++this.index;\r\n\t            if (this.source[this.index] === '{') {\r\n\t                ++this.index;\r\n\t                ch = this.scanUnicodeCodePointEscape();\r\n\t            }\r\n\t            else {\r\n\t                ch = this.scanHexEscape('u');\r\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\r\n\t                    this.throwUnexpectedToken();\r\n\t                }\r\n\t            }\r\n\t            id = ch;\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            cp = this.codePointAt(this.index);\r\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\r\n\t                break;\r\n\t            }\r\n\t            ch = character_1.Character.fromCodePoint(cp);\r\n\t            id += ch;\r\n\t            this.index += ch.length;\r\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\r\n\t            if (cp === 0x5C) {\r\n\t                id = id.substr(0, id.length - 1);\r\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\r\n\t                    this.throwUnexpectedToken();\r\n\t                }\r\n\t                ++this.index;\r\n\t                if (this.source[this.index] === '{') {\r\n\t                    ++this.index;\r\n\t                    ch = this.scanUnicodeCodePointEscape();\r\n\t                }\r\n\t                else {\r\n\t                    ch = this.scanHexEscape('u');\r\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t                        this.throwUnexpectedToken();\r\n\t                    }\r\n\t                }\r\n\t                id += ch;\r\n\t            }\r\n\t        }\r\n\t        return id;\r\n\t    };\r\n\t    Scanner.prototype.octalToDecimal = function (ch) {\r\n\t        // \\0 is not octal escape sequence\r\n\t        var octal = (ch !== '0');\r\n\t        var code = octalValue(ch);\r\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t            octal = true;\r\n\t            code = code * 8 + octalValue(this.source[this.index++]);\r\n\t            // 3 digits are only allowed when string starts\r\n\t            // with 0, 1, 2, 3\r\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t                code = code * 8 + octalValue(this.source[this.index++]);\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            code: code,\r\n\t            octal: octal\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\r\n\t    Scanner.prototype.scanIdentifier = function () {\r\n\t        var type;\r\n\t        var start = this.index;\r\n\t        // Backslash (U+005C) starts an escaped character.\r\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\r\n\t        // There is no keyword or literal with only one character.\r\n\t        // Thus, it must be an identifier.\r\n\t        if (id.length === 1) {\r\n\t            type = 3 /* Identifier */;\r\n\t        }\r\n\t        else if (this.isKeyword(id)) {\r\n\t            type = 4 /* Keyword */;\r\n\t        }\r\n\t        else if (id === 'null') {\r\n\t            type = 5 /* NullLiteral */;\r\n\t        }\r\n\t        else if (id === 'true' || id === 'false') {\r\n\t            type = 1 /* BooleanLiteral */;\r\n\t        }\r\n\t        else {\r\n\t            type = 3 /* Identifier */;\r\n\t        }\r\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\r\n\t            var restore = this.index;\r\n\t            this.index = start;\r\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\r\n\t            this.index = restore;\r\n\t        }\r\n\t        return {\r\n\t            type: type,\r\n\t            value: id,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\r\n\t    Scanner.prototype.scanPunctuator = function () {\r\n\t        var start = this.index;\r\n\t        // Check for most common single-character punctuators.\r\n\t        var str = this.source[this.index];\r\n\t        switch (str) {\r\n\t            case '(':\r\n\t            case '{':\r\n\t                if (str === '{') {\r\n\t                    this.curlyStack.push('{');\r\n\t                }\r\n\t                ++this.index;\r\n\t                break;\r\n\t            case '.':\r\n\t                ++this.index;\r\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\r\n\t                    // Spread operator: ...\r\n\t                    this.index += 2;\r\n\t                    str = '...';\r\n\t                }\r\n\t                break;\r\n\t            case '}':\r\n\t                ++this.index;\r\n\t                this.curlyStack.pop();\r\n\t                break;\r\n\t            case ')':\r\n\t            case ';':\r\n\t            case ',':\r\n\t            case '[':\r\n\t            case ']':\r\n\t            case ':':\r\n\t            case '?':\r\n\t            case '~':\r\n\t                ++this.index;\r\n\t                break;\r\n\t            default:\r\n\t                // 4-character punctuator.\r\n\t                str = this.source.substr(this.index, 4);\r\n\t                if (str === '>>>=') {\r\n\t                    this.index += 4;\r\n\t                }\r\n\t                else {\r\n\t                    // 3-character punctuators.\r\n\t                    str = str.substr(0, 3);\r\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\r\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\r\n\t                        this.index += 3;\r\n\t                    }\r\n\t                    else {\r\n\t                        // 2-character punctuators.\r\n\t                        str = str.substr(0, 2);\r\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\r\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\r\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\r\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\r\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\r\n\t                            this.index += 2;\r\n\t                        }\r\n\t                        else {\r\n\t                            // 1-character punctuators.\r\n\t                            str = this.source[this.index];\r\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\r\n\t                                ++this.index;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t        }\r\n\t        if (this.index === start) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 7 /* Punctuator */,\r\n\t            value: str,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\r\n\t    Scanner.prototype.scanHexLiteral = function (start) {\r\n\t        var num = '';\r\n\t        while (!this.eof()) {\r\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (num.length === 0) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt('0x' + num, 16),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\r\n\t        var num = '';\r\n\t        var ch;\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index];\r\n\t            if (ch !== '0' && ch !== '1') {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (num.length === 0) {\r\n\t            // only 0b or 0B\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (!this.eof()) {\r\n\t            ch = this.source.charCodeAt(this.index);\r\n\t            /* istanbul ignore else */\r\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt(num, 2),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\r\n\t        var num = '';\r\n\t        var octal = false;\r\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\r\n\t            octal = true;\r\n\t            num = '0' + this.source[this.index++];\r\n\t        }\r\n\t        else {\r\n\t            ++this.index;\r\n\t        }\r\n\t        while (!this.eof()) {\r\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\r\n\t                break;\r\n\t            }\r\n\t            num += this.source[this.index++];\r\n\t        }\r\n\t        if (!octal && num.length === 0) {\r\n\t            // only 0o or 0O\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseInt(num, 8),\r\n\t            octal: octal,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\r\n\t        // Implicit octal, unless there is a non-octal digit.\r\n\t        // (Annex B.1.1 on Numeric Literals)\r\n\t        for (var i = this.index + 1; i < this.length; ++i) {\r\n\t            var ch = this.source[i];\r\n\t            if (ch === '8' || ch === '9') {\r\n\t                return false;\r\n\t            }\r\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                return true;\r\n\t            }\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    Scanner.prototype.scanNumericLiteral = function () {\r\n\t        var start = this.index;\r\n\t        var ch = this.source[start];\r\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\r\n\t        var num = '';\r\n\t        if (ch !== '.') {\r\n\t            num = this.source[this.index++];\r\n\t            ch = this.source[this.index];\r\n\t            // Hex number starts with '0x'.\r\n\t            // Octal number starts with '0'.\r\n\t            // Octal number in ES6 starts with '0o'.\r\n\t            // Binary number in ES6 starts with '0b'.\r\n\t            if (num === '0') {\r\n\t                if (ch === 'x' || ch === 'X') {\r\n\t                    ++this.index;\r\n\t                    return this.scanHexLiteral(start);\r\n\t                }\r\n\t                if (ch === 'b' || ch === 'B') {\r\n\t                    ++this.index;\r\n\t                    return this.scanBinaryLiteral(start);\r\n\t                }\r\n\t                if (ch === 'o' || ch === 'O') {\r\n\t                    return this.scanOctalLiteral(ch, start);\r\n\t                }\r\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                    if (this.isImplicitOctalLiteral()) {\r\n\t                        return this.scanOctalLiteral(ch, start);\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            ch = this.source[this.index];\r\n\t        }\r\n\t        if (ch === '.') {\r\n\t            num += this.source[this.index++];\r\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            ch = this.source[this.index];\r\n\t        }\r\n\t        if (ch === 'e' || ch === 'E') {\r\n\t            num += this.source[this.index++];\r\n\t            ch = this.source[this.index];\r\n\t            if (ch === '+' || ch === '-') {\r\n\t                num += this.source[this.index++];\r\n\t            }\r\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                    num += this.source[this.index++];\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.throwUnexpectedToken();\r\n\t            }\r\n\t        }\r\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 6 /* NumericLiteral */,\r\n\t            value: parseFloat(num),\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\r\n\t    Scanner.prototype.scanStringLiteral = function () {\r\n\t        var start = this.index;\r\n\t        var quote = this.source[start];\r\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\r\n\t        ++this.index;\r\n\t        var octal = false;\r\n\t        var str = '';\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index++];\r\n\t            if (ch === quote) {\r\n\t                quote = '';\r\n\t                break;\r\n\t            }\r\n\t            else if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    switch (ch) {\r\n\t                        case 'u':\r\n\t                            if (this.source[this.index] === '{') {\r\n\t                                ++this.index;\r\n\t                                str += this.scanUnicodeCodePointEscape();\r\n\t                            }\r\n\t                            else {\r\n\t                                var unescaped_1 = this.scanHexEscape(ch);\r\n\t                                if (unescaped_1 === null) {\r\n\t                                    this.throwUnexpectedToken();\r\n\t                                }\r\n\t                                str += unescaped_1;\r\n\t                            }\r\n\t                            break;\r\n\t                        case 'x':\r\n\t                            var unescaped = this.scanHexEscape(ch);\r\n\t                            if (unescaped === null) {\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t                            }\r\n\t                            str += unescaped;\r\n\t                            break;\r\n\t                        case 'n':\r\n\t                            str += '\\n';\r\n\t                            break;\r\n\t                        case 'r':\r\n\t                            str += '\\r';\r\n\t                            break;\r\n\t                        case 't':\r\n\t                            str += '\\t';\r\n\t                            break;\r\n\t                        case 'b':\r\n\t                            str += '\\b';\r\n\t                            break;\r\n\t                        case 'f':\r\n\t                            str += '\\f';\r\n\t                            break;\r\n\t                        case 'v':\r\n\t                            str += '\\x0B';\r\n\t                            break;\r\n\t                        case '8':\r\n\t                        case '9':\r\n\t                            str += ch;\r\n\t                            this.tolerateUnexpectedToken();\r\n\t                            break;\r\n\t                        default:\r\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                                var octToDec = this.octalToDecimal(ch);\r\n\t                                octal = octToDec.octal || octal;\r\n\t                                str += String.fromCharCode(octToDec.code);\r\n\t                            }\r\n\t                            else {\r\n\t                                str += ch;\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    ++this.lineNumber;\r\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                        ++this.index;\r\n\t                    }\r\n\t                    this.lineStart = this.index;\r\n\t                }\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            else {\r\n\t                str += ch;\r\n\t            }\r\n\t        }\r\n\t        if (quote !== '') {\r\n\t            this.index = start;\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        return {\r\n\t            type: 8 /* StringLiteral */,\r\n\t            value: str,\r\n\t            octal: octal,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\r\n\t    Scanner.prototype.scanTemplate = function () {\r\n\t        var cooked = '';\r\n\t        var terminated = false;\r\n\t        var start = this.index;\r\n\t        var head = (this.source[start] === '`');\r\n\t        var tail = false;\r\n\t        var rawOffset = 2;\r\n\t        ++this.index;\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index++];\r\n\t            if (ch === '`') {\r\n\t                rawOffset = 1;\r\n\t                tail = true;\r\n\t                terminated = true;\r\n\t                break;\r\n\t            }\r\n\t            else if (ch === '$') {\r\n\t                if (this.source[this.index] === '{') {\r\n\t                    this.curlyStack.push('${');\r\n\t                    ++this.index;\r\n\t                    terminated = true;\r\n\t                    break;\r\n\t                }\r\n\t                cooked += ch;\r\n\t            }\r\n\t            else if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    switch (ch) {\r\n\t                        case 'n':\r\n\t                            cooked += '\\n';\r\n\t                            break;\r\n\t                        case 'r':\r\n\t                            cooked += '\\r';\r\n\t                            break;\r\n\t                        case 't':\r\n\t                            cooked += '\\t';\r\n\t                            break;\r\n\t                        case 'u':\r\n\t                            if (this.source[this.index] === '{') {\r\n\t                                ++this.index;\r\n\t                                cooked += this.scanUnicodeCodePointEscape();\r\n\t                            }\r\n\t                            else {\r\n\t                                var restore = this.index;\r\n\t                                var unescaped_2 = this.scanHexEscape(ch);\r\n\t                                if (unescaped_2 !== null) {\r\n\t                                    cooked += unescaped_2;\r\n\t                                }\r\n\t                                else {\r\n\t                                    this.index = restore;\r\n\t                                    cooked += ch;\r\n\t                                }\r\n\t                            }\r\n\t                            break;\r\n\t                        case 'x':\r\n\t                            var unescaped = this.scanHexEscape(ch);\r\n\t                            if (unescaped === null) {\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\r\n\t                            }\r\n\t                            cooked += unescaped;\r\n\t                            break;\r\n\t                        case 'b':\r\n\t                            cooked += '\\b';\r\n\t                            break;\r\n\t                        case 'f':\r\n\t                            cooked += '\\f';\r\n\t                            break;\r\n\t                        case 'v':\r\n\t                            cooked += '\\v';\r\n\t                            break;\r\n\t                        default:\r\n\t                            if (ch === '0') {\r\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\r\n\t                                    // Illegal: \\01 \\02 and so on\r\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t                                }\r\n\t                                cooked += '\\0';\r\n\t                            }\r\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\r\n\t                                // Illegal: \\1 \\2\r\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\r\n\t                            }\r\n\t                            else {\r\n\t                                cooked += ch;\r\n\t                            }\r\n\t                            break;\r\n\t                    }\r\n\t                }\r\n\t                else {\r\n\t                    ++this.lineNumber;\r\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                        ++this.index;\r\n\t                    }\r\n\t                    this.lineStart = this.index;\r\n\t                }\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                ++this.lineNumber;\r\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\r\n\t                    ++this.index;\r\n\t                }\r\n\t                this.lineStart = this.index;\r\n\t                cooked += '\\n';\r\n\t            }\r\n\t            else {\r\n\t                cooked += ch;\r\n\t            }\r\n\t        }\r\n\t        if (!terminated) {\r\n\t            this.throwUnexpectedToken();\r\n\t        }\r\n\t        if (!head) {\r\n\t            this.curlyStack.pop();\r\n\t        }\r\n\t        return {\r\n\t            type: 10 /* Template */,\r\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\r\n\t            cooked: cooked,\r\n\t            head: head,\r\n\t            tail: tail,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\r\n\t        // The BMP character to use as a replacement for astral symbols when\r\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\r\n\t        // approximation.\r\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\r\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\r\n\t        // pattern that would not be detected by this substitution.\r\n\t        var astralSubstitute = '\\uFFFF';\r\n\t        var tmp = pattern;\r\n\t        var self = this;\r\n\t        if (flags.indexOf('u') >= 0) {\r\n\t            tmp = tmp\r\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\r\n\t                var codePoint = parseInt($1 || $2, 16);\r\n\t                if (codePoint > 0x10FFFF) {\r\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t                }\r\n\t                if (codePoint <= 0xFFFF) {\r\n\t                    return String.fromCharCode(codePoint);\r\n\t                }\r\n\t                return astralSubstitute;\r\n\t            })\r\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\r\n\t        }\r\n\t        // First, detect invalid regular expressions.\r\n\t        try {\r\n\t            RegExp(tmp);\r\n\t        }\r\n\t        catch (e) {\r\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\r\n\t        }\r\n\t        // Return a regular expression object for this pattern-flag pair, or\r\n\t        // `null` in case the current environment doesn't support the flags it\r\n\t        // uses.\r\n\t        try {\r\n\t            return new RegExp(pattern, flags);\r\n\t        }\r\n\t        catch (exception) {\r\n\t            /* istanbul ignore next */\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    Scanner.prototype.scanRegExpBody = function () {\r\n\t        var ch = this.source[this.index];\r\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\r\n\t        var str = this.source[this.index++];\r\n\t        var classMarker = false;\r\n\t        var terminated = false;\r\n\t        while (!this.eof()) {\r\n\t            ch = this.source[this.index++];\r\n\t            str += ch;\r\n\t            if (ch === '\\\\') {\r\n\t                ch = this.source[this.index++];\r\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\r\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t                }\r\n\t                str += ch;\r\n\t            }\r\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\r\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t            }\r\n\t            else if (classMarker) {\r\n\t                if (ch === ']') {\r\n\t                    classMarker = false;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                if (ch === '/') {\r\n\t                    terminated = true;\r\n\t                    break;\r\n\t                }\r\n\t                else if (ch === '[') {\r\n\t                    classMarker = true;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (!terminated) {\r\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\r\n\t        }\r\n\t        // Exclude leading and trailing slash.\r\n\t        return str.substr(1, str.length - 2);\r\n\t    };\r\n\t    Scanner.prototype.scanRegExpFlags = function () {\r\n\t        var str = '';\r\n\t        var flags = '';\r\n\t        while (!this.eof()) {\r\n\t            var ch = this.source[this.index];\r\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\r\n\t                break;\r\n\t            }\r\n\t            ++this.index;\r\n\t            if (ch === '\\\\' && !this.eof()) {\r\n\t                ch = this.source[this.index];\r\n\t                if (ch === 'u') {\r\n\t                    ++this.index;\r\n\t                    var restore = this.index;\r\n\t                    var char = this.scanHexEscape('u');\r\n\t                    if (char !== null) {\r\n\t                        flags += char;\r\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\r\n\t                            str += this.source[restore];\r\n\t                        }\r\n\t                    }\r\n\t                    else {\r\n\t                        this.index = restore;\r\n\t                        flags += 'u';\r\n\t                        str += '\\\\u';\r\n\t                    }\r\n\t                    this.tolerateUnexpectedToken();\r\n\t                }\r\n\t                else {\r\n\t                    str += '\\\\';\r\n\t                    this.tolerateUnexpectedToken();\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                flags += ch;\r\n\t                str += ch;\r\n\t            }\r\n\t        }\r\n\t        return flags;\r\n\t    };\r\n\t    Scanner.prototype.scanRegExp = function () {\r\n\t        var start = this.index;\r\n\t        var pattern = this.scanRegExpBody();\r\n\t        var flags = this.scanRegExpFlags();\r\n\t        var value = this.testRegExp(pattern, flags);\r\n\t        return {\r\n\t            type: 9 /* RegularExpression */,\r\n\t            value: '',\r\n\t            pattern: pattern,\r\n\t            flags: flags,\r\n\t            regex: value,\r\n\t            lineNumber: this.lineNumber,\r\n\t            lineStart: this.lineStart,\r\n\t            start: start,\r\n\t            end: this.index\r\n\t        };\r\n\t    };\r\n\t    Scanner.prototype.lex = function () {\r\n\t        if (this.eof()) {\r\n\t            return {\r\n\t                type: 2 /* EOF */,\r\n\t                value: '',\r\n\t                lineNumber: this.lineNumber,\r\n\t                lineStart: this.lineStart,\r\n\t                start: this.index,\r\n\t                end: this.index\r\n\t            };\r\n\t        }\r\n\t        var cp = this.source.charCodeAt(this.index);\r\n\t        if (character_1.Character.isIdentifierStart(cp)) {\r\n\t            return this.scanIdentifier();\r\n\t        }\r\n\t        // Very common: ( and ) and ;\r\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\r\n\t            return this.scanPunctuator();\r\n\t        }\r\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\r\n\t        if (cp === 0x27 || cp === 0x22) {\r\n\t            return this.scanStringLiteral();\r\n\t        }\r\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\r\n\t        // to check the next character.\r\n\t        if (cp === 0x2E) {\r\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\r\n\t                return this.scanNumericLiteral();\r\n\t            }\r\n\t            return this.scanPunctuator();\r\n\t        }\r\n\t        if (character_1.Character.isDecimalDigit(cp)) {\r\n\t            return this.scanNumericLiteral();\r\n\t        }\r\n\t        // Template literals start with ` (U+0060) for template head\r\n\t        // or } (U+007D) for template middle or template tail.\r\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\r\n\t            return this.scanTemplate();\r\n\t        }\r\n\t        // Possible identifier start in a surrogate pair.\r\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\r\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\r\n\t                return this.scanIdentifier();\r\n\t            }\r\n\t        }\r\n\t        return this.scanPunctuator();\r\n\t    };\r\n\t    return Scanner;\r\n\t}());\r\n\texports.Scanner = Scanner;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.TokenName = {};\r\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\r\n\texports.TokenName[2 /* EOF */] = '<end>';\r\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\r\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\r\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\r\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\r\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\r\n\texports.TokenName[8 /* StringLiteral */] = 'String';\r\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\r\n\texports.TokenName[10 /* Template */] = 'Template';\r\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\texports.XHTMLEntities = {\r\n\t    quot: '\\u0022',\r\n\t    amp: '\\u0026',\r\n\t    apos: '\\u0027',\r\n\t    gt: '\\u003E',\r\n\t    nbsp: '\\u00A0',\r\n\t    iexcl: '\\u00A1',\r\n\t    cent: '\\u00A2',\r\n\t    pound: '\\u00A3',\r\n\t    curren: '\\u00A4',\r\n\t    yen: '\\u00A5',\r\n\t    brvbar: '\\u00A6',\r\n\t    sect: '\\u00A7',\r\n\t    uml: '\\u00A8',\r\n\t    copy: '\\u00A9',\r\n\t    ordf: '\\u00AA',\r\n\t    laquo: '\\u00AB',\r\n\t    not: '\\u00AC',\r\n\t    shy: '\\u00AD',\r\n\t    reg: '\\u00AE',\r\n\t    macr: '\\u00AF',\r\n\t    deg: '\\u00B0',\r\n\t    plusmn: '\\u00B1',\r\n\t    sup2: '\\u00B2',\r\n\t    sup3: '\\u00B3',\r\n\t    acute: '\\u00B4',\r\n\t    micro: '\\u00B5',\r\n\t    para: '\\u00B6',\r\n\t    middot: '\\u00B7',\r\n\t    cedil: '\\u00B8',\r\n\t    sup1: '\\u00B9',\r\n\t    ordm: '\\u00BA',\r\n\t    raquo: '\\u00BB',\r\n\t    frac14: '\\u00BC',\r\n\t    frac12: '\\u00BD',\r\n\t    frac34: '\\u00BE',\r\n\t    iquest: '\\u00BF',\r\n\t    Agrave: '\\u00C0',\r\n\t    Aacute: '\\u00C1',\r\n\t    Acirc: '\\u00C2',\r\n\t    Atilde: '\\u00C3',\r\n\t    Auml: '\\u00C4',\r\n\t    Aring: '\\u00C5',\r\n\t    AElig: '\\u00C6',\r\n\t    Ccedil: '\\u00C7',\r\n\t    Egrave: '\\u00C8',\r\n\t    Eacute: '\\u00C9',\r\n\t    Ecirc: '\\u00CA',\r\n\t    Euml: '\\u00CB',\r\n\t    Igrave: '\\u00CC',\r\n\t    Iacute: '\\u00CD',\r\n\t    Icirc: '\\u00CE',\r\n\t    Iuml: '\\u00CF',\r\n\t    ETH: '\\u00D0',\r\n\t    Ntilde: '\\u00D1',\r\n\t    Ograve: '\\u00D2',\r\n\t    Oacute: '\\u00D3',\r\n\t    Ocirc: '\\u00D4',\r\n\t    Otilde: '\\u00D5',\r\n\t    Ouml: '\\u00D6',\r\n\t    times: '\\u00D7',\r\n\t    Oslash: '\\u00D8',\r\n\t    Ugrave: '\\u00D9',\r\n\t    Uacute: '\\u00DA',\r\n\t    Ucirc: '\\u00DB',\r\n\t    Uuml: '\\u00DC',\r\n\t    Yacute: '\\u00DD',\r\n\t    THORN: '\\u00DE',\r\n\t    szlig: '\\u00DF',\r\n\t    agrave: '\\u00E0',\r\n\t    aacute: '\\u00E1',\r\n\t    acirc: '\\u00E2',\r\n\t    atilde: '\\u00E3',\r\n\t    auml: '\\u00E4',\r\n\t    aring: '\\u00E5',\r\n\t    aelig: '\\u00E6',\r\n\t    ccedil: '\\u00E7',\r\n\t    egrave: '\\u00E8',\r\n\t    eacute: '\\u00E9',\r\n\t    ecirc: '\\u00EA',\r\n\t    euml: '\\u00EB',\r\n\t    igrave: '\\u00EC',\r\n\t    iacute: '\\u00ED',\r\n\t    icirc: '\\u00EE',\r\n\t    iuml: '\\u00EF',\r\n\t    eth: '\\u00F0',\r\n\t    ntilde: '\\u00F1',\r\n\t    ograve: '\\u00F2',\r\n\t    oacute: '\\u00F3',\r\n\t    ocirc: '\\u00F4',\r\n\t    otilde: '\\u00F5',\r\n\t    ouml: '\\u00F6',\r\n\t    divide: '\\u00F7',\r\n\t    oslash: '\\u00F8',\r\n\t    ugrave: '\\u00F9',\r\n\t    uacute: '\\u00FA',\r\n\t    ucirc: '\\u00FB',\r\n\t    uuml: '\\u00FC',\r\n\t    yacute: '\\u00FD',\r\n\t    thorn: '\\u00FE',\r\n\t    yuml: '\\u00FF',\r\n\t    OElig: '\\u0152',\r\n\t    oelig: '\\u0153',\r\n\t    Scaron: '\\u0160',\r\n\t    scaron: '\\u0161',\r\n\t    Yuml: '\\u0178',\r\n\t    fnof: '\\u0192',\r\n\t    circ: '\\u02C6',\r\n\t    tilde: '\\u02DC',\r\n\t    Alpha: '\\u0391',\r\n\t    Beta: '\\u0392',\r\n\t    Gamma: '\\u0393',\r\n\t    Delta: '\\u0394',\r\n\t    Epsilon: '\\u0395',\r\n\t    Zeta: '\\u0396',\r\n\t    Eta: '\\u0397',\r\n\t    Theta: '\\u0398',\r\n\t    Iota: '\\u0399',\r\n\t    Kappa: '\\u039A',\r\n\t    Lambda: '\\u039B',\r\n\t    Mu: '\\u039C',\r\n\t    Nu: '\\u039D',\r\n\t    Xi: '\\u039E',\r\n\t    Omicron: '\\u039F',\r\n\t    Pi: '\\u03A0',\r\n\t    Rho: '\\u03A1',\r\n\t    Sigma: '\\u03A3',\r\n\t    Tau: '\\u03A4',\r\n\t    Upsilon: '\\u03A5',\r\n\t    Phi: '\\u03A6',\r\n\t    Chi: '\\u03A7',\r\n\t    Psi: '\\u03A8',\r\n\t    Omega: '\\u03A9',\r\n\t    alpha: '\\u03B1',\r\n\t    beta: '\\u03B2',\r\n\t    gamma: '\\u03B3',\r\n\t    delta: '\\u03B4',\r\n\t    epsilon: '\\u03B5',\r\n\t    zeta: '\\u03B6',\r\n\t    eta: '\\u03B7',\r\n\t    theta: '\\u03B8',\r\n\t    iota: '\\u03B9',\r\n\t    kappa: '\\u03BA',\r\n\t    lambda: '\\u03BB',\r\n\t    mu: '\\u03BC',\r\n\t    nu: '\\u03BD',\r\n\t    xi: '\\u03BE',\r\n\t    omicron: '\\u03BF',\r\n\t    pi: '\\u03C0',\r\n\t    rho: '\\u03C1',\r\n\t    sigmaf: '\\u03C2',\r\n\t    sigma: '\\u03C3',\r\n\t    tau: '\\u03C4',\r\n\t    upsilon: '\\u03C5',\r\n\t    phi: '\\u03C6',\r\n\t    chi: '\\u03C7',\r\n\t    psi: '\\u03C8',\r\n\t    omega: '\\u03C9',\r\n\t    thetasym: '\\u03D1',\r\n\t    upsih: '\\u03D2',\r\n\t    piv: '\\u03D6',\r\n\t    ensp: '\\u2002',\r\n\t    emsp: '\\u2003',\r\n\t    thinsp: '\\u2009',\r\n\t    zwnj: '\\u200C',\r\n\t    zwj: '\\u200D',\r\n\t    lrm: '\\u200E',\r\n\t    rlm: '\\u200F',\r\n\t    ndash: '\\u2013',\r\n\t    mdash: '\\u2014',\r\n\t    lsquo: '\\u2018',\r\n\t    rsquo: '\\u2019',\r\n\t    sbquo: '\\u201A',\r\n\t    ldquo: '\\u201C',\r\n\t    rdquo: '\\u201D',\r\n\t    bdquo: '\\u201E',\r\n\t    dagger: '\\u2020',\r\n\t    Dagger: '\\u2021',\r\n\t    bull: '\\u2022',\r\n\t    hellip: '\\u2026',\r\n\t    permil: '\\u2030',\r\n\t    prime: '\\u2032',\r\n\t    Prime: '\\u2033',\r\n\t    lsaquo: '\\u2039',\r\n\t    rsaquo: '\\u203A',\r\n\t    oline: '\\u203E',\r\n\t    frasl: '\\u2044',\r\n\t    euro: '\\u20AC',\r\n\t    image: '\\u2111',\r\n\t    weierp: '\\u2118',\r\n\t    real: '\\u211C',\r\n\t    trade: '\\u2122',\r\n\t    alefsym: '\\u2135',\r\n\t    larr: '\\u2190',\r\n\t    uarr: '\\u2191',\r\n\t    rarr: '\\u2192',\r\n\t    darr: '\\u2193',\r\n\t    harr: '\\u2194',\r\n\t    crarr: '\\u21B5',\r\n\t    lArr: '\\u21D0',\r\n\t    uArr: '\\u21D1',\r\n\t    rArr: '\\u21D2',\r\n\t    dArr: '\\u21D3',\r\n\t    hArr: '\\u21D4',\r\n\t    forall: '\\u2200',\r\n\t    part: '\\u2202',\r\n\t    exist: '\\u2203',\r\n\t    empty: '\\u2205',\r\n\t    nabla: '\\u2207',\r\n\t    isin: '\\u2208',\r\n\t    notin: '\\u2209',\r\n\t    ni: '\\u220B',\r\n\t    prod: '\\u220F',\r\n\t    sum: '\\u2211',\r\n\t    minus: '\\u2212',\r\n\t    lowast: '\\u2217',\r\n\t    radic: '\\u221A',\r\n\t    prop: '\\u221D',\r\n\t    infin: '\\u221E',\r\n\t    ang: '\\u2220',\r\n\t    and: '\\u2227',\r\n\t    or: '\\u2228',\r\n\t    cap: '\\u2229',\r\n\t    cup: '\\u222A',\r\n\t    int: '\\u222B',\r\n\t    there4: '\\u2234',\r\n\t    sim: '\\u223C',\r\n\t    cong: '\\u2245',\r\n\t    asymp: '\\u2248',\r\n\t    ne: '\\u2260',\r\n\t    equiv: '\\u2261',\r\n\t    le: '\\u2264',\r\n\t    ge: '\\u2265',\r\n\t    sub: '\\u2282',\r\n\t    sup: '\\u2283',\r\n\t    nsub: '\\u2284',\r\n\t    sube: '\\u2286',\r\n\t    supe: '\\u2287',\r\n\t    oplus: '\\u2295',\r\n\t    otimes: '\\u2297',\r\n\t    perp: '\\u22A5',\r\n\t    sdot: '\\u22C5',\r\n\t    lceil: '\\u2308',\r\n\t    rceil: '\\u2309',\r\n\t    lfloor: '\\u230A',\r\n\t    rfloor: '\\u230B',\r\n\t    loz: '\\u25CA',\r\n\t    spades: '\\u2660',\r\n\t    clubs: '\\u2663',\r\n\t    hearts: '\\u2665',\r\n\t    diams: '\\u2666',\r\n\t    lang: '\\u27E8',\r\n\t    rang: '\\u27E9'\r\n\t};\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar error_handler_1 = __webpack_require__(10);\r\n\tvar scanner_1 = __webpack_require__(12);\r\n\tvar token_1 = __webpack_require__(13);\r\n\tvar Reader = (function () {\r\n\t    function Reader() {\r\n\t        this.values = [];\r\n\t        this.curly = this.paren = -1;\r\n\t    }\r\n\t    // A function following one of those tokens is an expression.\r\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\r\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\r\n\t            'return', 'case', 'delete', 'throw', 'void',\r\n\t            // assignment operators\r\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\r\n\t            '&=', '|=', '^=', ',',\r\n\t            // binary/unary operators\r\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\r\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\r\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\r\n\t    };\r\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\r\n\t    // https://github.com/mozilla/sweet.js/wiki/design\r\n\t    Reader.prototype.isRegexStart = function () {\r\n\t        var previous = this.values[this.values.length - 1];\r\n\t        var regex = (previous !== null);\r\n\t        switch (previous) {\r\n\t            case 'this':\r\n\t            case ']':\r\n\t                regex = false;\r\n\t                break;\r\n\t            case ')':\r\n\t                var keyword = this.values[this.paren - 1];\r\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\r\n\t                break;\r\n\t            case '}':\r\n\t                // Dividing a function by anything makes little sense,\r\n\t                // but we have to check for that.\r\n\t                regex = false;\r\n\t                if (this.values[this.curly - 3] === 'function') {\r\n\t                    // Anonymous function, e.g. function(){} /42\r\n\t                    var check = this.values[this.curly - 4];\r\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\r\n\t                }\r\n\t                else if (this.values[this.curly - 4] === 'function') {\r\n\t                    // Named function, e.g. function f(){} /42/\r\n\t                    var check = this.values[this.curly - 5];\r\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\r\n\t                }\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t        return regex;\r\n\t    };\r\n\t    Reader.prototype.push = function (token) {\r\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\r\n\t            if (token.value === '{') {\r\n\t                this.curly = this.values.length;\r\n\t            }\r\n\t            else if (token.value === '(') {\r\n\t                this.paren = this.values.length;\r\n\t            }\r\n\t            this.values.push(token.value);\r\n\t        }\r\n\t        else {\r\n\t            this.values.push(null);\r\n\t        }\r\n\t    };\r\n\t    return Reader;\r\n\t}());\r\n\tvar Tokenizer = (function () {\r\n\t    function Tokenizer(code, config) {\r\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\r\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\r\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\r\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\r\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\r\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\r\n\t        this.buffer = [];\r\n\t        this.reader = new Reader();\r\n\t    }\r\n\t    Tokenizer.prototype.errors = function () {\r\n\t        return this.errorHandler.errors;\r\n\t    };\r\n\t    Tokenizer.prototype.getNextToken = function () {\r\n\t        if (this.buffer.length === 0) {\r\n\t            var comments = this.scanner.scanComments();\r\n\t            if (this.scanner.trackComment) {\r\n\t                for (var i = 0; i < comments.length; ++i) {\r\n\t                    var e = comments[i];\r\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\r\n\t                    var comment = {\r\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\r\n\t                        value: value\r\n\t                    };\r\n\t                    if (this.trackRange) {\r\n\t                        comment.range = e.range;\r\n\t                    }\r\n\t                    if (this.trackLoc) {\r\n\t                        comment.loc = e.loc;\r\n\t                    }\r\n\t                    this.buffer.push(comment);\r\n\t                }\r\n\t            }\r\n\t            if (!this.scanner.eof()) {\r\n\t                var loc = void 0;\r\n\t                if (this.trackLoc) {\r\n\t                    loc = {\r\n\t                        start: {\r\n\t                            line: this.scanner.lineNumber,\r\n\t                            column: this.scanner.index - this.scanner.lineStart\r\n\t                        },\r\n\t                        end: {}\r\n\t                    };\r\n\t                }\r\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\r\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\r\n\t                this.reader.push(token);\r\n\t                var entry = {\r\n\t                    type: token_1.TokenName[token.type],\r\n\t                    value: this.scanner.source.slice(token.start, token.end)\r\n\t                };\r\n\t                if (this.trackRange) {\r\n\t                    entry.range = [token.start, token.end];\r\n\t                }\r\n\t                if (this.trackLoc) {\r\n\t                    loc.end = {\r\n\t                        line: this.scanner.lineNumber,\r\n\t                        column: this.scanner.index - this.scanner.lineStart\r\n\t                    };\r\n\t                    entry.loc = loc;\r\n\t                }\r\n\t                if (token.type === 9 /* RegularExpression */) {\r\n\t                    var pattern = token.pattern;\r\n\t                    var flags = token.flags;\r\n\t                    entry.regex = { pattern: pattern, flags: flags };\r\n\t                }\r\n\t                this.buffer.push(entry);\r\n\t            }\r\n\t        }\r\n\t        return this.buffer.shift();\r\n\t    };\r\n\t    return Tokenizer;\r\n\t}());\r\n\texports.Tokenizer = Tokenizer;\r\n\n\n/***/ }\n/******/ ])\n});\n;","\"use strict\";\n\n// This module is suitable for passing as options.parser when calling\n// recast.parse to process ECMAScript code with Esprima:\n//\n//   const ast = recast.parse(source, {\n//     parser: require(\"recast/parsers/esprima\")\n//   });\n//\nconst getOption = require(\"../lib/util.js\").getOption;\n\nexports.parse = function (source, options) {\n  const comments = [];\n  const ast = require(\"esprima\").parse(source, {\n    loc: true,\n    locations: true,\n    comment: true,\n    onComment: comments,\n    tolerant: getOption(options, \"tolerant\", true),\n    tokens: getOption(options, \"tokens\", true)\n  });\n\n  if (! Array.isArray(ast.comments)) {\n    ast.comments = comments;\n  }\n\n  return ast;\n};\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","var defaults = {\n    // If you want to use a different branch of esprima, or any other\n    // module that supports a .parse function, pass that module object to\n    // recast.parse as options.parser (legacy synonym: options.esprima).\n    parser: require(\"../parsers/esprima\"),\n\n    // Number of spaces the pretty-printer should use per tab for\n    // indentation. If you do not pass this option explicitly, it will be\n    // (quite reliably!) inferred from the original code.\n    tabWidth: 4,\n\n    // If you really want the pretty-printer to use tabs instead of\n    // spaces, make this option true.\n    useTabs: false,\n\n    // The reprinting code leaves leading whitespace untouched unless it\n    // has to reindent a line, or you pass false for this option.\n    reuseWhitespace: true,\n\n    // Override this option to use a different line terminator, e.g. \\r\\n.\n    lineTerminator: require(\"os\").EOL,\n\n    // Some of the pretty-printer code (such as that for printing function\n    // parameter lists) makes a valiant attempt to prevent really long\n    // lines. You can adjust the limit by changing this option; however,\n    // there is no guarantee that line length will fit inside this limit.\n    wrapColumn: 74, // Aspirational for now.\n\n    // Pass a string as options.sourceFileName to recast.parse to tell the\n    // reprinter to keep track of reused code so that it can construct a\n    // source map automatically.\n    sourceFileName: null,\n\n    // Pass a string as options.sourceMapName to recast.print, and\n    // (provided you passed options.sourceFileName earlier) the\n    // PrintResult of recast.print will have a .map property for the\n    // generated source map.\n    sourceMapName: null,\n\n    // If provided, this option will be passed along to the source map\n    // generator as a root directory for relative source file paths.\n    sourceRoot: null,\n\n    // If you provide a source map that was generated from a previous call\n    // to recast.print as options.inputSourceMap, the old source map will\n    // be composed with the new source map.\n    inputSourceMap: null,\n\n    // If you want esprima to generate .range information (recast only\n    // uses .loc internally), pass true for this option.\n    range: false,\n\n    // If you want esprima not to throw exceptions when it encounters\n    // non-fatal errors, keep this option true.\n    tolerant: true,\n\n    // If you want to override the quotes used in string literals, specify\n    // either \"single\", \"double\", or \"auto\" here (\"auto\" will select the one\n    // which results in the shorter literal)\n    // Otherwise, double quotes are used.\n    quote: null,\n\n    // Controls the printing of trailing commas in object literals,\n    // array expressions and function parameters.\n    //\n    // This option could either be:\n    // * Boolean - enable/disable in all contexts (objects, arrays and function params).\n    // * Object - enable/disable per context.\n    //\n    // Example:\n    // trailingComma: {\n    //   objects: true,\n    //   arrays: true,\n    //   parameters: false,\n    // }\n    trailingComma: false,\n\n    // Controls the printing of spaces inside array brackets.\n    // See: http://eslint.org/docs/rules/array-bracket-spacing\n    arrayBracketSpacing: false,\n\n    // Controls the printing of spaces inside object literals,\n    // destructuring assignments, and import/export specifiers.\n    // See: http://eslint.org/docs/rules/object-curly-spacing\n    objectCurlySpacing: true,\n\n    // If you want parenthesis to wrap single-argument arrow function parameter\n    // lists, pass true for this option.\n    arrowParensAlways: false,\n\n    // There are 2 supported syntaxes (`,` and `;`) in Flow Object Types;\n    // The use of commas is in line with the more popular style and matches\n    // how objects are defined in JS, making it a bit more natural to write.\n    flowObjectCommas: true,\n}, hasOwn = defaults.hasOwnProperty;\n\n// Copy options and fill in default values.\nexports.normalize = function(options) {\n    options = options || defaults;\n\n    function get(key) {\n        return hasOwn.call(options, key)\n            ? options[key]\n            : defaults[key];\n    }\n\n    return {\n        tabWidth: +get(\"tabWidth\"),\n        useTabs: !!get(\"useTabs\"),\n        reuseWhitespace: !!get(\"reuseWhitespace\"),\n        lineTerminator: get(\"lineTerminator\"),\n        wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n        sourceFileName: get(\"sourceFileName\"),\n        sourceMapName: get(\"sourceMapName\"),\n        sourceRoot: get(\"sourceRoot\"),\n        inputSourceMap: get(\"inputSourceMap\"),\n        parser: get(\"esprima\") || get(\"parser\"),\n        range: get(\"range\"),\n        tolerant: get(\"tolerant\"),\n        quote: get(\"quote\"),\n        trailingComma: get(\"trailingComma\"),\n        arrayBracketSpacing: get(\"arrayBracketSpacing\"),\n        objectCurlySpacing: get(\"objectCurlySpacing\"),\n        arrowParensAlways: get(\"arrowParensAlways\"),\n        flowObjectCommas: get(\"flowObjectCommas\"),\n    };\n};\n","\"use strict\";\n\nvar originalObject = Object;\nvar originalDefProp = Object.defineProperty;\nvar originalCreate = Object.create;\n\nfunction defProp(obj, name, value) {\n  if (originalDefProp) try {\n    originalDefProp.call(originalObject, obj, name, { value: value });\n  } catch (definePropertyIsBrokenInIE8) {\n    obj[name] = value;\n  } else {\n    obj[name] = value;\n  }\n}\n\n// For functions that will be invoked using .call or .apply, we need to\n// define those methods on the function objects themselves, rather than\n// inheriting them from Function.prototype, so that a malicious or clumsy\n// third party cannot interfere with the functionality of this module by\n// redefining Function.prototype.call or .apply.\nfunction makeSafeToCall(fun) {\n  if (fun) {\n    defProp(fun, \"call\", fun.call);\n    defProp(fun, \"apply\", fun.apply);\n  }\n  return fun;\n}\n\nmakeSafeToCall(originalDefProp);\nmakeSafeToCall(originalCreate);\n\nvar hasOwn = makeSafeToCall(Object.prototype.hasOwnProperty);\nvar numToStr = makeSafeToCall(Number.prototype.toString);\nvar strSlice = makeSafeToCall(String.prototype.slice);\n\nvar cloner = function(){};\nfunction create(prototype) {\n  if (originalCreate) {\n    return originalCreate.call(originalObject, prototype);\n  }\n  cloner.prototype = prototype || null;\n  return new cloner;\n}\n\nvar rand = Math.random;\nvar uniqueKeys = create(null);\n\nfunction makeUniqueKey() {\n  // Collisions are highly unlikely, but this module is in the business of\n  // making guarantees rather than safe bets.\n  do var uniqueKey = internString(strSlice.call(numToStr.call(rand(), 36), 2));\n  while (hasOwn.call(uniqueKeys, uniqueKey));\n  return uniqueKeys[uniqueKey] = uniqueKey;\n}\n\nfunction internString(str) {\n  var obj = {};\n  obj[str] = true;\n  return Object.keys(obj)[0];\n}\n\n// External users might find this function useful, but it is not necessary\n// for the typical use of this module.\nexports.makeUniqueKey = makeUniqueKey;\n\n// Object.getOwnPropertyNames is the only way to enumerate non-enumerable\n// properties, so if we wrap it to ignore our secret keys, there should be\n// no way (except guessing) to access those properties.\nvar originalGetOPNs = Object.getOwnPropertyNames;\nObject.getOwnPropertyNames = function getOwnPropertyNames(object) {\n  for (var names = originalGetOPNs(object),\n           src = 0,\n           dst = 0,\n           len = names.length;\n       src < len;\n       ++src) {\n    if (!hasOwn.call(uniqueKeys, names[src])) {\n      if (src > dst) {\n        names[dst] = names[src];\n      }\n      ++dst;\n    }\n  }\n  names.length = dst;\n  return names;\n};\n\nfunction defaultCreatorFn(object) {\n  return create(null);\n}\n\nfunction makeAccessor(secretCreatorFn) {\n  var brand = makeUniqueKey();\n  var passkey = create(null);\n\n  secretCreatorFn = secretCreatorFn || defaultCreatorFn;\n\n  function register(object) {\n    var secret; // Created lazily.\n\n    function vault(key, forget) {\n      // Only code that has access to the passkey can retrieve (or forget)\n      // the secret object.\n      if (key === passkey) {\n        return forget\n          ? secret = null\n          : secret || (secret = secretCreatorFn(object));\n      }\n    }\n\n    defProp(object, brand, vault);\n  }\n\n  function accessor(object) {\n    if (!hasOwn.call(object, brand))\n      register(object);\n    return object[brand](passkey);\n  }\n\n  accessor.forget = function(object) {\n    if (hasOwn.call(object, brand))\n      object[brand](passkey, true);\n  };\n\n  return accessor;\n}\n\nexports.makeAccessor = makeAccessor;\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar isString = types.builtInTypes.string;\nvar isNumber = types.builtInTypes.number;\nvar SourceLocation = types.namedTypes.SourceLocation;\nvar Position = types.namedTypes.Position;\nvar linesModule = require(\"./lines\");\nvar comparePos = require(\"./util\").comparePos;\n\nfunction Mapping(sourceLines, sourceLoc, targetLoc) {\n    assert.ok(this instanceof Mapping);\n    assert.ok(sourceLines instanceof linesModule.Lines);\n    SourceLocation.assert(sourceLoc);\n\n    if (targetLoc) {\n        // In certain cases it's possible for targetLoc.{start,end}.column\n        // values to be negative, which technically makes them no longer\n        // valid SourceLocation nodes, so we need to be more forgiving.\n        assert.ok(\n            isNumber.check(targetLoc.start.line) &&\n            isNumber.check(targetLoc.start.column) &&\n            isNumber.check(targetLoc.end.line) &&\n            isNumber.check(targetLoc.end.column)\n        );\n    } else {\n        // Assume identity mapping if no targetLoc specified.\n        targetLoc = sourceLoc;\n    }\n\n    Object.defineProperties(this, {\n        sourceLines: { value: sourceLines },\n        sourceLoc: { value: sourceLoc },\n        targetLoc: { value: targetLoc }\n    });\n}\n\nvar Mp = Mapping.prototype;\nmodule.exports = Mapping;\n\nMp.slice = function(lines, start, end) {\n    assert.ok(lines instanceof linesModule.Lines);\n    Position.assert(start);\n\n    if (end) {\n        Position.assert(end);\n    } else {\n        end = lines.lastPos();\n    }\n\n    var sourceLines = this.sourceLines;\n    var sourceLoc = this.sourceLoc;\n    var targetLoc = this.targetLoc;\n\n    function skip(name) {\n        var sourceFromPos = sourceLoc[name];\n        var targetFromPos = targetLoc[name];\n        var targetToPos = start;\n\n        if (name === \"end\") {\n            targetToPos = end;\n        } else {\n            assert.strictEqual(name, \"start\");\n        }\n\n        return skipChars(\n            sourceLines, sourceFromPos,\n            lines, targetFromPos, targetToPos\n        );\n    }\n\n    if (comparePos(start, targetLoc.start) <= 0) {\n        if (comparePos(targetLoc.end, end) <= 0) {\n            targetLoc = {\n                start: subtractPos(targetLoc.start, start.line, start.column),\n                end: subtractPos(targetLoc.end, start.line, start.column)\n            };\n\n            // The sourceLoc can stay the same because the contents of the\n            // targetLoc have not changed.\n\n        } else if (comparePos(end, targetLoc.start) <= 0) {\n            return null;\n\n        } else {\n            sourceLoc = {\n                start: sourceLoc.start,\n                end: skip(\"end\")\n            };\n\n            targetLoc = {\n                start: subtractPos(targetLoc.start, start.line, start.column),\n                end: subtractPos(end, start.line, start.column)\n            };\n        }\n\n    } else {\n        if (comparePos(targetLoc.end, start) <= 0) {\n            return null;\n        }\n\n        if (comparePos(targetLoc.end, end) <= 0) {\n            sourceLoc = {\n                start: skip(\"start\"),\n                end: sourceLoc.end\n            };\n\n            targetLoc = {\n                // Same as subtractPos(start, start.line, start.column):\n                start: { line: 1, column: 0 },\n                end: subtractPos(targetLoc.end, start.line, start.column)\n            };\n\n        } else {\n            sourceLoc = {\n                start: skip(\"start\"),\n                end: skip(\"end\")\n            };\n\n            targetLoc = {\n                // Same as subtractPos(start, start.line, start.column):\n                start: { line: 1, column: 0 },\n                end: subtractPos(end, start.line, start.column)\n            };\n        }\n    }\n\n    return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n};\n\nMp.add = function(line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n        start: addPos(this.targetLoc.start, line, column),\n        end: addPos(this.targetLoc.end, line, column)\n    });\n};\n\nfunction addPos(toPos, line, column) {\n    return {\n        line: toPos.line + line - 1,\n        column: (toPos.line === 1)\n            ? toPos.column + column\n            : toPos.column\n    };\n}\n\nMp.subtract = function(line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n        start: subtractPos(this.targetLoc.start, line, column),\n        end: subtractPos(this.targetLoc.end, line, column)\n    });\n};\n\nfunction subtractPos(fromPos, line, column) {\n    return {\n        line: fromPos.line - line + 1,\n        column: (fromPos.line === line)\n            ? fromPos.column - column\n            : fromPos.column\n    };\n}\n\nMp.indent = function(by, skipFirstLine, noNegativeColumns) {\n    if (by === 0) {\n        return this;\n    }\n\n    var targetLoc = this.targetLoc;\n    var startLine = targetLoc.start.line;\n    var endLine = targetLoc.end.line;\n\n    if (skipFirstLine && startLine === 1 && endLine === 1) {\n        return this;\n    }\n\n    targetLoc = {\n        start: targetLoc.start,\n        end: targetLoc.end\n    };\n\n    if (!skipFirstLine || startLine > 1) {\n        var startColumn = targetLoc.start.column + by;\n        targetLoc.start = {\n            line: startLine,\n            column: noNegativeColumns\n                ? Math.max(0, startColumn)\n                : startColumn\n        };\n    }\n\n    if (!skipFirstLine || endLine > 1) {\n        var endColumn = targetLoc.end.column + by;\n        targetLoc.end = {\n            line: endLine,\n            column: noNegativeColumns\n                ? Math.max(0, endColumn)\n                : endColumn\n        };\n    }\n\n    return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n};\n\nfunction skipChars(\n    sourceLines, sourceFromPos,\n    targetLines, targetFromPos, targetToPos\n) {\n    assert.ok(sourceLines instanceof linesModule.Lines);\n    assert.ok(targetLines instanceof linesModule.Lines);\n    Position.assert(sourceFromPos);\n    Position.assert(targetFromPos);\n    Position.assert(targetToPos);\n\n    var targetComparison = comparePos(targetFromPos, targetToPos);\n    if (targetComparison === 0) {\n        // Trivial case: no characters to skip.\n        return sourceFromPos;\n    }\n\n    if (targetComparison < 0) {\n        // Skipping forward.\n\n        var sourceCursor = sourceLines.skipSpaces(sourceFromPos);\n        var targetCursor = targetLines.skipSpaces(targetFromPos);\n\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n\n        if (lineDiff > 0) {\n            // If jumping to later lines, reset columns to the beginnings\n            // of those lines.\n            sourceCursor.column = 0;\n            targetCursor.column = 0;\n        } else {\n            assert.strictEqual(lineDiff, 0);\n        }\n\n        while (comparePos(targetCursor, targetToPos) < 0 &&\n               targetLines.nextPos(targetCursor, true)) {\n            assert.ok(sourceLines.nextPos(sourceCursor, true));\n            assert.strictEqual(\n                sourceLines.charAt(sourceCursor),\n                targetLines.charAt(targetCursor)\n            );\n        }\n\n    } else {\n        // Skipping backward.\n\n        var sourceCursor = sourceLines.skipSpaces(sourceFromPos, true);\n        var targetCursor = targetLines.skipSpaces(targetFromPos, true);\n\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n\n        if (lineDiff < 0) {\n            // If jumping to earlier lines, reset columns to the ends of\n            // those lines.\n            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n        } else {\n            assert.strictEqual(lineDiff, 0);\n        }\n\n        while (comparePos(targetToPos, targetCursor) < 0 &&\n               targetLines.prevPos(targetCursor, true)) {\n            assert.ok(sourceLines.prevPos(sourceCursor, true));\n            assert.strictEqual(\n                sourceLines.charAt(sourceCursor),\n                targetLines.charAt(targetCursor)\n            );\n        }\n    }\n\n    return sourceCursor;\n}\n","var assert = require(\"assert\");\nvar sourceMap = require(\"source-map\");\nvar normalizeOptions = require(\"./options\").normalize;\nvar secretKey = require(\"private\").makeUniqueKey();\nvar types = require(\"./types\");\nvar isString = types.builtInTypes.string;\nvar comparePos = require(\"./util\").comparePos;\nvar Mapping = require(\"./mapping\");\n\n// Goals:\n// 1. Minimize new string creation.\n// 2. Keep (de)identation O(lines) time.\n// 3. Permit negative indentations.\n// 4. Enforce immutability.\n// 5. No newline characters.\n\nvar useSymbol = typeof Symbol === \"function\";\nvar secretKey = \"recastLinesSecret\";\nif (useSymbol) {\n  secretKey = Symbol.for(secretKey);\n}\n\nfunction getSecret(lines) {\n  return lines[secretKey];\n}\n\nfunction Lines(infos, sourceFileName) {\n  assert.ok(this instanceof Lines);\n  assert.ok(infos.length > 0);\n\n  if (sourceFileName) {\n    isString.assert(sourceFileName);\n  } else {\n    sourceFileName = null;\n  }\n\n  setSymbolOrKey(this, secretKey, {\n    infos: infos,\n    mappings: [],\n    name: sourceFileName,\n    cachedSourceMap: null\n  });\n\n  this.length = infos.length;\n  this.name = sourceFileName;\n\n  if (sourceFileName) {\n    getSecret(this).mappings.push(new Mapping(this, {\n      start: this.firstPos(),\n      end: this.lastPos()\n    }));\n  }\n}\n\nfunction setSymbolOrKey(obj, key, value) {\n  if (useSymbol) {\n    return obj[key] = value;\n  }\n\n  Object.defineProperty(obj, key, {\n    value: value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  });\n\n  return value;\n}\n\n// Exposed for instanceof checks. The fromString function should be used\n// to create new Lines objects.\nexports.Lines = Lines;\nvar Lp = Lines.prototype;\n\nfunction copyLineInfo(info) {\n  return {\n    line: info.line,\n    indent: info.indent,\n    locked: info.locked,\n    sliceStart: info.sliceStart,\n    sliceEnd: info.sliceEnd\n  };\n}\n\nvar fromStringCache = {};\nvar hasOwn = fromStringCache.hasOwnProperty;\nvar maxCacheKeyLen = 10;\n\nfunction countSpaces(spaces, tabWidth) {\n  var count = 0;\n  var len = spaces.length;\n\n  for (var i = 0; i < len; ++i) {\n    switch (spaces.charCodeAt(i)) {\n    case 9: // '\\t'\n      assert.strictEqual(typeof tabWidth, \"number\");\n      assert.ok(tabWidth > 0);\n\n      var next = Math.ceil(count / tabWidth) * tabWidth;\n      if (next === count) {\n        count += tabWidth;\n      } else {\n        count = next;\n      }\n\n      break;\n\n    case 11: // '\\v'\n    case 12: // '\\f'\n    case 13: // '\\r'\n    case 0xfeff: // zero-width non-breaking space\n      // These characters contribute nothing to indentation.\n      break;\n\n    case 32: // ' '\n    default: // Treat all other whitespace like ' '.\n      count += 1;\n      break;\n    }\n  }\n\n  return count;\n}\nexports.countSpaces = countSpaces;\n\nvar leadingSpaceExp = /^\\s*/;\n\n// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators\nvar lineTerminatorSeqExp =\n  /\\u000D\\u000A|\\u000D(?!\\u000A)|\\u000A|\\u2028|\\u2029/;\n\n/**\n * @param {Object} options - Options object that configures printing.\n */\nfunction fromString(string, options) {\n  if (string instanceof Lines)\n    return string;\n\n  string += \"\";\n\n  var tabWidth = options && options.tabWidth;\n  var tabless = string.indexOf(\"\\t\") < 0;\n  var locked = !! (options && options.locked);\n  var cacheable = !options && tabless && (string.length <= maxCacheKeyLen);\n\n  assert.ok(tabWidth || tabless, \"No tab width specified but encountered tabs in string\\n\" + string);\n\n  if (cacheable && hasOwn.call(fromStringCache, string))\n    return fromStringCache[string];\n\n  var lines = new Lines(string.split(lineTerminatorSeqExp).map(function(line) {\n    var spaces = leadingSpaceExp.exec(line)[0];\n    return {\n      line: line,\n      indent: countSpaces(spaces, tabWidth),\n      // Boolean indicating whether this line can be reindented.\n      locked: locked,\n      sliceStart: spaces.length,\n      sliceEnd: line.length\n    };\n  }), normalizeOptions(options).sourceFileName);\n\n  if (cacheable)\n    fromStringCache[string] = lines;\n\n  return lines;\n}\nexports.fromString = fromString;\n\nfunction isOnlyWhitespace(string) {\n  return !/\\S/.test(string);\n}\n\nLp.toString = function(options) {\n  return this.sliceString(this.firstPos(), this.lastPos(), options);\n};\n\nLp.getSourceMap = function(sourceMapName, sourceRoot) {\n  if (!sourceMapName) {\n    // Although we could make up a name or generate an anonymous\n    // source map, instead we assume that any consumer who does not\n    // provide a name does not actually want a source map.\n    return null;\n  }\n\n  var targetLines = this;\n\n  function updateJSON(json) {\n    json = json || {};\n\n    isString.assert(sourceMapName);\n    json.file = sourceMapName;\n\n    if (sourceRoot) {\n      isString.assert(sourceRoot);\n      json.sourceRoot = sourceRoot;\n    }\n\n    return json;\n  }\n\n  var secret = getSecret(targetLines);\n  if (secret.cachedSourceMap) {\n    // Since Lines objects are immutable, we can reuse any source map\n    // that was previously generated. Nevertheless, we return a new\n    // JSON object here to protect the cached source map from outside\n    // modification.\n    return updateJSON(secret.cachedSourceMap.toJSON());\n  }\n\n  var smg = new sourceMap.SourceMapGenerator(updateJSON());\n  var sourcesToContents = {};\n\n  secret.mappings.forEach(function(mapping) {\n    var sourceCursor = mapping.sourceLines.skipSpaces(\n      mapping.sourceLoc.start\n    ) || mapping.sourceLines.lastPos();\n\n    var targetCursor = targetLines.skipSpaces(\n      mapping.targetLoc.start\n    ) || targetLines.lastPos();\n\n    while (comparePos(sourceCursor, mapping.sourceLoc.end) < 0 &&\n           comparePos(targetCursor, mapping.targetLoc.end) < 0) {\n\n      var sourceChar = mapping.sourceLines.charAt(sourceCursor);\n      var targetChar = targetLines.charAt(targetCursor);\n      assert.strictEqual(sourceChar, targetChar);\n\n      var sourceName = mapping.sourceLines.name;\n\n      // Add mappings one character at a time for maximum resolution.\n      smg.addMapping({\n        source: sourceName,\n        original: { line: sourceCursor.line,\n                    column: sourceCursor.column },\n        generated: { line: targetCursor.line,\n                     column: targetCursor.column }\n      });\n\n      if (!hasOwn.call(sourcesToContents, sourceName)) {\n        var sourceContent = mapping.sourceLines.toString();\n        smg.setSourceContent(sourceName, sourceContent);\n        sourcesToContents[sourceName] = sourceContent;\n      }\n\n      targetLines.nextPos(targetCursor, true);\n      mapping.sourceLines.nextPos(sourceCursor, true);\n    }\n  });\n\n  secret.cachedSourceMap = smg;\n\n  return smg.toJSON();\n};\n\nLp.bootstrapCharAt = function(pos) {\n  assert.strictEqual(typeof pos, \"object\");\n  assert.strictEqual(typeof pos.line, \"number\");\n  assert.strictEqual(typeof pos.column, \"number\");\n\n  var line = pos.line,\n  column = pos.column,\n  strings = this.toString().split(lineTerminatorSeqExp),\n  string = strings[line - 1];\n\n  if (typeof string === \"undefined\")\n    return \"\";\n\n  if (column === string.length &&\n      line < strings.length)\n    return \"\\n\";\n\n  if (column >= string.length)\n    return \"\";\n\n  return string.charAt(column);\n};\n\nLp.charAt = function(pos) {\n  assert.strictEqual(typeof pos, \"object\");\n  assert.strictEqual(typeof pos.line, \"number\");\n  assert.strictEqual(typeof pos.column, \"number\");\n\n  var line = pos.line,\n  column = pos.column,\n  secret = getSecret(this),\n  infos = secret.infos,\n  info = infos[line - 1],\n  c = column;\n\n  if (typeof info === \"undefined\" || c < 0)\n    return \"\";\n\n  var indent = this.getIndentAt(line);\n  if (c < indent)\n    return \" \";\n\n  c += info.sliceStart - indent;\n\n  if (c === info.sliceEnd &&\n      line < this.length)\n    return \"\\n\";\n\n  if (c >= info.sliceEnd)\n    return \"\";\n\n  return info.line.charAt(c);\n};\n\nLp.stripMargin = function(width, skipFirstLine) {\n  if (width === 0)\n    return this;\n\n  assert.ok(width > 0, \"negative margin: \" + width);\n\n  if (skipFirstLine && this.length === 1)\n    return this;\n\n  var secret = getSecret(this);\n\n  var lines = new Lines(secret.infos.map(function(info, i) {\n    if (info.line && (i > 0 || !skipFirstLine)) {\n      info = copyLineInfo(info);\n      info.indent = Math.max(0, info.indent - width);\n    }\n    return info;\n  }));\n\n  if (secret.mappings.length > 0) {\n    var newMappings = getSecret(lines).mappings;\n    assert.strictEqual(newMappings.length, 0);\n    secret.mappings.forEach(function(mapping) {\n      newMappings.push(mapping.indent(width, skipFirstLine, true));\n    });\n  }\n\n  return lines;\n};\n\nLp.indent = function(by) {\n  if (by === 0)\n    return this;\n\n  var secret = getSecret(this);\n\n  var lines = new Lines(secret.infos.map(function(info) {\n    if (info.line && ! info.locked) {\n      info = copyLineInfo(info);\n      info.indent += by;\n    }\n    return info\n  }));\n\n  if (secret.mappings.length > 0) {\n    var newMappings = getSecret(lines).mappings;\n    assert.strictEqual(newMappings.length, 0);\n    secret.mappings.forEach(function(mapping) {\n      newMappings.push(mapping.indent(by));\n    });\n  }\n\n  return lines;\n};\n\nLp.indentTail = function(by) {\n  if (by === 0)\n    return this;\n\n  if (this.length < 2)\n    return this;\n\n  var secret = getSecret(this);\n\n  var lines = new Lines(secret.infos.map(function(info, i) {\n    if (i > 0 && info.line && ! info.locked) {\n      info = copyLineInfo(info);\n      info.indent += by;\n    }\n\n    return info;\n  }));\n\n  if (secret.mappings.length > 0) {\n    var newMappings = getSecret(lines).mappings;\n    assert.strictEqual(newMappings.length, 0);\n    secret.mappings.forEach(function(mapping) {\n      newMappings.push(mapping.indent(by, true));\n    });\n  }\n\n  return lines;\n};\n\nLp.lockIndentTail = function () {\n  if (this.length < 2) {\n    return this;\n  }\n\n  var infos = getSecret(this).infos;\n\n  return new Lines(infos.map(function (info, i) {\n    info = copyLineInfo(info);\n    info.locked = i > 0;\n    return info;\n  }));\n};\n\nLp.getIndentAt = function(line) {\n  assert.ok(line >= 1, \"no line \" + line + \" (line numbers start from 1)\");\n  var secret = getSecret(this),\n  info = secret.infos[line - 1];\n  return Math.max(info.indent, 0);\n};\n\nLp.guessTabWidth = function() {\n  var secret = getSecret(this);\n  if (hasOwn.call(secret, \"cachedTabWidth\")) {\n    return secret.cachedTabWidth;\n  }\n\n  var counts = []; // Sparse array.\n  var lastIndent = 0;\n\n  for (var line = 1, last = this.length; line <= last; ++line) {\n    var info = secret.infos[line - 1];\n    var sliced = info.line.slice(info.sliceStart, info.sliceEnd);\n\n    // Whitespace-only lines don't tell us much about the likely tab\n    // width of this code.\n    if (isOnlyWhitespace(sliced)) {\n      continue;\n    }\n\n    var diff = Math.abs(info.indent - lastIndent);\n    counts[diff] = ~~counts[diff] + 1;\n    lastIndent = info.indent;\n  }\n\n  var maxCount = -1;\n  var result = 2;\n\n  for (var tabWidth = 1;\n       tabWidth < counts.length;\n       tabWidth += 1) {\n    if (hasOwn.call(counts, tabWidth) &&\n        counts[tabWidth] > maxCount) {\n      maxCount = counts[tabWidth];\n      result = tabWidth;\n    }\n  }\n\n  return secret.cachedTabWidth = result;\n};\n\n// Determine if the list of lines has a first line that starts with a //\n// or /* comment. If this is the case, the code may need to be wrapped in\n// parens to avoid ASI issues.\nLp.startsWithComment = function () {\n  var secret = getSecret(this);\n  if (secret.infos.length === 0) {\n    return false;\n  }\n  var firstLineInfo = secret.infos[0],\n  sliceStart = firstLineInfo.sliceStart,\n  sliceEnd = firstLineInfo.sliceEnd,\n  firstLine = firstLineInfo.line.slice(sliceStart, sliceEnd).trim();\n  return firstLine.length === 0 ||\n    firstLine.slice(0, 2) === \"//\" ||\n    firstLine.slice(0, 2) === \"/*\";\n};\n\nLp.isOnlyWhitespace = function() {\n  return isOnlyWhitespace(this.toString());\n};\n\nLp.isPrecededOnlyByWhitespace = function(pos) {\n  var secret = getSecret(this);\n  var info = secret.infos[pos.line - 1];\n  var indent = Math.max(info.indent, 0);\n\n  var diff = pos.column - indent;\n  if (diff <= 0) {\n    // If pos.column does not exceed the indentation amount, then\n    // there must be only whitespace before it.\n    return true;\n  }\n\n  var start = info.sliceStart;\n  var end = Math.min(start + diff, info.sliceEnd);\n  var prefix = info.line.slice(start, end);\n\n  return isOnlyWhitespace(prefix);\n};\n\nLp.getLineLength = function(line) {\n  var secret = getSecret(this),\n  info = secret.infos[line - 1];\n  return this.getIndentAt(line) + info.sliceEnd - info.sliceStart;\n};\n\nLp.nextPos = function(pos, skipSpaces) {\n  var l = Math.max(pos.line, 0),\n  c = Math.max(pos.column, 0);\n\n  if (c < this.getLineLength(l)) {\n    pos.column += 1;\n\n    return skipSpaces\n      ? !!this.skipSpaces(pos, false, true)\n      : true;\n  }\n\n  if (l < this.length) {\n    pos.line += 1;\n    pos.column = 0;\n\n    return skipSpaces\n      ? !!this.skipSpaces(pos, false, true)\n      : true;\n  }\n\n  return false;\n};\n\nLp.prevPos = function(pos, skipSpaces) {\n  var l = pos.line,\n  c = pos.column;\n\n  if (c < 1) {\n    l -= 1;\n\n    if (l < 1)\n      return false;\n\n    c = this.getLineLength(l);\n\n  } else {\n    c = Math.min(c - 1, this.getLineLength(l));\n  }\n\n  pos.line = l;\n  pos.column = c;\n\n  return skipSpaces\n    ? !!this.skipSpaces(pos, true, true)\n    : true;\n};\n\nLp.firstPos = function() {\n  // Trivial, but provided for completeness.\n  return { line: 1, column: 0 };\n};\n\nLp.lastPos = function() {\n  return {\n    line: this.length,\n    column: this.getLineLength(this.length)\n  };\n};\n\nLp.skipSpaces = function(pos, backward, modifyInPlace) {\n  if (pos) {\n    pos = modifyInPlace ? pos : {\n      line: pos.line,\n      column: pos.column\n    };\n  } else if (backward) {\n    pos = this.lastPos();\n  } else {\n    pos = this.firstPos();\n  }\n\n  if (backward) {\n    while (this.prevPos(pos)) {\n      if (!isOnlyWhitespace(this.charAt(pos)) &&\n          this.nextPos(pos)) {\n        return pos;\n      }\n    }\n\n    return null;\n\n  } else {\n    while (isOnlyWhitespace(this.charAt(pos))) {\n      if (!this.nextPos(pos)) {\n        return null;\n      }\n    }\n\n    return pos;\n  }\n};\n\nLp.trimLeft = function() {\n  var pos = this.skipSpaces(this.firstPos(), false, true);\n  return pos ? this.slice(pos) : emptyLines;\n};\n\nLp.trimRight = function() {\n  var pos = this.skipSpaces(this.lastPos(), true, true);\n  return pos ? this.slice(this.firstPos(), pos) : emptyLines;\n};\n\nLp.trim = function() {\n  var start = this.skipSpaces(this.firstPos(), false, true);\n  if (start === null)\n    return emptyLines;\n\n  var end = this.skipSpaces(this.lastPos(), true, true);\n  assert.notStrictEqual(end, null);\n\n  return this.slice(start, end);\n};\n\nLp.eachPos = function(callback, startPos, skipSpaces) {\n  var pos = this.firstPos();\n\n  if (startPos) {\n    pos.line = startPos.line,\n    pos.column = startPos.column\n  }\n\n  if (skipSpaces && !this.skipSpaces(pos, false, true)) {\n    return; // Encountered nothing but spaces.\n  }\n\n  do callback.call(this, pos);\n  while (this.nextPos(pos, skipSpaces));\n};\n\nLp.bootstrapSlice = function(start, end) {\n  var strings = this.toString().split(\n    lineTerminatorSeqExp\n  ).slice(\n    start.line - 1,\n    end.line\n  );\n\n  strings.push(strings.pop().slice(0, end.column));\n  strings[0] = strings[0].slice(start.column);\n\n  return fromString(strings.join(\"\\n\"));\n};\n\nLp.slice = function(start, end) {\n  if (!end) {\n    if (!start) {\n      // The client seems to want a copy of this Lines object, but\n      // Lines objects are immutable, so it's perfectly adequate to\n      // return the same object.\n      return this;\n    }\n\n    // Slice to the end if no end position was provided.\n    end = this.lastPos();\n  }\n\n  var secret = getSecret(this);\n  var sliced = secret.infos.slice(start.line - 1, end.line);\n\n  if (start.line === end.line) {\n    sliced[0] = sliceInfo(sliced[0], start.column, end.column);\n  } else {\n    assert.ok(start.line < end.line);\n    sliced[0] = sliceInfo(sliced[0], start.column);\n    sliced.push(sliceInfo(sliced.pop(), 0, end.column));\n  }\n\n  var lines = new Lines(sliced);\n\n  if (secret.mappings.length > 0) {\n    var newMappings = getSecret(lines).mappings;\n    assert.strictEqual(newMappings.length, 0);\n    secret.mappings.forEach(function(mapping) {\n      var sliced = mapping.slice(this, start, end);\n      if (sliced) {\n        newMappings.push(sliced);\n      }\n    }, this);\n  }\n\n  return lines;\n};\n\nfunction sliceInfo(info, startCol, endCol) {\n  var sliceStart = info.sliceStart;\n  var sliceEnd = info.sliceEnd;\n  var indent = Math.max(info.indent, 0);\n  var lineLength = indent + sliceEnd - sliceStart;\n\n  if (typeof endCol === \"undefined\") {\n    endCol = lineLength;\n  }\n\n  startCol = Math.max(startCol, 0);\n  endCol = Math.min(endCol, lineLength);\n  endCol = Math.max(endCol, startCol);\n\n  if (endCol < indent) {\n    indent = endCol;\n    sliceEnd = sliceStart;\n  } else {\n    sliceEnd -= lineLength - endCol;\n  }\n\n  lineLength = endCol;\n  lineLength -= startCol;\n\n  if (startCol < indent) {\n    indent -= startCol;\n  } else {\n    startCol -= indent;\n    indent = 0;\n    sliceStart += startCol;\n  }\n\n  assert.ok(indent >= 0);\n  assert.ok(sliceStart <= sliceEnd);\n  assert.strictEqual(lineLength, indent + sliceEnd - sliceStart);\n\n  if (info.indent === indent &&\n      info.sliceStart === sliceStart &&\n      info.sliceEnd === sliceEnd) {\n    return info;\n  }\n\n  return {\n    line: info.line,\n    indent: indent,\n    // A destructive slice always unlocks indentation.\n    locked: false,\n    sliceStart: sliceStart,\n    sliceEnd: sliceEnd\n  };\n}\n\nLp.bootstrapSliceString = function(start, end, options) {\n  return this.slice(start, end).toString(options);\n};\n\nLp.sliceString = function(start, end, options) {\n  if (!end) {\n    if (!start) {\n      // The client seems to want a copy of this Lines object, but\n      // Lines objects are immutable, so it's perfectly adequate to\n      // return the same object.\n      return this;\n    }\n\n    // Slice to the end if no end position was provided.\n    end = this.lastPos();\n  }\n\n  options = normalizeOptions(options);\n\n  var infos = getSecret(this).infos;\n  var parts = [];\n  var tabWidth = options.tabWidth;\n\n  for (var line = start.line; line <= end.line; ++line) {\n    var info = infos[line - 1];\n\n    if (line === start.line) {\n      if (line === end.line) {\n        info = sliceInfo(info, start.column, end.column);\n      } else {\n        info = sliceInfo(info, start.column);\n      }\n    } else if (line === end.line) {\n      info = sliceInfo(info, 0, end.column);\n    }\n\n    var indent = Math.max(info.indent, 0);\n\n    var before = info.line.slice(0, info.sliceStart);\n    if (options.reuseWhitespace &&\n        isOnlyWhitespace(before) &&\n        countSpaces(before, options.tabWidth) === indent) {\n      // Reuse original spaces if the indentation is correct.\n      parts.push(info.line.slice(0, info.sliceEnd));\n      continue;\n    }\n\n    var tabs = 0;\n    var spaces = indent;\n\n    if (options.useTabs) {\n      tabs = Math.floor(indent / tabWidth);\n      spaces -= tabs * tabWidth;\n    }\n\n    var result = \"\";\n\n    if (tabs > 0) {\n      result += new Array(tabs + 1).join(\"\\t\");\n    }\n\n    if (spaces > 0) {\n      result += new Array(spaces + 1).join(\" \");\n    }\n\n    result += info.line.slice(info.sliceStart, info.sliceEnd);\n\n    parts.push(result);\n  }\n\n  return parts.join(options.lineTerminator);\n};\n\nLp.isEmpty = function() {\n  return this.length < 2 && this.getLineLength(1) < 1;\n};\n\nLp.join = function(elements) {\n  var separator = this;\n  var separatorSecret = getSecret(separator);\n  var infos = [];\n  var mappings = [];\n  var prevInfo;\n\n  function appendSecret(secret) {\n    if (secret === null)\n      return;\n\n    if (prevInfo) {\n      var info = secret.infos[0];\n      var indent = new Array(info.indent + 1).join(\" \");\n      var prevLine = infos.length;\n      var prevColumn = Math.max(prevInfo.indent, 0) +\n        prevInfo.sliceEnd - prevInfo.sliceStart;\n\n      prevInfo.line = prevInfo.line.slice(\n        0, prevInfo.sliceEnd) + indent + info.line.slice(\n          info.sliceStart, info.sliceEnd);\n\n      // If any part of a line is indentation-locked, the whole line\n      // will be indentation-locked.\n      prevInfo.locked = prevInfo.locked || info.locked;\n\n      prevInfo.sliceEnd = prevInfo.line.length;\n\n      if (secret.mappings.length > 0) {\n        secret.mappings.forEach(function(mapping) {\n          mappings.push(mapping.add(prevLine, prevColumn));\n        });\n      }\n\n    } else if (secret.mappings.length > 0) {\n      mappings.push.apply(mappings, secret.mappings);\n    }\n\n    secret.infos.forEach(function(info, i) {\n      if (!prevInfo || i > 0) {\n        prevInfo = copyLineInfo(info);\n        infos.push(prevInfo);\n      }\n    });\n  }\n\n  function appendWithSeparator(secret, i) {\n    if (i > 0)\n      appendSecret(separatorSecret);\n    appendSecret(secret);\n  }\n\n  elements.map(function(elem) {\n    var lines = fromString(elem);\n    if (lines.isEmpty())\n      return null;\n    return getSecret(lines);\n  }).forEach(separator.isEmpty()\n             ? appendSecret\n             : appendWithSeparator);\n\n  if (infos.length < 1)\n    return emptyLines;\n\n  var lines = new Lines(infos);\n\n  getSecret(lines).mappings = mappings;\n\n  return lines;\n};\n\nexports.concat = function(elements) {\n  return emptyLines.join(elements);\n};\n\nLp.concat = function(other) {\n  var args = arguments,\n  list = [this];\n  list.push.apply(list, args);\n  assert.strictEqual(list.length, args.length + 1);\n  return emptyLines.join(list);\n};\n\n// The emptyLines object needs to be created all the way down here so that\n// Lines.prototype will be fully populated.\nvar emptyLines = fromString(\"\");\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar n = types.namedTypes;\nvar Node = n.Node;\nvar isArray = types.builtInTypes.array;\nvar isNumber = types.builtInTypes.number;\n\nfunction FastPath(value) {\n  assert.ok(this instanceof FastPath);\n  this.stack = [value];\n}\n\nvar FPp = FastPath.prototype;\nmodule.exports = FastPath;\n\n// Static convenience function for coercing a value to a FastPath.\nFastPath.from = function(obj) {\n  if (obj instanceof FastPath) {\n    // Return a defensive copy of any existing FastPath instances.\n    return obj.copy();\n  }\n\n  if (obj instanceof types.NodePath) {\n    // For backwards compatibility, unroll NodePath instances into\n    // lightweight FastPath [..., name, value] stacks.\n    var copy = Object.create(FastPath.prototype);\n    var stack = [obj.value];\n    for (var pp; (pp = obj.parentPath); obj = pp)\n      stack.push(obj.name, pp.value);\n    copy.stack = stack.reverse();\n    return copy;\n  }\n\n  // Otherwise use obj as the value of the new FastPath instance.\n  return new FastPath(obj);\n};\n\nFPp.copy = function copy() {\n  var copy = Object.create(FastPath.prototype);\n  copy.stack = this.stack.slice(0);\n  return copy;\n};\n\n// The name of the current property is always the penultimate element of\n// this.stack, and always a String.\nFPp.getName = function getName() {\n  var s = this.stack;\n  var len = s.length;\n  if (len > 1) {\n    return s[len - 2];\n  }\n  // Since the name is always a string, null is a safe sentinel value to\n  // return if we do not know the name of the (root) value.\n  return null;\n};\n\n// The value of the current property is always the final element of\n// this.stack.\nFPp.getValue = function getValue() {\n  var s = this.stack;\n  return s[s.length - 1];\n};\n\nFPp.valueIsDuplicate = function () {\n  var s = this.stack;\n  var valueIndex = s.length - 1;\n  return s.lastIndexOf(s[valueIndex], valueIndex - 1) >= 0;\n};\n\nfunction getNodeHelper(path, count) {\n  var s = path.stack;\n\n  for (var i = s.length - 1; i >= 0; i -= 2) {\n    var value = s[i];\n    if (n.Node.check(value) && --count < 0) {\n      return value;\n    }\n  }\n\n  return null;\n}\n\nFPp.getNode = function getNode(count) {\n  return getNodeHelper(this, ~~count);\n};\n\nFPp.getParentNode = function getParentNode(count) {\n  return getNodeHelper(this, ~~count + 1);\n};\n\n// The length of the stack can be either even or odd, depending on whether\n// or not we have a name for the root value. The difference between the\n// index of the root value and the index of the final value is always\n// even, though, which allows us to return the root value in constant time\n// (i.e. without iterating backwards through the stack).\nFPp.getRootValue = function getRootValue() {\n  var s = this.stack;\n  if (s.length % 2 === 0) {\n    return s[1];\n  }\n  return s[0];\n};\n\n// Temporarily push properties named by string arguments given after the\n// callback function onto this.stack, then call the callback with a\n// reference to this (modified) FastPath object. Note that the stack will\n// be restored to its original state after the callback is finished, so it\n// is probably a mistake to retain a reference to the path.\nFPp.call = function call(callback/*, name1, name2, ... */) {\n  var s = this.stack;\n  var origLen = s.length;\n  var value = s[origLen - 1];\n  var argc = arguments.length;\n  for (var i = 1; i < argc; ++i) {\n    var name = arguments[i];\n    value = value[name];\n    s.push(name, value);\n  }\n  var result = callback(this);\n  s.length = origLen;\n  return result;\n};\n\n// Similar to FastPath.prototype.call, except that the value obtained by\n// accessing this.getValue()[name1][name2]... should be array-like. The\n// callback will be called with a reference to this path object for each\n// element of the array.\nFPp.each = function each(callback/*, name1, name2, ... */) {\n  var s = this.stack;\n  var origLen = s.length;\n  var value = s[origLen - 1];\n  var argc = arguments.length;\n\n  for (var i = 1; i < argc; ++i) {\n    var name = arguments[i];\n    value = value[name];\n    s.push(name, value);\n  }\n\n  for (var i = 0; i < value.length; ++i) {\n    if (i in value) {\n      s.push(i, value[i]);\n      // If the callback needs to know the value of i, call\n      // path.getName(), assuming path is the parameter name.\n      callback(this);\n      s.length -= 2;\n    }\n  }\n\n  s.length = origLen;\n};\n\n// Similar to FastPath.prototype.each, except that the results of the\n// callback function invocations are stored in an array and returned at\n// the end of the iteration.\nFPp.map = function map(callback/*, name1, name2, ... */) {\n  var s = this.stack;\n  var origLen = s.length;\n  var value = s[origLen - 1];\n  var argc = arguments.length;\n\n  for (var i = 1; i < argc; ++i) {\n    var name = arguments[i];\n    value = value[name];\n    s.push(name, value);\n  }\n\n  var result = new Array(value.length);\n\n  for (var i = 0; i < value.length; ++i) {\n    if (i in value) {\n      s.push(i, value[i]);\n      result[i] = callback(this, i);\n      s.length -= 2;\n    }\n  }\n\n  s.length = origLen;\n\n  return result;\n};\n\nfunction expressionStartsWithCurlyBrace(node) {\n  // TODO detect when node is already wrapped in parentheses to avoid (admittedly harmless) wrapping in extra parentheses.\n  if(node == null) return false;\n  switch(node.type) {\n  // expressions guaranteed to start with a {\n  case \"ObjectExpression\":\n  case \"ObjectPattern\":\n    return true;\n\n  // All expressions that comprise nested expressions\n  case \"BinaryExpression\":\n  case \"AssignmentExpression\":\n  case \"LogicalExpression\":\n    return expressionStartsWithCurlyBrace(node.left);\n\n  case \"MemberExpression\":\n  case \"BindExpression\":\n    return expressionStartsWithCurlyBrace(node.object);\n\n  case \"CallExpression\":\n    return expressionStartsWithCurlyBrace(node.callee);\n\n  case \"UpdateExpression\":\n  case \"UnaryExpression\":\n    return node.prefix === false && expressionStartsWithCurlyBrace(node.argument);\n\n  case \"TSNonNullExpression\":\n    return expressionStartsWithCurlyBrace(node.expression);\n\n  case \"ConditionalExpression\":\n    return expressionStartsWithCurlyBrace(node.test);\n\n  case \"SequenceExpression\":\n    return expressionStartsWithCurlyBrace(node.expressions[0]);\n\n  case \"TaggedTemplateExpression\":\n    return expressionStartsWithCurlyBrace(node.tag);\n\n  default:\n    false;\n  }\n}\n\n// Inspired by require(\"ast-types\").NodePath.prototype.needsParens, but\n// more efficient because we're iterating backwards through a stack.\nFPp.needsParens = function(assumeExpressionContext) {\n  var node = this.getNode();\n\n  // This needs to come before `if (!parent) { return false }` because\n  // an object destructuring assignment requires parens for\n  // correctness even when it's the topmost expression.\n  if (node.type === \"AssignmentExpression\" && node.left.type === 'ObjectPattern') {\n    return true;\n  }\n\n  var parent = this.getParentNode();\n  if (!parent) {\n    return false;\n  }\n\n  var name = this.getName();\n\n  // If the value of this path is some child of a Node and not a Node\n  // itself, then it doesn't need parentheses. Only Node objects (in fact,\n  // only Expression nodes) need parentheses.\n  if (this.getValue() !== node) {\n    return false;\n  }\n\n  // Only statements don't need parentheses.\n  if (n.Statement.check(node)) {\n    return false;\n  }\n\n  // Identifiers never need parentheses.\n  if (node.type === \"Identifier\") {\n    return false;\n  }\n\n  if (parent.type === \"ParenthesizedExpression\") {\n    return false;\n  }\n\n  if (parent.type === \"ArrowFunctionExpression\" && name === \"body\") {\n    return expressionStartsWithCurlyBrace(node);\n  }\n\n  switch (node.type) {\n  case \"UnaryExpression\":\n  case \"SpreadElement\":\n  case \"SpreadProperty\":\n    return parent.type === \"MemberExpression\"\n      && name === \"object\"\n      && parent.object === node;\n\n  case \"BinaryExpression\":\n  case \"LogicalExpression\":\n    switch (parent.type) {\n    case \"CallExpression\":\n      return name === \"callee\"\n        && parent.callee === node;\n\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n    case \"SpreadProperty\":\n      return true;\n\n    case \"MemberExpression\":\n      return name === \"object\"\n        && parent.object === node;\n\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      var po = parent.operator;\n      var pp = PRECEDENCE[po];\n      var no = node.operator;\n      var np = PRECEDENCE[no];\n\n      if (pp > np) {\n        return true;\n      }\n\n      if (pp === np && name === \"right\") {\n        assert.strictEqual(parent.right, node);\n        return true;\n      }\n\n    default:\n      return false;\n    }\n\n  case \"SequenceExpression\":\n    switch (parent.type) {\n    case \"ReturnStatement\":\n      return false;\n\n    case \"ForStatement\":\n      // Although parentheses wouldn't hurt around sequence expressions in\n      // the head of for loops, traditional style dictates that e.g. i++,\n      // j++ should not be wrapped with parentheses.\n      return false;\n\n    case \"ExpressionStatement\":\n      return name !== \"expression\";\n\n    default:\n      // Otherwise err on the side of overparenthesization, adding\n      // explicit exceptions above if this proves overzealous.\n      return true;\n    }\n\n  case \"YieldExpression\":\n    switch (parent.type) {\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n    case \"SpreadProperty\":\n    case \"CallExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"ConditionalExpression\":\n    case \"YieldExpression\":\n      return true;\n\n    default:\n      return false;\n    }\n\n  case \"IntersectionTypeAnnotation\":\n  case \"UnionTypeAnnotation\":\n    return parent.type === \"NullableTypeAnnotation\";\n\n  case \"Literal\":\n    return parent.type === \"MemberExpression\"\n      && isNumber.check(node.value)\n      && name === \"object\"\n      && parent.object === node;\n\n  // Babel 6 Literal split\n  case \"NumericLiteral\":\n    return parent.type === \"MemberExpression\"\n      && name === \"object\"\n      && parent.object === node;\n\n  case \"AssignmentExpression\":\n  case \"ConditionalExpression\":\n    switch (parent.type) {\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n    case \"SpreadProperty\":\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      return true;\n\n    case \"CallExpression\":\n      return name === \"callee\"\n        && parent.callee === node;\n\n    case \"ConditionalExpression\":\n      return name === \"test\"\n        && parent.test === node;\n\n    case \"MemberExpression\":\n      return name === \"object\"\n        && parent.object === node;\n\n    default:\n      return false;\n    }\n\n  case \"ArrowFunctionExpression\":\n    if(n.CallExpression.check(parent) && name === 'callee') {\n      return true;\n    }\n    if(n.MemberExpression.check(parent) && name === 'object') {\n      return true;\n    }\n\n    return isBinary(parent);\n\n  case \"ObjectExpression\":\n    if (parent.type === \"ArrowFunctionExpression\" &&\n        name === \"body\") {\n      return true;\n    }\n\n  default:\n    if (parent.type === \"NewExpression\" &&\n        name === \"callee\" &&\n        parent.callee === node) {\n      return containsCallExpression(node);\n    }\n  }\n\n  if (assumeExpressionContext !== true &&\n      !this.canBeFirstInStatement() &&\n      this.firstInStatement())\n    return true;\n\n  return false;\n};\n\nfunction isBinary(node) {\n  return n.BinaryExpression.check(node)\n    || n.LogicalExpression.check(node);\n}\n\nfunction isUnaryLike(node) {\n  return n.UnaryExpression.check(node)\n  // I considered making SpreadElement and SpreadProperty subtypes of\n  // UnaryExpression, but they're not really Expression nodes.\n    || (n.SpreadElement && n.SpreadElement.check(node))\n    || (n.SpreadProperty && n.SpreadProperty.check(node));\n}\n\nvar PRECEDENCE = {};\n[[\"||\"],\n [\"&&\"],\n [\"|\"],\n [\"^\"],\n [\"&\"],\n [\"==\", \"===\", \"!=\", \"!==\"],\n [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n [\">>\", \"<<\", \">>>\"],\n [\"+\", \"-\"],\n [\"*\", \"/\", \"%\", \"**\"]\n].forEach(function(tier, i) {\n  tier.forEach(function(op) {\n    PRECEDENCE[op] = i;\n  });\n});\n\nfunction containsCallExpression(node) {\n  if (n.CallExpression.check(node)) {\n    return true;\n  }\n\n  if (isArray.check(node)) {\n    return node.some(containsCallExpression);\n  }\n\n  if (n.Node.check(node)) {\n    return types.someField(node, function(name, child) {\n      return containsCallExpression(child);\n    });\n  }\n\n  return false;\n}\n\nFPp.canBeFirstInStatement = function() {\n  var node = this.getNode();\n\n  if (n.FunctionExpression.check(node)) {\n    return false;\n  }\n\n  if (n.ObjectExpression.check(node)) {\n    return false;\n  }\n\n  if (n.ClassExpression.check(node)) {\n    return false;\n  }\n\n  return true;\n};\n\nFPp.firstInStatement = function() {\n  var s = this.stack;\n  var parentName, parent;\n  var childName, child;\n\n  for (var i = s.length - 1; i >= 0; i -= 2) {\n    if (n.Node.check(s[i])) {\n      childName = parentName;\n      child = parent;\n      parentName = s[i - 1];\n      parent = s[i];\n    }\n\n    if (!parent || !child) {\n      continue;\n    }\n\n    if (n.BlockStatement.check(parent) &&\n        parentName === \"body\" &&\n        childName === 0) {\n      assert.strictEqual(parent.body[0], child);\n      return true;\n    }\n\n    if (n.ExpressionStatement.check(parent) &&\n        childName === \"expression\") {\n      assert.strictEqual(parent.expression, child);\n      return true;\n    }\n\n    if (n.SequenceExpression.check(parent) &&\n        parentName === \"expressions\" &&\n        childName === 0) {\n      assert.strictEqual(parent.expressions[0], child);\n      continue;\n    }\n\n    if (n.CallExpression.check(parent) &&\n        childName === \"callee\") {\n      assert.strictEqual(parent.callee, child);\n      continue;\n    }\n\n    if (n.MemberExpression.check(parent) &&\n        childName === \"object\") {\n      assert.strictEqual(parent.object, child);\n      continue;\n    }\n\n    if (n.ConditionalExpression.check(parent) &&\n        childName === \"test\") {\n      assert.strictEqual(parent.test, child);\n      continue;\n    }\n\n    if (isBinary(parent) &&\n        childName === \"left\") {\n      assert.strictEqual(parent.left, child);\n      continue;\n    }\n\n    if (n.UnaryExpression.check(parent) &&\n        !parent.prefix &&\n        childName === \"argument\") {\n      assert.strictEqual(parent.argument, child);\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n};\n","var assert = require(\"assert\");\nvar linesModule = require(\"./lines\");\nvar types = require(\"./types\");\nvar getFieldValue = types.getFieldValue;\nvar Node = types.namedTypes.Node;\nvar Printable = types.namedTypes.Printable;\nvar Expression = types.namedTypes.Expression;\nvar ReturnStatement = types.namedTypes.ReturnStatement;\nvar SourceLocation = types.namedTypes.SourceLocation;\nvar util = require(\"./util\");\nvar comparePos = util.comparePos;\nvar FastPath = require(\"./fast-path\");\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar isString = types.builtInTypes.string;\nvar riskyAdjoiningCharExp = /[0-9a-z_$]/i;\n\nfunction Patcher(lines) {\n  assert.ok(this instanceof Patcher);\n  assert.ok(lines instanceof linesModule.Lines);\n\n  var self = this,\n  replacements = [];\n\n  self.replace = function(loc, lines) {\n    if (isString.check(lines))\n      lines = linesModule.fromString(lines);\n\n    replacements.push({\n      lines: lines,\n      start: loc.start,\n      end: loc.end\n    });\n  };\n\n  self.get = function(loc) {\n    // If no location is provided, return the complete Lines object.\n    loc = loc || {\n      start: { line: 1, column: 0 },\n      end: { line: lines.length,\n             column: lines.getLineLength(lines.length) }\n    };\n\n    var sliceFrom = loc.start,\n    toConcat = [];\n\n    function pushSlice(from, to) {\n      assert.ok(comparePos(from, to) <= 0);\n      toConcat.push(lines.slice(from, to));\n    }\n\n    replacements.sort(function(a, b) {\n      return comparePos(a.start, b.start);\n    }).forEach(function(rep) {\n      if (comparePos(sliceFrom, rep.start) > 0) {\n        // Ignore nested replacement ranges.\n      } else {\n        pushSlice(sliceFrom, rep.start);\n        toConcat.push(rep.lines);\n        sliceFrom = rep.end;\n      }\n    });\n\n    pushSlice(sliceFrom, loc.end);\n\n    return linesModule.concat(toConcat);\n  };\n}\nexports.Patcher = Patcher;\n\nvar Pp = Patcher.prototype;\n\nPp.tryToReprintComments = function(newNode, oldNode, print) {\n  var patcher = this;\n\n  if (!newNode.comments &&\n      !oldNode.comments) {\n    // We were (vacuously) able to reprint all the comments!\n    return true;\n  }\n\n  var newPath = FastPath.from(newNode);\n  var oldPath = FastPath.from(oldNode);\n\n  newPath.stack.push(\"comments\", getSurroundingComments(newNode));\n  oldPath.stack.push(\"comments\", getSurroundingComments(oldNode));\n\n  var reprints = [];\n  var ableToReprintComments =\n    findArrayReprints(newPath, oldPath, reprints);\n\n  // No need to pop anything from newPath.stack or oldPath.stack, since\n  // newPath and oldPath are fresh local variables.\n\n  if (ableToReprintComments && reprints.length > 0) {\n    reprints.forEach(function(reprint) {\n      var oldComment = reprint.oldPath.getValue();\n      assert.ok(oldComment.leading || oldComment.trailing);\n      patcher.replace(\n        oldComment.loc,\n        // Comments can't have .comments, so it doesn't matter whether we\n        // print with comments or without.\n        print(reprint.newPath).indentTail(oldComment.loc.indent)\n      );\n    });\n  }\n\n  return ableToReprintComments;\n};\n\n// Get all comments that are either leading or trailing, ignoring any\n// comments that occur inside node.loc. Returns an empty array for nodes\n// with no leading or trailing comments.\nfunction getSurroundingComments(node) {\n  var result = [];\n  if (node.comments &&\n      node.comments.length > 0) {\n    node.comments.forEach(function(comment) {\n      if (comment.leading || comment.trailing) {\n        result.push(comment);\n      }\n    });\n  }\n  return result;\n}\n\nPp.deleteComments = function(node) {\n  if (!node.comments) {\n    return;\n  }\n\n  var patcher = this;\n\n  node.comments.forEach(function(comment) {\n    if (comment.leading) {\n      // Delete leading comments along with any trailing whitespace they\n      // might have.\n      patcher.replace({\n        start: comment.loc.start,\n        end: node.loc.lines.skipSpaces(\n          comment.loc.end, false, false)\n      }, \"\");\n\n    } else if (comment.trailing) {\n      // Delete trailing comments along with any leading whitespace they\n      // might have.\n      patcher.replace({\n        start: node.loc.lines.skipSpaces(\n          comment.loc.start, true, false),\n        end: comment.loc.end\n      }, \"\");\n    }\n  });\n};\n\nexports.getReprinter = function(path) {\n  assert.ok(path instanceof FastPath);\n\n  // Make sure that this path refers specifically to a Node, rather than\n  // some non-Node subproperty of a Node.\n  var node = path.getValue();\n  if (!Printable.check(node))\n    return;\n\n  var orig = node.original;\n  var origLoc = orig && orig.loc;\n  var lines = origLoc && origLoc.lines;\n  var reprints = [];\n\n  if (!lines || !findReprints(path, reprints))\n    return;\n\n  return function(print) {\n    var patcher = new Patcher(lines);\n\n    reprints.forEach(function(reprint) {\n      var newNode = reprint.newPath.getValue();\n      var oldNode = reprint.oldPath.getValue();\n\n      SourceLocation.assert(oldNode.loc, true);\n\n      var needToPrintNewPathWithComments =\n        !patcher.tryToReprintComments(newNode, oldNode, print)\n\n      if (needToPrintNewPathWithComments) {\n        // Since we were not able to preserve all leading/trailing\n        // comments, we delete oldNode's comments, print newPath with\n        // comments, and then patch the resulting lines where oldNode used\n        // to be.\n        patcher.deleteComments(oldNode);\n      }\n\n      var newLines = print(\n        reprint.newPath,\n        needToPrintNewPathWithComments\n      ).indentTail(oldNode.loc.indent);\n\n      var nls = needsLeadingSpace(lines, oldNode.loc, newLines);\n      var nts = needsTrailingSpace(lines, oldNode.loc, newLines);\n\n      // If we try to replace the argument of a ReturnStatement like\n      // return\"asdf\" with e.g. a literal null expression, we run the risk\n      // of ending up with returnnull, so we need to add an extra leading\n      // space in situations where that might happen. Likewise for\n      // \"asdf\"in obj. See #170.\n      if (nls || nts) {\n        var newParts = [];\n        nls && newParts.push(\" \");\n        newParts.push(newLines);\n        nts && newParts.push(\" \");\n        newLines = linesModule.concat(newParts);\n      }\n\n      patcher.replace(oldNode.loc, newLines);\n    });\n\n    // Recall that origLoc is the .loc of an ancestor node that is\n    // guaranteed to contain all the reprinted nodes and comments.\n    return patcher.get(origLoc).indentTail(-orig.loc.indent);\n  };\n};\n\n// If the last character before oldLoc and the first character of newLines\n// are both identifier characters, they must be separated by a space,\n// otherwise they will most likely get fused together into a single token.\nfunction needsLeadingSpace(oldLines, oldLoc, newLines) {\n  var posBeforeOldLoc = util.copyPos(oldLoc.start);\n\n  // The character just before the location occupied by oldNode.\n  var charBeforeOldLoc =\n    oldLines.prevPos(posBeforeOldLoc) &&\n    oldLines.charAt(posBeforeOldLoc);\n\n  // First character of the reprinted node.\n  var newFirstChar = newLines.charAt(newLines.firstPos());\n\n  return charBeforeOldLoc &&\n    riskyAdjoiningCharExp.test(charBeforeOldLoc) &&\n    newFirstChar &&\n    riskyAdjoiningCharExp.test(newFirstChar);\n}\n\n// If the last character of newLines and the first character after oldLoc\n// are both identifier characters, they must be separated by a space,\n// otherwise they will most likely get fused together into a single token.\nfunction needsTrailingSpace(oldLines, oldLoc, newLines) {\n  // The character just after the location occupied by oldNode.\n  var charAfterOldLoc = oldLines.charAt(oldLoc.end);\n\n  var newLastPos = newLines.lastPos();\n\n  // Last character of the reprinted node.\n  var newLastChar = newLines.prevPos(newLastPos) &&\n    newLines.charAt(newLastPos);\n\n  return newLastChar &&\n    riskyAdjoiningCharExp.test(newLastChar) &&\n    charAfterOldLoc &&\n    riskyAdjoiningCharExp.test(charAfterOldLoc);\n}\n\nfunction findReprints(newPath, reprints) {\n  var newNode = newPath.getValue();\n  Printable.assert(newNode);\n\n  var oldNode = newNode.original;\n  Printable.assert(oldNode);\n\n  assert.deepEqual(reprints, []);\n\n  if (newNode.type !== oldNode.type) {\n    return false;\n  }\n\n  var oldPath = new FastPath(oldNode);\n  var canReprint = findChildReprints(newPath, oldPath, reprints);\n\n  if (!canReprint) {\n    // Make absolutely sure the calling code does not attempt to reprint\n    // any nodes.\n    reprints.length = 0;\n  }\n\n  return canReprint;\n}\n\nfunction findAnyReprints(newPath, oldPath, reprints) {\n  var newNode = newPath.getValue();\n  var oldNode = oldPath.getValue();\n\n  if (newNode === oldNode)\n    return true;\n\n  if (isArray.check(newNode))\n    return findArrayReprints(newPath, oldPath, reprints);\n\n  if (isObject.check(newNode))\n    return findObjectReprints(newPath, oldPath, reprints);\n\n  return false;\n}\n\nfunction findArrayReprints(newPath, oldPath, reprints) {\n  var newNode = newPath.getValue();\n  var oldNode = oldPath.getValue();\n\n  if (newNode === oldNode ||\n      newPath.valueIsDuplicate() ||\n      oldPath.valueIsDuplicate()) {\n    return true;\n  }\n\n  isArray.assert(newNode);\n  var len = newNode.length;\n\n  if (!(isArray.check(oldNode) &&\n        oldNode.length === len))\n    return false;\n\n  for (var i = 0; i < len; ++i) {\n    newPath.stack.push(i, newNode[i]);\n    oldPath.stack.push(i, oldNode[i]);\n    var canReprint = findAnyReprints(newPath, oldPath, reprints);\n    newPath.stack.length -= 2;\n    oldPath.stack.length -= 2;\n    if (!canReprint) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction findObjectReprints(newPath, oldPath, reprints) {\n  var newNode = newPath.getValue();\n  isObject.assert(newNode);\n\n  if (newNode.original === null) {\n    // If newNode.original node was set to null, reprint the node.\n    return false;\n  }\n\n  var oldNode = oldPath.getValue();\n  if (!isObject.check(oldNode))\n    return false;\n\n  if (newNode === oldNode ||\n      newPath.valueIsDuplicate() ||\n      oldPath.valueIsDuplicate()) {\n    return true;\n  }\n\n  if (Printable.check(newNode)) {\n    if (!Printable.check(oldNode)) {\n      return false;\n    }\n\n    // Here we need to decide whether the reprinted code for newNode is\n    // appropriate for patching into the location of oldNode.\n\n    if (newNode.type === oldNode.type) {\n      var childReprints = [];\n\n      if (findChildReprints(newPath, oldPath, childReprints)) {\n        reprints.push.apply(reprints, childReprints);\n      } else if (oldNode.loc) {\n        // If we have no .loc information for oldNode, then we won't be\n        // able to reprint it.\n        reprints.push({\n          oldPath: oldPath.copy(),\n          newPath: newPath.copy()\n        });\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    if (Expression.check(newNode) &&\n        Expression.check(oldNode) &&\n        // If we have no .loc information for oldNode, then we won't be\n        // able to reprint it.\n        oldNode.loc) {\n\n      // If both nodes are subtypes of Expression, then we should be able\n      // to fill the location occupied by the old node with code printed\n      // for the new node with no ill consequences.\n      reprints.push({\n        oldPath: oldPath.copy(),\n        newPath: newPath.copy()\n      });\n\n      return true;\n    }\n\n    // The nodes have different types, and at least one of the types is\n    // not a subtype of the Expression type, so we cannot safely assume\n    // the nodes are syntactically interchangeable.\n    return false;\n  }\n\n  return findChildReprints(newPath, oldPath, reprints);\n}\n\n// This object is reused in hasOpeningParen and hasClosingParen to avoid\n// having to allocate a temporary object.\nvar reusablePos = { line: 1, column: 0 };\nvar nonSpaceExp = /\\S/;\n\nfunction hasOpeningParen(oldPath) {\n  var oldNode = oldPath.getValue();\n  var loc = oldNode.loc;\n  var lines = loc && loc.lines;\n\n  if (lines) {\n    var pos = reusablePos;\n    pos.line = loc.start.line;\n    pos.column = loc.start.column;\n\n    while (lines.prevPos(pos)) {\n      var ch = lines.charAt(pos);\n\n      if (ch === \"(\") {\n        // If we found an opening parenthesis but it occurred before the\n        // start of the original subtree for this reprinting, then we must\n        // not return true for hasOpeningParen(oldPath).\n        return comparePos(oldPath.getRootValue().loc.start, pos) <= 0;\n      }\n\n      if (nonSpaceExp.test(ch)) {\n        return false;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction hasClosingParen(oldPath) {\n  var oldNode = oldPath.getValue();\n  var loc = oldNode.loc;\n  var lines = loc && loc.lines;\n\n  if (lines) {\n    var pos = reusablePos;\n    pos.line = loc.end.line;\n    pos.column = loc.end.column;\n\n    do {\n      var ch = lines.charAt(pos);\n\n      if (ch === \")\") {\n        // If we found a closing parenthesis but it occurred after the end\n        // of the original subtree for this reprinting, then we must not\n        // return true for hasClosingParen(oldPath).\n        return comparePos(pos, oldPath.getRootValue().loc.end) <= 0;\n      }\n\n      if (nonSpaceExp.test(ch)) {\n        return false;\n      }\n\n    } while (lines.nextPos(pos));\n  }\n\n  return false;\n}\n\nfunction hasParens(oldPath) {\n  // This logic can technically be fooled if the node has parentheses but\n  // there are comments intervening between the parentheses and the\n  // node. In such cases the node will be harmlessly wrapped in an\n  // additional layer of parentheses.\n  return hasOpeningParen(oldPath) && hasClosingParen(oldPath);\n}\n\nfunction findChildReprints(newPath, oldPath, reprints) {\n  var newNode = newPath.getValue();\n  var oldNode = oldPath.getValue();\n\n  isObject.assert(newNode);\n  isObject.assert(oldNode);\n\n  if (newNode.original === null) {\n    // If newNode.original node was set to null, reprint the node.\n    return false;\n  }\n\n  // If this type of node cannot come lexically first in its enclosing\n  // statement (e.g. a function expression or object literal), and it\n  // seems to be doing so, then the only way we can ignore this problem\n  // and save ourselves from falling back to the pretty printer is if an\n  // opening parenthesis happens to precede the node.  For example,\n  // (function(){ ... }()); does not need to be reprinted, even though the\n  // FunctionExpression comes lexically first in the enclosing\n  // ExpressionStatement and fails the hasParens test, because the parent\n  // CallExpression passes the hasParens test. If we relied on the\n  // path.needsParens() && !hasParens(oldNode) check below, the absence of\n  // a closing parenthesis after the FunctionExpression would trigger\n  // pretty-printing unnecessarily.\n  if (Node.check(newNode) &&\n      !newPath.canBeFirstInStatement() &&\n      newPath.firstInStatement() &&\n      !hasOpeningParen(oldPath)) {\n    return false;\n  }\n\n  // If this node needs parentheses and will not be wrapped with\n  // parentheses when reprinted, then return false to skip reprinting and\n  // let it be printed generically.\n  if (newPath.needsParens(true) && !hasParens(oldPath)) {\n    return false;\n  }\n\n  var keys = util.getUnionOfKeys(oldNode, newNode);\n\n  if (oldNode.type === \"File\" ||\n      newNode.type === \"File\") {\n    // Don't bother traversing file.tokens, an often very large array\n    // returned by Babylon, and useless for our purposes.\n    delete keys.tokens;\n  }\n\n  // Don't bother traversing .loc objects looking for reprintable nodes.\n  delete keys.loc;\n\n  var originalReprintCount = reprints.length;\n\n  for (var k in keys) {\n    if (k.charAt(0) === \"_\") {\n      // Ignore \"private\" AST properties added by e.g. Babel plugins and\n      // parsers like Babylon.\n      continue;\n    }\n\n    newPath.stack.push(k, types.getFieldValue(newNode, k));\n    oldPath.stack.push(k, types.getFieldValue(oldNode, k));\n    var canReprint = findAnyReprints(newPath, oldPath, reprints);\n    newPath.stack.length -= 2;\n    oldPath.stack.length -= 2;\n\n    if (!canReprint) {\n      return false;\n    }\n  }\n\n  // Return statements might end up running into ASI issues due to\n  // comments inserted deep within the tree, so reprint them if anything\n  // changed within them.\n  if (ReturnStatement.check(newPath.getNode()) &&\n      reprints.length > originalReprintCount) {\n    return false;\n  }\n\n  return true;\n}\n","var assert = require(\"assert\");\nvar types = require(\"./types\");\nvar n = types.namedTypes;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar linesModule = require(\"./lines\");\nvar fromString = linesModule.fromString;\nvar Lines = linesModule.Lines;\nvar concat = linesModule.concat;\nvar util = require(\"./util\");\nvar comparePos = util.comparePos;\nvar childNodesCacheKey = require(\"private\").makeUniqueKey();\n\n// TODO Move a non-caching implementation of this function into ast-types,\n// and implement a caching wrapper function here.\nfunction getSortedChildNodes(node, lines, resultArray) {\n    if (!node) {\n        return;\n    }\n\n    // The .loc checks below are sensitive to some of the problems that\n    // are fixed by this utility function. Specifically, if it decides to\n    // set node.loc to null, indicating that the node's .loc information\n    // is unreliable, then we don't want to add node to the resultArray.\n    util.fixFaultyLocations(node, lines);\n\n    if (resultArray) {\n        if (n.Node.check(node) &&\n            n.SourceLocation.check(node.loc)) {\n            // This reverse insertion sort almost always takes constant\n            // time because we almost always (maybe always?) append the\n            // nodes in order anyway.\n            for (var i = resultArray.length - 1; i >= 0; --i) {\n                if (comparePos(resultArray[i].loc.end,\n                               node.loc.start) <= 0) {\n                    break;\n                }\n            }\n            resultArray.splice(i + 1, 0, node);\n            return;\n        }\n    } else if (node[childNodesCacheKey]) {\n        return node[childNodesCacheKey];\n    }\n\n    var names;\n    if (isArray.check(node)) {\n        names = Object.keys(node);\n    } else if (isObject.check(node)) {\n        names = types.getFieldNames(node);\n    } else {\n        return;\n    }\n\n    if (!resultArray) {\n        Object.defineProperty(node, childNodesCacheKey, {\n            value: resultArray = [],\n            enumerable: false\n        });\n    }\n\n    for (var i = 0, nameCount = names.length; i < nameCount; ++i) {\n        getSortedChildNodes(node[names[i]], lines, resultArray);\n    }\n\n    return resultArray;\n}\n\n// As efficiently as possible, decorate the comment object with\n// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n// least one of which is guaranteed to be defined.\nfunction decorateComment(node, comment, lines) {\n    var childNodes = getSortedChildNodes(node, lines);\n\n    // Time to dust off the old binary search robes and wizard hat.\n    var left = 0, right = childNodes.length;\n    while (left < right) {\n        var middle = (left + right) >> 1;\n        var child = childNodes[middle];\n\n        if (comparePos(child.loc.start, comment.loc.start) <= 0 &&\n            comparePos(comment.loc.end, child.loc.end) <= 0) {\n            // The comment is completely contained by this child node.\n            decorateComment(comment.enclosingNode = child, comment, lines);\n            return; // Abandon the binary search at this level.\n        }\n\n        if (comparePos(child.loc.end, comment.loc.start) <= 0) {\n            // This child node falls completely before the comment.\n            // Because we will never consider this node or any nodes\n            // before it again, this node must be the closest preceding\n            // node we have encountered so far.\n            var precedingNode = child;\n            left = middle + 1;\n            continue;\n        }\n\n        if (comparePos(comment.loc.end, child.loc.start) <= 0) {\n            // This child node falls completely after the comment.\n            // Because we will never consider this node or any nodes after\n            // it again, this node must be the closest following node we\n            // have encountered so far.\n            var followingNode = child;\n            right = middle;\n            continue;\n        }\n\n        throw new Error(\"Comment location overlaps with node location\");\n    }\n\n    if (precedingNode) {\n        comment.precedingNode = precedingNode;\n    }\n\n    if (followingNode) {\n        comment.followingNode = followingNode;\n    }\n}\n\nexports.attach = function(comments, ast, lines) {\n    if (!isArray.check(comments)) {\n        return;\n    }\n\n    var tiesToBreak = [];\n\n    comments.forEach(function(comment) {\n        comment.loc.lines = lines;\n        decorateComment(ast, comment, lines);\n\n        var pn = comment.precedingNode;\n        var en = comment.enclosingNode;\n        var fn = comment.followingNode;\n\n        if (pn && fn) {\n            var tieCount = tiesToBreak.length;\n            if (tieCount > 0) {\n                var lastTie = tiesToBreak[tieCount - 1];\n\n                assert.strictEqual(\n                    lastTie.precedingNode === comment.precedingNode,\n                    lastTie.followingNode === comment.followingNode\n                );\n\n                if (lastTie.followingNode !== comment.followingNode) {\n                    breakTies(tiesToBreak, lines);\n                }\n            }\n\n            tiesToBreak.push(comment);\n\n        } else if (pn) {\n            // No contest: we have a trailing comment.\n            breakTies(tiesToBreak, lines);\n            addTrailingComment(pn, comment);\n\n        } else if (fn) {\n            // No contest: we have a leading comment.\n            breakTies(tiesToBreak, lines);\n            addLeadingComment(fn, comment);\n\n        } else if (en) {\n            // The enclosing node has no child nodes at all, so what we\n            // have here is a dangling comment, e.g. [/* crickets */].\n            breakTies(tiesToBreak, lines);\n            addDanglingComment(en, comment);\n\n        } else {\n            throw new Error(\"AST contains no nodes at all?\");\n        }\n    });\n\n    breakTies(tiesToBreak, lines);\n\n    comments.forEach(function(comment) {\n        // These node references were useful for breaking ties, but we\n        // don't need them anymore, and they create cycles in the AST that\n        // may lead to infinite recursion if we don't delete them here.\n        delete comment.precedingNode;\n        delete comment.enclosingNode;\n        delete comment.followingNode;\n    });\n};\n\nfunction breakTies(tiesToBreak, lines) {\n    var tieCount = tiesToBreak.length;\n    if (tieCount === 0) {\n        return;\n    }\n\n    var pn = tiesToBreak[0].precedingNode;\n    var fn = tiesToBreak[0].followingNode;\n    var gapEndPos = fn.loc.start;\n\n    // Iterate backwards through tiesToBreak, examining the gaps\n    // between the tied comments. In order to qualify as leading, a\n    // comment must be separated from fn by an unbroken series of\n    // whitespace-only gaps (or other comments).\n    for (var indexOfFirstLeadingComment = tieCount;\n         indexOfFirstLeadingComment > 0;\n         --indexOfFirstLeadingComment) {\n        var comment = tiesToBreak[indexOfFirstLeadingComment - 1];\n        assert.strictEqual(comment.precedingNode, pn);\n        assert.strictEqual(comment.followingNode, fn);\n\n        var gap = lines.sliceString(comment.loc.end, gapEndPos);\n        if (/\\S/.test(gap)) {\n            // The gap string contained something other than whitespace.\n            break;\n        }\n\n        gapEndPos = comment.loc.start;\n    }\n\n    while (indexOfFirstLeadingComment <= tieCount &&\n           (comment = tiesToBreak[indexOfFirstLeadingComment]) &&\n           // If the comment is a //-style comment and indented more\n           // deeply than the node itself, reconsider it as trailing.\n           (comment.type === \"Line\" || comment.type === \"CommentLine\") &&\n           comment.loc.start.column > fn.loc.start.column) {\n        ++indexOfFirstLeadingComment;\n    }\n\n    tiesToBreak.forEach(function(comment, i) {\n        if (i < indexOfFirstLeadingComment) {\n            addTrailingComment(pn, comment);\n        } else {\n            addLeadingComment(fn, comment);\n        }\n    });\n\n    tiesToBreak.length = 0;\n}\n\nfunction addCommentHelper(node, comment) {\n    var comments = node.comments || (node.comments = []);\n    comments.push(comment);\n}\n\nfunction addLeadingComment(node, comment) {\n    comment.leading = true;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n}\n\nfunction addDanglingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n}\n\nfunction addTrailingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = true;\n    addCommentHelper(node, comment);\n}\n\nfunction printLeadingComment(commentPath, print) {\n    var comment = commentPath.getValue();\n    n.Comment.assert(comment);\n\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [print(commentPath)];\n\n    if (comment.trailing) {\n        // When we print trailing comments as leading comments, we don't\n        // want to bring any trailing spaces along.\n        parts.push(\"\\n\");\n\n    } else if (lines instanceof Lines) {\n        var trailingSpace = lines.slice(\n            loc.end,\n            lines.skipSpaces(loc.end)\n        );\n\n        if (trailingSpace.length === 1) {\n            // If the trailing space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(trailingSpace);\n        } else {\n            // If the trailing space contains newlines, then replace it\n            // with just that many newlines, with all other spaces removed.\n            parts.push(new Array(trailingSpace.length).join(\"\\n\"));\n        }\n\n    } else {\n        parts.push(\"\\n\");\n    }\n\n    return concat(parts);\n}\n\nfunction printTrailingComment(commentPath, print) {\n    var comment = commentPath.getValue(commentPath);\n    n.Comment.assert(comment);\n\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [];\n\n    if (lines instanceof Lines) {\n        var fromPos = lines.skipSpaces(loc.start, true) || lines.firstPos();\n        var leadingSpace = lines.slice(fromPos, loc.start);\n\n        if (leadingSpace.length === 1) {\n            // If the leading space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(leadingSpace);\n        } else {\n            // If the leading space contains newlines, then replace it\n            // with just that many newlines, sans all other spaces.\n            parts.push(new Array(leadingSpace.length).join(\"\\n\"));\n        }\n    }\n\n    parts.push(print(commentPath));\n\n    return concat(parts);\n}\n\nexports.printComments = function(path, print) {\n    var value = path.getValue();\n    var innerLines = print(path);\n    var comments = n.Node.check(value) &&\n        types.getFieldValue(value, \"comments\");\n\n    if (!comments || comments.length === 0) {\n        return innerLines;\n    }\n\n    var leadingParts = [];\n    var trailingParts = [innerLines];\n\n    path.each(function(commentPath) {\n        var comment = commentPath.getValue();\n        var leading = types.getFieldValue(comment, \"leading\");\n        var trailing = types.getFieldValue(comment, \"trailing\");\n\n        if (leading || (trailing && !(n.Statement.check(value) ||\n                                      comment.type === \"Block\" ||\n                                      comment.type === \"CommentBlock\"))) {\n            leadingParts.push(printLeadingComment(commentPath, print));\n        } else if (trailing) {\n            trailingParts.push(printTrailingComment(commentPath, print));\n        }\n    }, \"comments\");\n\n    leadingParts.push.apply(leadingParts, trailingParts);\n    return concat(leadingParts);\n};\n","\"use strict\";\n\nvar assert = require(\"assert\");\nvar types = require(\"./types\");\nvar n = types.namedTypes;\nvar b = types.builders;\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar isFunction = types.builtInTypes.function;\nvar Patcher = require(\"./patcher\").Patcher;\nvar normalizeOptions = require(\"./options\").normalize;\nvar fromString = require(\"./lines\").fromString;\nvar attachComments = require(\"./comments\").attach;\nvar util = require(\"./util\");\n\nexports.parse = function parse(source, options) {\n  options = normalizeOptions(options);\n\n  const lines = fromString(source, options);\n\n  const sourceWithoutTabs = lines.toString({\n    tabWidth: options.tabWidth,\n    reuseWhitespace: false,\n    useTabs: false\n  });\n\n  let comments = [];\n  const ast = options.parser.parse(sourceWithoutTabs, {\n    jsx: true,\n    loc: true,\n    locations: true,\n    range: options.range,\n    comment: true,\n    onComment: comments,\n    tolerant: util.getOption(options, \"tolerant\", true),\n    ecmaVersion: 6,\n    sourceType: util.getOption(options, \"sourceType\", \"module\")\n  });\n\n  if (Array.isArray(ast.comments)) {\n    comments = ast.comments;\n    delete ast.comments;\n  }\n\n  if (ast.loc) {\n    // If the source was empty, some parsers give loc.{start,end}.line\n    // values of 0, instead of the minimum of 1.\n    util.fixFaultyLocations(ast, lines);\n  } else {\n    ast.loc = {\n      start: lines.firstPos(),\n      end: lines.lastPos()\n    };\n  }\n\n  ast.loc.lines = lines;\n  ast.loc.indent = 0;\n\n  let file;\n  let program;\n  if (ast.type === \"Program\") {\n    program = ast;\n    // In order to ensure we reprint leading and trailing program\n    // comments, wrap the original Program node with a File node. Only\n    // ESTree parsers (Acorn and Esprima) return a Program as the root AST\n    // node. Most other (Babylon-like) parsers return a File.\n    file = b.file(ast, options.sourceFileName || null);\n    file.loc = {\n      start: lines.firstPos(),\n      end: lines.lastPos(),\n      lines: lines,\n      indent: 0\n    };\n  } else if (ast.type === \"File\") {\n    file = ast;\n    program = file.program;\n  }\n\n  // Expand the Program's .loc to include all comments (not just those\n  // attached to the Program node, as its children may have comments as\n  // well), since sometimes program.loc.{start,end} will coincide with the\n  // .loc.{start,end} of the first and last *statements*, mistakenly\n  // excluding comments that fall outside that region.\n  var trueProgramLoc = util.getTrueLoc({\n    type: program.type,\n    loc: program.loc,\n    body: [],\n    comments\n  }, lines);\n  program.loc.start = trueProgramLoc.start;\n  program.loc.end = trueProgramLoc.end;\n\n  // Passing file.program here instead of just file means that initial\n  // comments will be attached to program.body[0] instead of program.\n  attachComments(\n    comments,\n    program.body.length ? file.program : file,\n    lines\n  );\n\n  // Return a copy of the original AST so that any changes made may be\n  // compared to the original.\n  return new TreeCopier(lines).copy(file);\n};\n\nfunction TreeCopier(lines) {\n  assert.ok(this instanceof TreeCopier);\n  this.lines = lines;\n  this.indent = 0;\n  this.seen = new Map;\n}\n\nvar TCp = TreeCopier.prototype;\n\nTCp.copy = function(node) {\n  if (this.seen.has(node)) {\n    return this.seen.get(node);\n  }\n\n  if (isArray.check(node)) {\n    var copy = new Array(node.length);\n    this.seen.set(node, copy);\n    node.forEach(function (item, i) {\n      copy[i] = this.copy(item);\n    }, this);\n    return copy;\n  }\n\n  if (!isObject.check(node)) {\n    return node;\n  }\n\n  util.fixFaultyLocations(node, this.lines);\n\n  var copy = Object.create(Object.getPrototypeOf(node), {\n    original: { // Provide a link from the copy to the original.\n      value: node,\n      configurable: false,\n      enumerable: false,\n      writable: true\n    }\n  });\n\n  this.seen.set(node, copy);\n\n  var loc = node.loc;\n  var oldIndent = this.indent;\n  var newIndent = oldIndent;\n\n  if (loc) {\n    // When node is a comment, we set node.loc.indent to\n    // node.loc.start.column so that, when/if we print the comment by\n    // itself, we can strip that much whitespace from the left margin of\n    // the comment. This only really matters for multiline Block comments,\n    // but it doesn't hurt for Line comments.\n    if (node.type === \"Block\" || node.type === \"Line\" ||\n        node.type === \"CommentBlock\" || node.type === \"CommentLine\" ||\n        this.lines.isPrecededOnlyByWhitespace(loc.start)) {\n      newIndent = this.indent = loc.start.column;\n    }\n\n    loc.lines = this.lines;\n    loc.indent = newIndent;\n  }\n\n  var keys = Object.keys(node);\n  var keyCount = keys.length;\n  for (var i = 0; i < keyCount; ++i) {\n    var key = keys[i];\n    if (key === \"loc\") {\n      copy[key] = node[key];\n    } else if (key === \"tokens\" &&\n               node.type === \"File\") {\n      // Preserve file.tokens (uncopied) in case client code cares about\n      // it, even though Recast ignores it when reprinting.\n      copy[key] = node[key];\n    } else {\n      copy[key] = this.copy(node[key]);\n    }\n  }\n\n  this.indent = oldIndent;\n\n  return copy;\n};\n","\"use strict\";\n\nvar assert = require(\"assert\");\nvar sourceMap = require(\"source-map\");\nvar printComments = require(\"./comments\").printComments;\nvar linesModule = require(\"./lines\");\nvar fromString = linesModule.fromString;\nvar concat = linesModule.concat;\nvar normalizeOptions = require(\"./options\").normalize;\nvar getReprinter = require(\"./patcher\").getReprinter;\nvar types = require(\"./types\");\nvar namedTypes = types.namedTypes;\nvar isString = types.builtInTypes.string;\nvar isObject = types.builtInTypes.object;\nvar FastPath = require(\"./fast-path\");\nvar util = require(\"./util\");\n\nfunction PrintResult(code, sourceMap) {\n    assert.ok(this instanceof PrintResult);\n\n    isString.assert(code);\n    this.code = code;\n\n    if (sourceMap) {\n        isObject.assert(sourceMap);\n        this.map = sourceMap;\n    }\n}\n\nvar PRp = PrintResult.prototype;\nvar warnedAboutToString = false;\n\nPRp.toString = function() {\n    if (!warnedAboutToString) {\n        console.warn(\n            \"Deprecation warning: recast.print now returns an object with \" +\n            \"a .code property. You appear to be treating the object as a \" +\n            \"string, which might still work but is strongly discouraged.\"\n        );\n\n        warnedAboutToString = true;\n    }\n\n    return this.code;\n};\n\nvar emptyPrintResult = new PrintResult(\"\");\n\nfunction Printer(originalOptions) {\n    assert.ok(this instanceof Printer);\n\n    var explicitTabWidth = originalOptions && originalOptions.tabWidth;\n    var options = normalizeOptions(originalOptions);\n    assert.notStrictEqual(options, originalOptions);\n\n    // It's common for client code to pass the same options into both\n    // recast.parse and recast.print, but the Printer doesn't need (and\n    // can be confused by) options.sourceFileName, so we null it out.\n    options.sourceFileName = null;\n\n    function printWithComments(path) {\n        assert.ok(path instanceof FastPath);\n        return printComments(path, print);\n    }\n\n    function print(path, includeComments) {\n        if (includeComments)\n            return printWithComments(path);\n\n        assert.ok(path instanceof FastPath);\n\n        if (!explicitTabWidth) {\n            var oldTabWidth = options.tabWidth;\n            var loc = path.getNode().loc;\n            if (loc && loc.lines && loc.lines.guessTabWidth) {\n                options.tabWidth = loc.lines.guessTabWidth();\n                var lines = maybeReprint(path);\n                options.tabWidth = oldTabWidth;\n                return lines;\n            }\n        }\n\n        return maybeReprint(path);\n    }\n\n    function maybeReprint(path) {\n        var reprinter = getReprinter(path);\n        if (reprinter) {\n            // Since the print function that we pass to the reprinter will\n            // be used to print \"new\" nodes, it's tempting to think we\n            // should pass printRootGenerically instead of print, to avoid\n            // calling maybeReprint again, but that would be a mistake\n            // because the new nodes might not be entirely new, but merely\n            // moved from elsewhere in the AST. The print function is the\n            // right choice because it gives us the opportunity to reprint\n            // such nodes using their original source.\n            return maybeAddParens(path, reprinter(print));\n        }\n        return printRootGenerically(path);\n    }\n\n    // Print the root node generically, but then resume reprinting its\n    // children non-generically.\n    function printRootGenerically(path, includeComments) {\n        return includeComments\n            ? printComments(path, printRootGenerically)\n            : genericPrint(path, options, printWithComments);\n    }\n\n    // Print the entire AST generically.\n    function printGenerically(path) {\n        return genericPrint(path, options, printGenerically);\n    }\n\n    this.print = function(ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n\n        var lines = print(FastPath.from(ast), true);\n\n        return new PrintResult(\n            lines.toString(options),\n            util.composeSourceMaps(\n                options.inputSourceMap,\n                lines.getSourceMap(\n                    options.sourceMapName,\n                    options.sourceRoot\n                )\n            )\n        );\n    };\n\n    this.printGenerically = function(ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n\n        var path = FastPath.from(ast);\n        var oldReuseWhitespace = options.reuseWhitespace;\n\n        // Do not reuse whitespace (or anything else, for that matter)\n        // when printing generically.\n        options.reuseWhitespace = false;\n\n        // TODO Allow printing of comments?\n        var pr = new PrintResult(printGenerically(path).toString(options));\n        options.reuseWhitespace = oldReuseWhitespace;\n        return pr;\n    };\n}\n\nexports.Printer = Printer;\n\nfunction maybeAddParens(path, lines) {\n    return path.needsParens() ? concat([\"(\", lines, \")\"]) : lines;\n}\n\nfunction genericPrint(path, options, printPath) {\n    assert.ok(path instanceof FastPath);\n\n    var node = path.getValue();\n    var parts = [];\n    var needsParens = false;\n    var linesWithoutParens =\n        genericPrintNoParens(path, options, printPath);\n\n    if (! node || linesWithoutParens.isEmpty()) {\n        return linesWithoutParens;\n    }\n\n    if (node.decorators &&\n        node.decorators.length > 0 &&\n        // If the parent node is an export declaration, it will be\n        // responsible for printing node.decorators.\n        ! util.getParentExportDeclaration(path)) {\n\n        path.each(function(decoratorPath) {\n            parts.push(printPath(decoratorPath), \"\\n\");\n        }, \"decorators\");\n\n    } else if (util.isExportDeclaration(node) &&\n               node.declaration &&\n               node.declaration.decorators) {\n        // Export declarations are responsible for printing any decorators\n        // that logically apply to node.declaration.\n        path.each(function(decoratorPath) {\n            parts.push(printPath(decoratorPath), \"\\n\");\n        }, \"declaration\", \"decorators\");\n\n    } else {\n        // Nodes with decorators can't have parentheses, so we can avoid\n        // computing path.needsParens() except in this case.\n        needsParens = path.needsParens();\n    }\n\n    if (needsParens) {\n        parts.unshift(\"(\");\n    }\n\n    parts.push(linesWithoutParens);\n\n    if (needsParens) {\n        parts.push(\")\");\n    }\n\n    return concat(parts);\n}\n\nfunction genericPrintNoParens(path, options, print) {\n    var n = path.getValue();\n\n    if (!n) {\n        return fromString(\"\");\n    }\n\n    if (typeof n === \"string\") {\n        return fromString(n, options);\n    }\n\n    namedTypes.Printable.assert(n);\n\n    var parts = [];\n\n    switch (n.type) {\n    case \"File\":\n        return path.call(print, \"program\");\n\n    case \"Program\":\n        // Babel 6\n        if (n.directives) {\n            path.each(function(childPath) {\n                parts.push(print(childPath), \";\\n\");\n            }, \"directives\");\n        }\n\n        parts.push(path.call(function(bodyPath) {\n            return printStatementSequence(bodyPath, options, print);\n        }, \"body\"));\n\n        return concat(parts);\n\n    case \"Noop\": // Babel extension.\n    case \"EmptyStatement\":\n        return fromString(\"\");\n\n    case \"ExpressionStatement\":\n        return concat([path.call(print, \"expression\"), \";\"]);\n\n    case \"ParenthesizedExpression\": // Babel extension.\n        return concat([\"(\", path.call(print, \"expression\"), \")\"]);\n\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n    case \"AssignmentExpression\":\n        return fromString(\" \").join([\n            path.call(print, \"left\"),\n            n.operator,\n            path.call(print, \"right\")\n        ]);\n\n    case \"AssignmentPattern\":\n        return concat([\n            path.call(print, \"left\"),\n            \" = \",\n            path.call(print, \"right\")\n        ]);\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n        parts.push(path.call(print, \"object\"));\n\n        var property = path.call(print, \"property\");\n        var optional = n.type === \"OptionalMemberExpression\";\n\n        if (n.computed) {\n            parts.push(optional ? \"?.[\" : \"[\", property, \"]\");\n        } else {\n            parts.push(optional ? \"?.\" : \".\", property);\n        }\n\n        return concat(parts);\n\n    case \"MetaProperty\":\n        return concat([\n            path.call(print, \"meta\"),\n            \".\",\n            path.call(print, \"property\")\n        ]);\n\n    case \"BindExpression\":\n        if (n.object) {\n            parts.push(path.call(print, \"object\"));\n        }\n\n        parts.push(\"::\", path.call(print, \"callee\"));\n\n        return concat(parts);\n\n    case \"Path\":\n        return fromString(\".\").join(n.body);\n\n    case \"Identifier\":\n        return concat([\n            fromString(n.name, options),\n            n.optional ? \"?\" : \"\",\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"SpreadElement\":\n    case \"SpreadElementPattern\":\n    case \"RestProperty\": // Babel 6 for ObjectPattern\n    case \"SpreadProperty\":\n    case \"SpreadPropertyPattern\":\n    case \"ObjectTypeSpreadProperty\":\n    case \"RestElement\":\n        return concat([\n            \"...\",\n            path.call(print, \"argument\"),\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"TSDeclareFunction\":\n        if (n.declare) {\n            parts.push(\"declare \");\n        }\n\n        if (n.async) {\n            parts.push(\"async \");\n        }\n\n        parts.push(\"function\");\n\n        if (n.generator)\n            parts.push(\"*\");\n\n        if (n.id) {\n            parts.push(\n                \" \",\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\")\n            );\n        }\n\n        parts.push(\n            \"(\",\n            printFunctionParams(path, options, print),\n            \")\",\n            path.call(print, \"returnType\")\n        );\n\n        if (n.body) {\n            parts.push(\" \", path.call(print, \"body\"));\n        }\n\n        return concat(parts);\n\n    case \"ArrowFunctionExpression\":\n        if (n.async) {\n            parts.push(\"async \");\n        }\n\n        if (n.typeParameters) {\n            parts.push(path.call(print, \"typeParameters\"));\n        }\n\n        if (! options.arrowParensAlways &&\n            n.params.length === 1 &&\n            ! n.rest &&\n            n.params[0].type === 'Identifier' &&\n            ! n.params[0].typeAnnotation &&\n            ! n.returnType) {\n            parts.push(path.call(print, \"params\", 0));\n        } else {\n            parts.push(\n                \"(\",\n                printFunctionParams(path, options, print),\n                \")\",\n                path.call(print, \"returnType\")\n            );\n        }\n\n        parts.push(\" => \", path.call(print, \"body\"));\n\n        return concat(parts);\n\n    case \"MethodDefinition\":\n        return printMethod(path, options, print);\n\n    case \"YieldExpression\":\n        parts.push(\"yield\");\n\n        if (n.delegate)\n            parts.push(\"*\");\n\n        if (n.argument)\n            parts.push(\" \", path.call(print, \"argument\"));\n\n        return concat(parts);\n\n    case \"AwaitExpression\":\n        parts.push(\"await\");\n\n        if (n.all)\n            parts.push(\"*\");\n\n        if (n.argument)\n            parts.push(\" \", path.call(print, \"argument\"));\n\n        return concat(parts);\n\n    case \"ModuleDeclaration\":\n        parts.push(\"module\", path.call(print, \"id\"));\n\n        if (n.source) {\n            assert.ok(!n.body);\n            parts.push(\"from\", path.call(print, \"source\"));\n        } else {\n            parts.push(path.call(print, \"body\"));\n        }\n\n        return fromString(\" \").join(parts);\n\n    case \"ImportSpecifier\":\n        if (n.importKind && n.importKind !== \"value\") {\n            parts.push(n.importKind + \" \");\n        }\n        if (n.imported) {\n            parts.push(path.call(print, \"imported\"));\n            if (n.local &&\n                n.local.name !== n.imported.name) {\n                parts.push(\" as \", path.call(print, \"local\"));\n            }\n        } else if (n.id) {\n            parts.push(path.call(print, \"id\"));\n            if (n.name) {\n                parts.push(\" as \", path.call(print, \"name\"));\n            }\n        }\n\n        return concat(parts);\n\n    case \"ExportSpecifier\":\n        if (n.local) {\n            parts.push(path.call(print, \"local\"));\n            if (n.exported &&\n                n.exported.name !== n.local.name) {\n                parts.push(\" as \", path.call(print, \"exported\"));\n            }\n        } else if (n.id) {\n            parts.push(path.call(print, \"id\"));\n            if (n.name) {\n                parts.push(\" as \", path.call(print, \"name\"));\n            }\n        }\n\n        return concat(parts);\n\n    case \"ExportBatchSpecifier\":\n        return fromString(\"*\");\n\n    case \"ImportNamespaceSpecifier\":\n        parts.push(\"* as \");\n        if (n.local) {\n            parts.push(path.call(print, \"local\"));\n        } else if (n.id) {\n            parts.push(path.call(print, \"id\"));\n        }\n        return concat(parts);\n\n    case \"ImportDefaultSpecifier\":\n        if (n.local) {\n            return path.call(print, \"local\");\n        }\n        return path.call(print, \"id\");\n\n    case \"TSExportAssignment\":\n        return concat([\"export = \", path.call(print, \"expression\")]);\n\n    case \"ExportDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n        return printExportDeclaration(path, options, print);\n\n    case \"ExportAllDeclaration\":\n        parts.push(\"export *\");\n\n        if (n.exported) {\n            parts.push(\" as \", path.call(print, \"exported\"));\n        }\n\n        parts.push(\n            \" from \",\n            path.call(print, \"source\")\n        );\n\n        return concat(parts);\n\n    case \"TSNamespaceExportDeclaration\":\n        parts.push(\"export as namespace \", path.call(print, \"id\"));\n        return maybeAddSemicolon(concat(parts));\n\n    case \"ExportNamespaceSpecifier\":\n        return concat([\"* as \", path.call(print, \"exported\")]);\n\n    case \"ExportDefaultSpecifier\":\n        return path.call(print, \"exported\");\n\n    case \"Import\":\n        return fromString(\"import\", options);\n\n    case \"ImportDeclaration\": {\n        parts.push(\"import \");\n\n        if (n.importKind && n.importKind !== \"value\") {\n            parts.push(n.importKind + \" \");\n        }\n\n        if (n.specifiers &&\n            n.specifiers.length > 0) {\n\n            const unbracedSpecifiers = [];\n            const bracedSpecifiers = [];\n\n            path.each(function (specifierPath) {\n                const spec = specifierPath.getValue();\n                if (spec.type === \"ImportSpecifier\") {\n                    bracedSpecifiers.push(print(specifierPath));\n                } else if (spec.type === \"ImportDefaultSpecifier\" ||\n                           spec.type === \"ImportNamespaceSpecifier\") {\n                    unbracedSpecifiers.push(print(specifierPath));\n                }\n            }, \"specifiers\");\n\n            unbracedSpecifiers.forEach((lines, i) => {\n                if (i > 0) {\n                    parts.push(\", \");\n                }\n                parts.push(lines);\n            });\n\n            if (bracedSpecifiers.length > 0) {\n                let lines = fromString(\", \").join(bracedSpecifiers);\n                if (lines.getLineLength(1) > options.wrapColumn) {\n                    lines = concat([\n                        fromString(\",\\n\").join(\n                            bracedSpecifiers\n                        ).indent(options.tabWidth),\n                        \",\"\n                    ]);\n                }\n\n                if (unbracedSpecifiers.length > 0) {\n                    parts.push(\", \");\n                }\n\n                if (lines.length > 1) {\n                    parts.push(\"{\\n\", lines, \"\\n}\");\n                } else if (options.objectCurlySpacing) {\n                    parts.push(\"{ \", lines, \" }\");\n                } else {\n                    parts.push(\"{\", lines, \"}\");\n                }\n            }\n\n            parts.push(\" from \");\n        }\n\n        parts.push(path.call(print, \"source\"), \";\");\n\n        return concat(parts);\n    }\n\n    case \"BlockStatement\":\n        var naked = path.call(function(bodyPath) {\n            return printStatementSequence(bodyPath, options, print);\n        }, \"body\");\n\n\n        if (naked.isEmpty()) {\n            if (!n.directives || n.directives.length === 0) {\n                return fromString(\"{}\");\n            }\n        }\n\n        parts.push(\"{\\n\");\n        // Babel 6\n        if (n.directives) {\n            path.each(function(childPath) {\n                parts.push(\n                    print(childPath).indent(options.tabWidth),\n                    \";\",\n                    n.directives.length > 1 || !naked.isEmpty() ? \"\\n\" : \"\"\n                );\n            }, \"directives\");\n        }\n        parts.push(naked.indent(options.tabWidth));\n        parts.push(\"\\n}\");\n\n        return concat(parts);\n\n    case \"ReturnStatement\":\n        parts.push(\"return\");\n\n        if (n.argument) {\n            var argLines = path.call(print, \"argument\");\n            if (argLines.startsWithComment() ||\n                (argLines.length > 1 &&\n                    namedTypes.JSXElement &&\n                    namedTypes.JSXElement.check(n.argument)\n                )) {\n                parts.push(\n                    \" (\\n\",\n                    argLines.indent(options.tabWidth),\n                    \"\\n)\"\n                );\n            } else {\n                parts.push(\" \", argLines);\n            }\n        }\n\n        parts.push(\";\");\n\n        return concat(parts);\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n        var parts = [path.call(print, \"callee\")];\n\n        if (n.type === \"OptionalCallExpression\" &&\n            n.callee.type !== \"OptionalMemberExpression\") {\n            parts.push(\"?.\");\n        }\n\n        parts.push(printArgumentsList(path, options, print));\n\n        return concat(parts);\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n    case \"ObjectTypeAnnotation\":\n        var allowBreak = false;\n        var isTypeAnnotation = n.type === \"ObjectTypeAnnotation\";\n        var separator = options.flowObjectCommas ? \",\" : (isTypeAnnotation ? \";\" : \",\");\n        var fields = [];\n\n        if (isTypeAnnotation) {\n            fields.push(\"indexers\", \"callProperties\");\n        }\n\n        fields.push(\"properties\");\n\n        var len = 0;\n        fields.forEach(function(field) {\n            len += n[field].length;\n        });\n\n        var oneLine = (isTypeAnnotation && len === 1) || len === 0;\n        var leftBrace = n.exact ? \"{|\" : \"{\";\n        var rightBrace = n.exact ? \"|}\" : \"}\";\n        parts.push(oneLine ? leftBrace : leftBrace + \"\\n\");\n        var leftBraceIndex = parts.length - 1;\n\n        var i = 0;\n        fields.forEach(function(field) {\n            path.each(function(childPath) {\n                var lines = print(childPath);\n\n                if (!oneLine) {\n                    lines = lines.indent(options.tabWidth);\n                }\n\n                var multiLine = !isTypeAnnotation && lines.length > 1;\n                if (multiLine && allowBreak) {\n                    // Similar to the logic for BlockStatement.\n                    parts.push(\"\\n\");\n                }\n\n                parts.push(lines);\n\n                if (i < len - 1) {\n                    // Add an extra line break if the previous object property\n                    // had a multi-line value.\n                    parts.push(separator + (multiLine ? \"\\n\\n\" : \"\\n\"));\n                    allowBreak = !multiLine;\n                } else if (len !== 1 && isTypeAnnotation) {\n                    parts.push(separator);\n                } else if (!oneLine && util.isTrailingCommaEnabled(options, \"objects\")) {\n                    parts.push(separator);\n                }\n                i++;\n            }, field);\n        });\n\n        parts.push(oneLine ? rightBrace : \"\\n\" + rightBrace);\n\n        if (i !== 0 && oneLine && options.objectCurlySpacing) {\n            parts[leftBraceIndex] = leftBrace + \" \";\n            parts[parts.length - 1] = \" \" + rightBrace;\n        }\n\n        return concat(parts);\n\n    case \"PropertyPattern\":\n        return concat([\n            path.call(print, \"key\"),\n            \": \",\n            path.call(print, \"pattern\")\n        ]);\n\n    case \"ObjectProperty\": // Babel 6\n    case \"Property\": // Non-standard AST node type.\n        if (n.method || n.kind === \"get\" || n.kind === \"set\") {\n            return printMethod(path, options, print);\n        }\n\n        var key = path.call(print, \"key\");\n        if (n.computed) {\n            parts.push(\"[\", key, \"]\");\n        } else {\n            parts.push(key);\n        }\n\n        if (! n.shorthand) {\n            parts.push(\": \", path.call(print, \"value\"));\n        }\n\n        return concat(parts);\n\n    case \"ClassMethod\": // Babel 6\n    case \"ObjectMethod\": // Babel 6\n    case \"TSDeclareMethod\":\n        return printMethod(path, options, print);\n\n    case \"Decorator\":\n        return concat([\"@\", path.call(print, \"expression\")]);\n\n    case \"ArrayExpression\":\n    case \"ArrayPattern\":\n        var elems = n.elements,\n            len = elems.length;\n\n        var printed = path.map(print, \"elements\");\n        var joined = fromString(\", \").join(printed);\n        var oneLine = joined.getLineLength(1) <= options.wrapColumn;\n        if (oneLine) {\n          if (options.arrayBracketSpacing) {\n            parts.push(\"[ \");\n          } else {\n            parts.push(\"[\");\n          }\n        } else {\n          parts.push(\"[\\n\");\n        }\n\n        path.each(function(elemPath) {\n            var i = elemPath.getName();\n            var elem = elemPath.getValue();\n            if (!elem) {\n                // If the array expression ends with a hole, that hole\n                // will be ignored by the interpreter, but if it ends with\n                // two (or more) holes, we need to write out two (or more)\n                // commas so that the resulting code is interpreted with\n                // both (all) of the holes.\n                parts.push(\",\");\n            } else {\n                var lines = printed[i];\n                if (oneLine) {\n                    if (i > 0)\n                        parts.push(\" \");\n                } else {\n                    lines = lines.indent(options.tabWidth);\n                }\n                parts.push(lines);\n                if (i < len - 1 || (!oneLine && util.isTrailingCommaEnabled(options, \"arrays\")))\n                    parts.push(\",\");\n                if (!oneLine)\n                    parts.push(\"\\n\");\n            }\n        }, \"elements\");\n\n        if (oneLine && options.arrayBracketSpacing) {\n          parts.push(\" ]\");\n        } else {\n          parts.push(\"]\");\n        }\n\n        return concat(parts);\n\n    case \"SequenceExpression\":\n        return fromString(\", \").join(path.map(print, \"expressions\"));\n\n    case \"ThisExpression\":\n        return fromString(\"this\");\n\n    case \"Super\":\n        return fromString(\"super\");\n\n    case \"NullLiteral\": // Babel 6 Literal split\n        return fromString(\"null\");\n\n    case \"RegExpLiteral\": // Babel 6 Literal split\n        return fromString(n.extra.raw);\n\n    case \"BigIntLiteral\": // Babel 7 Literal split\n        return fromString(n.value + \"n\");\n\n    case \"NumericLiteral\": // Babel 6 Literal Split\n        // Keep original representation for numeric values not in base 10.\n        if (n.extra &&\n            typeof n.extra.raw === \"string\" &&\n            Number(n.extra.raw) === n.value) {\n            return fromString(n.extra.raw, options);\n        }\n\n        return fromString(n.value, options);\n\n    case \"BooleanLiteral\": // Babel 6 Literal split\n\n    case \"StringLiteral\": // Babel 6 Literal split\n    case \"Literal\":\n        // Numeric values may be in bases other than 10. Use their raw\n        // representation if equivalent.\n        if (typeof n.value === \"number\" &&\n            typeof n.raw === \"string\" &&\n            Number(n.raw) === n.value) {\n            return fromString(n.raw, options);\n        }\n\n        if (typeof n.value !== \"string\") {\n            return fromString(n.value, options);\n        }\n\n        return fromString(nodeStr(n.value, options), options);\n\n    case \"Directive\": // Babel 6\n        return path.call(print, \"value\");\n\n    case \"DirectiveLiteral\": // Babel 6\n        return fromString(nodeStr(n.value, options));\n\n    case \"ModuleSpecifier\":\n        if (n.local) {\n            throw new Error(\n                \"The ESTree ModuleSpecifier type should be abstract\"\n            );\n        }\n\n        // The Esprima ModuleSpecifier type is just a string-valued\n        // Literal identifying the imported-from module.\n        return fromString(nodeStr(n.value, options), options);\n\n    case \"UnaryExpression\":\n        parts.push(n.operator);\n        if (/[a-z]$/.test(n.operator))\n            parts.push(\" \");\n        parts.push(path.call(print, \"argument\"));\n        return concat(parts);\n\n    case \"UpdateExpression\":\n        parts.push(\n            path.call(print, \"argument\"),\n            n.operator\n        );\n\n        if (n.prefix)\n            parts.reverse();\n\n        return concat(parts);\n\n    case \"ConditionalExpression\":\n        return concat([\n            \"(\", path.call(print, \"test\"),\n            \" ? \", path.call(print, \"consequent\"),\n            \" : \", path.call(print, \"alternate\"), \")\"\n        ]);\n\n    case \"NewExpression\":\n        parts.push(\"new \", path.call(print, \"callee\"));\n        var args = n.arguments;\n        if (args) {\n            parts.push(printArgumentsList(path, options, print));\n        }\n\n        return concat(parts);\n\n    case \"VariableDeclaration\":\n        if (n.declare) {\n            parts.push(\"declare \");\n        }\n\n        parts.push(n.kind, \" \");\n\n        var maxLen = 0;\n        var printed = path.map(function(childPath) {\n            var lines = print(childPath);\n            maxLen = Math.max(lines.length, maxLen);\n            return lines;\n        }, \"declarations\");\n\n        if (maxLen === 1) {\n            parts.push(fromString(\", \").join(printed));\n        } else if (printed.length > 1 ) {\n            parts.push(\n                fromString(\",\\n\").join(printed)\n                    .indentTail(n.kind.length + 1)\n            );\n        } else {\n            parts.push(printed[0]);\n        }\n\n        // We generally want to terminate all variable declarations with a\n        // semicolon, except when they are children of for loops.\n        var parentNode = path.getParentNode();\n        if (!namedTypes.ForStatement.check(parentNode) &&\n            !namedTypes.ForInStatement.check(parentNode) &&\n            !(namedTypes.ForOfStatement &&\n              namedTypes.ForOfStatement.check(parentNode)) &&\n            !(namedTypes.ForAwaitStatement &&\n              namedTypes.ForAwaitStatement.check(parentNode))) {\n            parts.push(\";\");\n        }\n\n        return concat(parts);\n\n    case \"VariableDeclarator\":\n        return n.init ? fromString(\" = \").join([\n            path.call(print, \"id\"),\n            path.call(print, \"init\")\n        ]) : path.call(print, \"id\");\n\n    case \"WithStatement\":\n        return concat([\n            \"with (\",\n            path.call(print, \"object\"),\n            \") \",\n            path.call(print, \"body\")\n        ]);\n\n    case \"IfStatement\":\n        var con = adjustClause(path.call(print, \"consequent\"), options),\n            parts = [\"if (\", path.call(print, \"test\"), \")\", con];\n\n        if (n.alternate)\n            parts.push(\n                endsWithBrace(con) ? \" else\" : \"\\nelse\",\n                adjustClause(path.call(print, \"alternate\"), options));\n\n        return concat(parts);\n\n    case \"ForStatement\":\n        // TODO Get the for (;;) case right.\n        var init = path.call(print, \"init\"),\n            sep = init.length > 1 ? \";\\n\" : \"; \",\n            forParen = \"for (\",\n            indented = fromString(sep).join([\n                init,\n                path.call(print, \"test\"),\n                path.call(print, \"update\")\n            ]).indentTail(forParen.length),\n            head = concat([forParen, indented, \")\"]),\n            clause = adjustClause(path.call(print, \"body\"), options),\n            parts = [head];\n\n        if (head.length > 1) {\n            parts.push(\"\\n\");\n            clause = clause.trimLeft();\n        }\n\n        parts.push(clause);\n\n        return concat(parts);\n\n    case \"WhileStatement\":\n        return concat([\n            \"while (\",\n            path.call(print, \"test\"),\n            \")\",\n            adjustClause(path.call(print, \"body\"), options)\n        ]);\n\n    case \"ForInStatement\":\n        // Note: esprima can't actually parse \"for each (\".\n        return concat([\n            n.each ? \"for each (\" : \"for (\",\n            path.call(print, \"left\"),\n            \" in \",\n            path.call(print, \"right\"),\n            \")\",\n            adjustClause(path.call(print, \"body\"), options)\n        ]);\n\n    case \"ForOfStatement\":\n    case \"ForAwaitStatement\":\n        parts.push(\"for \");\n\n        if (n.await || n.type === \"ForAwaitStatement\") {\n            parts.push(\"await \");\n        }\n\n        parts.push(\n            \"(\",\n            path.call(print, \"left\"),\n            \" of \",\n            path.call(print, \"right\"),\n            \")\",\n            adjustClause(path.call(print, \"body\"), options)\n        );\n\n        return concat(parts);\n\n    case \"DoWhileStatement\":\n        var doBody = concat([\n            \"do\",\n            adjustClause(path.call(print, \"body\"), options)\n        ]), parts = [doBody];\n\n        if (endsWithBrace(doBody))\n            parts.push(\" while\");\n        else\n            parts.push(\"\\nwhile\");\n\n        parts.push(\" (\", path.call(print, \"test\"), \");\");\n\n        return concat(parts);\n\n    case \"DoExpression\":\n        var statements = path.call(function(bodyPath) {\n            return printStatementSequence(bodyPath, options, print);\n        }, \"body\");\n\n        return concat([\n            \"do {\\n\",\n            statements.indent(options.tabWidth),\n            \"\\n}\"\n        ]);\n\n    case \"BreakStatement\":\n        parts.push(\"break\");\n        if (n.label)\n            parts.push(\" \", path.call(print, \"label\"));\n        parts.push(\";\");\n        return concat(parts);\n\n    case \"ContinueStatement\":\n        parts.push(\"continue\");\n        if (n.label)\n            parts.push(\" \", path.call(print, \"label\"));\n        parts.push(\";\");\n        return concat(parts);\n\n    case \"LabeledStatement\":\n        return concat([\n            path.call(print, \"label\"),\n            \":\\n\",\n            path.call(print, \"body\")\n        ]);\n\n    case \"TryStatement\":\n        parts.push(\n            \"try \",\n            path.call(print, \"block\")\n        );\n\n        if (n.handler) {\n            parts.push(\" \", path.call(print, \"handler\"));\n        } else if (n.handlers) {\n            path.each(function(handlerPath) {\n                parts.push(\" \", print(handlerPath));\n            }, \"handlers\");\n        }\n\n        if (n.finalizer) {\n            parts.push(\" finally \", path.call(print, \"finalizer\"));\n        }\n\n        return concat(parts);\n\n    case \"CatchClause\":\n        parts.push(\"catch \");\n\n        if (n.param) {\n            parts.push(\"(\", path.call(print, \"param\"));\n        }\n\n        if (n.guard) {\n            // Note: esprima does not recognize conditional catch clauses.\n            parts.push(\" if \", path.call(print, \"guard\"));\n        }\n\n        if (n.param) {\n            parts.push(\") \");\n        }\n\n        parts.push(path.call(print, \"body\"));\n\n        return concat(parts);\n\n    case \"ThrowStatement\":\n        return concat([\"throw \", path.call(print, \"argument\"), \";\"]);\n\n    case \"SwitchStatement\":\n        return concat([\n            \"switch (\",\n            path.call(print, \"discriminant\"),\n            \") {\\n\",\n            fromString(\"\\n\").join(path.map(print, \"cases\")),\n            \"\\n}\"\n        ]);\n\n        // Note: ignoring n.lexical because it has no printing consequences.\n\n    case \"SwitchCase\":\n        if (n.test)\n            parts.push(\"case \", path.call(print, \"test\"), \":\");\n        else\n            parts.push(\"default:\");\n\n        if (n.consequent.length > 0) {\n            parts.push(\"\\n\", path.call(function(consequentPath) {\n                return printStatementSequence(consequentPath, options, print);\n            }, \"consequent\").indent(options.tabWidth));\n        }\n\n        return concat(parts);\n\n    case \"DebuggerStatement\":\n        return fromString(\"debugger;\");\n\n    // JSX extensions below.\n\n    case \"JSXAttribute\":\n        parts.push(path.call(print, \"name\"));\n        if (n.value)\n            parts.push(\"=\", path.call(print, \"value\"));\n        return concat(parts);\n\n    case \"JSXIdentifier\":\n        return fromString(n.name, options);\n\n    case \"JSXNamespacedName\":\n        return fromString(\":\").join([\n            path.call(print, \"namespace\"),\n            path.call(print, \"name\")\n        ]);\n\n    case \"JSXMemberExpression\":\n        return fromString(\".\").join([\n            path.call(print, \"object\"),\n            path.call(print, \"property\")\n        ]);\n\n    case \"JSXSpreadAttribute\":\n        return concat([\"{...\", path.call(print, \"argument\"), \"}\"]);\n\n    case \"JSXSpreadChild\":\n        return concat([\"{...\", path.call(print, \"expression\"), \"}\"]);\n\n    case \"JSXExpressionContainer\":\n        return concat([\"{\", path.call(print, \"expression\"), \"}\"]);\n\n    case \"JSXElement\":\n    case \"JSXFragment\":\n        var openingPropName = \"opening\" + (\n            n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n\n        var closingPropName = \"closing\" + (\n            n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n\n        var openingLines = path.call(print, openingPropName);\n\n        if (n[openingPropName].selfClosing) {\n            assert.ok(\n                !n[closingPropName],\n                \"unexpected \" + closingPropName + \" element in self-closing \" + n.type\n            );\n            return openingLines;\n        }\n\n        var childLines = concat(\n            path.map(function(childPath) {\n                var child = childPath.getValue();\n\n                if (namedTypes.Literal.check(child) &&\n                    typeof child.value === \"string\") {\n                    if (/\\S/.test(child.value)) {\n                        return child.value.replace(/^\\s+|\\s+$/g, \"\");\n                    } else if (/\\n/.test(child.value)) {\n                        return \"\\n\";\n                    }\n                }\n\n                return print(childPath);\n            }, \"children\")\n        ).indentTail(options.tabWidth);\n\n        var closingLines = path.call(print, closingPropName);\n\n        return concat([\n            openingLines,\n            childLines,\n            closingLines\n        ]);\n\n    case \"JSXOpeningElement\":\n        parts.push(\"<\", path.call(print, \"name\"));\n        var attrParts = [];\n\n        path.each(function(attrPath) {\n            attrParts.push(\" \", print(attrPath));\n        }, \"attributes\");\n\n        var attrLines = concat(attrParts);\n\n        var needLineWrap = (\n            attrLines.length > 1 ||\n            attrLines.getLineLength(1) > options.wrapColumn\n        );\n\n        if (needLineWrap) {\n            attrParts.forEach(function(part, i) {\n                if (part === \" \") {\n                    assert.strictEqual(i % 2, 0);\n                    attrParts[i] = \"\\n\";\n                }\n            });\n\n            attrLines = concat(attrParts).indentTail(options.tabWidth);\n        }\n\n        parts.push(attrLines, n.selfClosing ? \" />\" : \">\");\n\n        return concat(parts);\n\n    case \"JSXClosingElement\":\n        return concat([\"</\", path.call(print, \"name\"), \">\"]);\n\n    case \"JSXOpeningFragment\":\n        return fromString(\"<>\");\n\n    case \"JSXClosingFragment\":\n        return fromString(\"</>\")\n\n    case \"JSXText\":\n        return fromString(n.value, options);\n\n    case \"JSXEmptyExpression\":\n        return fromString(\"\");\n\n    case \"TypeAnnotatedIdentifier\":\n        return concat([\n            path.call(print, \"annotation\"),\n            \" \",\n            path.call(print, \"identifier\")\n        ]);\n\n    case \"ClassBody\":\n        if (n.body.length === 0) {\n            return fromString(\"{}\");\n        }\n\n        return concat([\n            \"{\\n\",\n            path.call(function(bodyPath) {\n                return printStatementSequence(bodyPath, options, print);\n            }, \"body\").indent(options.tabWidth),\n            \"\\n}\"\n        ]);\n\n    case \"ClassPropertyDefinition\":\n        parts.push(\"static \", path.call(print, \"definition\"));\n        if (!namedTypes.MethodDefinition.check(n.definition))\n            parts.push(\";\");\n        return concat(parts);\n\n    case \"ClassProperty\":\n        if (typeof n.accessibility === \"string\") {\n            parts.push(n.accessibility, \" \");\n        }\n\n        if (n.static) {\n            parts.push(\"static \");\n        }\n\n        if (n.abstract) {\n            parts.push(\"abstract \");\n        }\n\n        if (n.readonly) {\n            parts.push(\"readonly \");\n        }\n\n        var key = path.call(print, \"key\");\n\n        if (n.computed) {\n            key = concat([\"[\", key, \"]\"]);\n        }\n\n        if (n.variance) {\n            key = concat([printVariance(path, print), key]);\n        }\n\n        parts.push(key);\n\n        if (n.optional) {\n            parts.push(\"?\");\n        }\n\n        if (n.typeAnnotation) {\n            parts.push(path.call(print, \"typeAnnotation\"));\n        }\n\n        if (n.value) {\n            parts.push(\" = \", path.call(print, \"value\"));\n        }\n\n        parts.push(\";\");\n        return concat(parts);\n\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n        if (n.declare) {\n            parts.push(\"declare \");\n        }\n\n        if (n.abstract) {\n            parts.push(\"abstract \");\n        }\n\n        parts.push(\"class\");\n\n        if (n.id) {\n            parts.push(\n                \" \",\n                path.call(print, \"id\")\n            );\n        }\n\n        if (n.typeParameters) {\n            parts.push(path.call(print, \"typeParameters\"));\n        }\n\n        if (n.superClass) {\n            parts.push(\n                \" extends \",\n                path.call(print, \"superClass\"),\n                path.call(print, \"superTypeParameters\")\n            );\n        }\n\n        if (n[\"implements\"] && n['implements'].length > 0) {\n            parts.push(\n                \" implements \",\n                fromString(\", \").join(path.map(print, \"implements\"))\n            );\n        }\n\n        parts.push(\" \", path.call(print, \"body\"));\n\n        return concat(parts);\n\n    case \"TemplateElement\":\n        return fromString(n.value.raw, options).lockIndentTail();\n\n    case \"TemplateLiteral\":\n        var expressions = path.map(print, \"expressions\");\n        parts.push(\"`\");\n\n        path.each(function(childPath) {\n            var i = childPath.getName();\n            parts.push(print(childPath));\n            if (i < expressions.length) {\n                parts.push(\"${\", expressions[i], \"}\");\n            }\n        }, \"quasis\");\n\n        parts.push(\"`\");\n\n        return concat(parts).lockIndentTail();\n\n    case \"TaggedTemplateExpression\":\n        return concat([\n            path.call(print, \"tag\"),\n            path.call(print, \"quasi\")\n        ]);\n\n    // These types are unprintable because they serve as abstract\n    // supertypes for other (printable) types.\n    case \"Node\":\n    case \"Printable\":\n    case \"SourceLocation\":\n    case \"Position\":\n    case \"Statement\":\n    case \"Function\":\n    case \"Pattern\":\n    case \"Expression\":\n    case \"Declaration\":\n    case \"Specifier\":\n    case \"NamedSpecifier\":\n    case \"Comment\": // Supertype of Block and Line\n    case \"Flow\": // Supertype of all Flow AST node types\n    case \"FlowType\": // Supertype of all Flow types\n    case \"FlowPredicate\": // Supertype of InferredPredicate and DeclaredPredicate\n    case \"MemberTypeAnnotation\": // Flow\n    case \"Type\": // Flow\n    case \"TSHasOptionalTypeParameters\":\n    case \"TSHasOptionalTypeAnnotation\":\n        throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n\n    case \"CommentBlock\": // Babel block comment.\n    case \"Block\": // Esprima block comment.\n        return concat([\"/*\", fromString(n.value, options), \"*/\"]);\n\n    case \"CommentLine\": // Babel line comment.\n    case \"Line\": // Esprima line comment.\n        return concat([\"//\", fromString(n.value, options)]);\n\n    // Type Annotations for Facebook Flow, typically stripped out or\n    // transformed away before printing.\n    case \"TypeAnnotation\":\n        if (n.typeAnnotation) {\n            if (n.typeAnnotation.type !== \"FunctionTypeAnnotation\") {\n                parts.push(\": \");\n            }\n            parts.push(path.call(print, \"typeAnnotation\"));\n            return concat(parts);\n        }\n\n        return fromString(\"\");\n\n    case \"ExistentialTypeParam\":\n    case \"ExistsTypeAnnotation\":\n        return fromString(\"*\", options);\n\n    case \"EmptyTypeAnnotation\":\n        return fromString(\"empty\", options);\n\n    case \"AnyTypeAnnotation\":\n        return fromString(\"any\", options);\n\n    case \"MixedTypeAnnotation\":\n        return fromString(\"mixed\", options);\n\n    case \"ArrayTypeAnnotation\":\n        return concat([\n            path.call(print, \"elementType\"),\n            \"[]\"\n        ]);\n\n    case \"TupleTypeAnnotation\":\n        var printed = path.map(print, \"types\");\n        var joined = fromString(\", \").join(printed);\n        var oneLine = joined.getLineLength(1) <= options.wrapColumn;\n        if (oneLine) {\n          if (options.arrayBracketSpacing) {\n            parts.push(\"[ \");\n          } else {\n            parts.push(\"[\");\n          }\n        } else {\n          parts.push(\"[\\n\");\n        }\n\n        path.each(function(elemPath) {\n            var i = elemPath.getName();\n            var elem = elemPath.getValue();\n            if (!elem) {\n                // If the array expression ends with a hole, that hole\n                // will be ignored by the interpreter, but if it ends with\n                // two (or more) holes, we need to write out two (or more)\n                // commas so that the resulting code is interpreted with\n                // both (all) of the holes.\n                parts.push(\",\");\n            } else {\n                var lines = printed[i];\n                if (oneLine) {\n                    if (i > 0)\n                        parts.push(\" \");\n                } else {\n                    lines = lines.indent(options.tabWidth);\n                }\n                parts.push(lines);\n                if (i < n.types.length - 1 || (!oneLine && util.isTrailingCommaEnabled(options, \"arrays\")))\n                    parts.push(\",\");\n                if (!oneLine)\n                    parts.push(\"\\n\");\n            }\n        }, \"types\");\n\n        if (oneLine && options.arrayBracketSpacing) {\n          parts.push(\" ]\");\n        } else {\n          parts.push(\"]\");\n        }\n\n        return concat(parts);\n\n    case \"BooleanTypeAnnotation\":\n        return fromString(\"boolean\", options);\n\n    case \"BooleanLiteralTypeAnnotation\":\n        assert.strictEqual(typeof n.value, \"boolean\");\n        return fromString(\"\" + n.value, options);\n\n    case \"DeclareClass\":\n        return printFlowDeclaration(path, [\n            \"class \",\n            path.call(print, \"id\"),\n            \" \",\n            path.call(print, \"body\"),\n        ]);\n\n    case \"DeclareFunction\":\n        return printFlowDeclaration(path, [\n            \"function \",\n            path.call(print, \"id\"),\n            \";\"\n        ]);\n\n    case \"DeclareModule\":\n        return printFlowDeclaration(path, [\n            \"module \",\n            path.call(print, \"id\"),\n            \" \",\n            path.call(print, \"body\"),\n        ]);\n\n    case \"DeclareModuleExports\":\n        return printFlowDeclaration(path, [\n            \"module.exports\",\n            path.call(print, \"typeAnnotation\"),\n        ]);\n\n    case \"DeclareVariable\":\n        return printFlowDeclaration(path, [\n            \"var \",\n            path.call(print, \"id\"),\n            \";\"\n        ]);\n\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n        return concat([\n            \"declare \",\n            printExportDeclaration(path, options, print)\n        ]);\n\n    case \"InferredPredicate\":\n        return fromString(\"%checks\", options);\n\n    case \"DeclaredPredicate\":\n        return concat([\n            \"%checks(\",\n            path.call(print, \"value\"),\n            \")\"\n        ]);\n\n    case \"FunctionTypeAnnotation\":\n        // FunctionTypeAnnotation is ambiguous:\n        // declare function(a: B): void; OR\n        // var A: (a: B) => void;\n        var parent = path.getParentNode(0);\n        var isArrowFunctionTypeAnnotation = !(\n            namedTypes.ObjectTypeCallProperty.check(parent) ||\n            namedTypes.DeclareFunction.check(path.getParentNode(2))\n        );\n\n        var needsColon =\n            isArrowFunctionTypeAnnotation &&\n            !namedTypes.FunctionTypeParam.check(parent);\n\n        if (needsColon) {\n            parts.push(\": \");\n        }\n\n        parts.push(\n            \"(\",\n            fromString(\", \").join(path.map(print, \"params\")),\n            \")\"\n        );\n\n        // The returnType is not wrapped in a TypeAnnotation, so the colon\n        // needs to be added separately.\n        if (n.returnType) {\n            parts.push(\n                isArrowFunctionTypeAnnotation ? \" => \" : \": \",\n                path.call(print, \"returnType\")\n            );\n        }\n\n        return concat(parts);\n\n    case \"FunctionTypeParam\":\n        return concat([\n            path.call(print, \"name\"),\n            n.optional ? '?' : '',\n            \": \",\n            path.call(print, \"typeAnnotation\"),\n        ]);\n\n    case \"GenericTypeAnnotation\":\n        return concat([\n            path.call(print, \"id\"),\n            path.call(print, \"typeParameters\")\n        ]);\n\n    case \"DeclareInterface\":\n        parts.push(\"declare \");\n        // Fall through to InterfaceDeclaration...\n\n    case \"InterfaceDeclaration\":\n    case \"TSInterfaceDeclaration\":\n        if (n.declare) {\n            parts.push(\"declare \");\n        }\n\n        parts.push(\n            \"interface \",\n            path.call(print, \"id\"),\n            path.call(print, \"typeParameters\"),\n            \" \"\n        );\n\n        if (n[\"extends\"] && n[\"extends\"].length > 0) {\n            parts.push(\n                \"extends \",\n                fromString(\", \").join(path.map(print, \"extends\")),\n                \" \"\n            );\n        }\n\n        if (n.body) {\n            parts.push(path.call(print, \"body\"));\n        }\n\n        return concat(parts);\n\n    case \"ClassImplements\":\n    case \"InterfaceExtends\":\n        return concat([\n            path.call(print, \"id\"),\n            path.call(print, \"typeParameters\")\n        ]);\n\n    case \"IntersectionTypeAnnotation\":\n        return fromString(\" & \").join(path.map(print, \"types\"));\n\n    case \"NullableTypeAnnotation\":\n        return concat([\n            \"?\",\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"NullLiteralTypeAnnotation\":\n        return fromString(\"null\", options);\n\n    case \"ThisTypeAnnotation\":\n        return fromString(\"this\", options);\n\n    case \"NumberTypeAnnotation\":\n        return fromString(\"number\", options);\n\n    case \"ObjectTypeCallProperty\":\n        return path.call(print, \"value\");\n\n    case \"ObjectTypeIndexer\":\n        return concat([\n            printVariance(path, print),\n            \"[\",\n            path.call(print, \"id\"),\n            \": \",\n            path.call(print, \"key\"),\n            \"]: \",\n            path.call(print, \"value\")\n        ]);\n\n    case \"ObjectTypeProperty\":\n        return concat([\n            printVariance(path, print),\n            path.call(print, \"key\"),\n            n.optional ? \"?\" : \"\",\n            \": \",\n            path.call(print, \"value\")\n        ]);\n\n    case \"QualifiedTypeIdentifier\":\n        return concat([\n            path.call(print, \"qualification\"),\n            \".\",\n            path.call(print, \"id\")\n        ]);\n\n    case \"StringLiteralTypeAnnotation\":\n        return fromString(nodeStr(n.value, options), options);\n\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumericLiteralTypeAnnotation\":\n        assert.strictEqual(typeof n.value, \"number\");\n        return fromString(JSON.stringify(n.value), options);\n\n    case \"StringTypeAnnotation\":\n        return fromString(\"string\", options);\n\n    case \"DeclareTypeAlias\":\n        parts.push(\"declare \");\n        // Fall through to TypeAlias...\n\n    case \"TypeAlias\":\n        return concat([\n            \"type \",\n            path.call(print, \"id\"),\n            path.call(print, \"typeParameters\"),\n            \" = \",\n            path.call(print, \"right\"),\n            \";\"\n        ]);\n\n    case \"DeclareOpaqueType\":\n        parts.push(\"declare \");\n        // Fall through to OpaqueType...\n\n    case \"OpaqueType\":\n        parts.push(\n            \"opaque type \",\n            path.call(print, \"id\"),\n            path.call(print, \"typeParameters\")\n        );\n\n        if (n[\"supertype\"]) {\n            parts.push(\": \", path.call(print, \"supertype\"));\n        }\n\n        if (n[\"impltype\"]) {\n            parts.push(\" = \", path.call(print, \"impltype\"));\n        }\n\n        parts.push(\";\");\n\n        return concat(parts);\n\n    case \"TypeCastExpression\":\n        return concat([\n            \"(\",\n            path.call(print, \"expression\"),\n            path.call(print, \"typeAnnotation\"),\n            \")\"\n        ]);\n\n    case \"TypeParameterDeclaration\":\n    case \"TypeParameterInstantiation\":\n        return concat([\n            \"<\",\n            fromString(\", \").join(path.map(print, \"params\")),\n            \">\"\n        ]);\n\n    case \"Variance\":\n        if (n.kind === \"plus\") {\n            return fromString(\"+\");\n        }\n\n        if (n.kind === \"minus\") {\n            return fromString(\"-\");\n        }\n\n        return fromString(\"\");\n\n    case \"TypeParameter\":\n        if (n.variance) {\n            parts.push(printVariance(path, print));\n        }\n\n        parts.push(path.call(print, 'name'));\n\n        if (n.bound) {\n            parts.push(path.call(print, 'bound'));\n        }\n\n        if (n['default']) {\n            parts.push('=', path.call(print, 'default'));\n        }\n\n        return concat(parts);\n\n    case \"TypeofTypeAnnotation\":\n        return concat([\n            fromString(\"typeof \", options),\n            path.call(print, \"argument\")\n        ]);\n\n    case \"UnionTypeAnnotation\":\n        return fromString(\" | \").join(path.map(print, \"types\"));\n\n    case \"VoidTypeAnnotation\":\n        return fromString(\"void\", options);\n\n    case \"NullTypeAnnotation\":\n        return fromString(\"null\", options);\n\n    // Type Annotations for TypeScript (when using Babylon as parser)\n    case \"TSType\":\n        throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n\n    case \"TSNumberKeyword\":\n        return fromString(\"number\", options);\n\n    case \"TSObjectKeyword\":\n        return fromString(\"object\", options);\n\n    case \"TSBooleanKeyword\":\n        return fromString(\"boolean\", options);\n\n    case \"TSStringKeyword\":\n        return fromString(\"string\", options);\n\n    case \"TSSymbolKeyword\":\n        return fromString(\"symbol\", options);\n\n    case \"TSAnyKeyword\":\n        return fromString(\"any\", options);\n\n    case \"TSVoidKeyword\":\n        return fromString(\"void\", options);\n\n    case \"TSThisType\":\n        return fromString(\"this\", options);\n\n    case \"TSNullKeyword\":\n        return fromString(\"null\", options);\n\n    case \"TSUndefinedKeyword\":\n        return fromString(\"undefined\", options);\n\n    case \"TSNeverKeyword\":\n        return fromString(\"never\", options);\n\n    case \"TSArrayType\":\n        return concat([\n            path.call(print, \"elementType\"),\n            \"[]\"\n        ]);\n\n    case \"TSLiteralType\":\n        return path.call(print, \"literal\")\n\n    case \"TSUnionType\":\n        return fromString(\" | \").join(path.map(print, \"types\"));\n\n    case \"TSIntersectionType\":\n        return fromString(\" & \").join(path.map(print, \"types\"));\n\n    case \"TSConditionalType\":\n        parts.push(\n            path.call(print, \"checkType\"),\n            \" extends \",\n            path.call(print, \"extendsType\"),\n            \" ? \",\n            path.call(print, \"trueType\"),\n            \" : \",\n            path.call(print, \"falseType\")\n        );\n\n        return concat(parts);\n\n    case \"TSInferType\":\n        parts.push(\n            \"infer \",\n            path.call(print, \"typeParameter\")\n        );\n\n        return concat(parts);\n\n    case \"TSParenthesizedType\":\n        return concat([\n            \"(\",\n            path.call(print, \"typeAnnotation\"),\n            \")\"\n        ]);\n\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n        return concat([\n            path.call(print, \"typeParameters\"),\n            \"(\",\n            printFunctionParams(path, options, print),\n            \")\",\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"TSMappedType\": {\n        parts.push(\n            n.readonly ? \"readonly \" : \"\",\n            \"[\",\n            path.call(print, \"typeParameter\"),\n            \"]\",\n            n.optional ? \"?\" : \"\"\n        );\n\n        if (n.typeAnnotation) {\n            parts.push(\": \", path.call(print, \"typeAnnotation\"), \";\");\n        }\n\n        return concat([\n            \"{\\n\",\n            concat(parts).indent(options.tabWidth),\n            \"\\n}\",\n        ]);\n    }\n\n    case \"TSTupleType\":\n        return concat([\n            \"[\",\n            fromString(\", \").join(path.map(print, \"elementTypes\")),\n            \"]\"\n        ]);\n\n    case \"TSIndexedAccessType\":\n        return concat([\n            path.call(print, \"objectType\"),\n            \"[\",\n            path.call(print, \"indexType\"),\n            \"]\"\n        ]);\n\n    case \"TSTypeOperator\":\n        return concat([\n            path.call(print, \"operator\"),\n            \" \",\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"TSTypeLiteral\": {\n        const memberLines =\n            fromString(\",\\n\").join(path.map(print, \"members\"));\n\n        if (memberLines.isEmpty()) {\n            return fromString(\"{}\", options);\n        }\n\n        parts.push(\n            \"{\\n\",\n            memberLines.indent(options.tabWidth),\n            \"\\n}\"\n        );\n\n        return concat(parts);\n    }\n\n    case \"TSEnumMember\":\n        parts.push(path.call(print, \"id\"));\n        if (n.initializer) {\n            parts.push(\n                \" = \",\n                path.call(print, \"initializer\")\n            );\n        }\n        return concat(parts);\n\n    case \"TSTypeQuery\":\n        return concat([\n            \"typeof \",\n            path.call(print, \"exprName\"),\n        ]);\n\n    case \"TSParameterProperty\":\n        if (n.accessibility) {\n            parts.push(n.accessibility, \" \");\n        }\n\n        if (n.export) {\n            parts.push(\"export \");\n        }\n\n        if (n.static) {\n            parts.push(\"static \");\n        }\n\n        if (n.readonly) {\n            parts.push(\"readonly \");\n        }\n\n        parts.push(path.call(print, \"parameter\"));\n\n        return concat(parts);\n\n    case \"TSTypeReference\":\n        return concat([\n            path.call(print, \"typeName\"),\n            path.call(print, \"typeParameters\")\n        ]);\n\n    case \"TSQualifiedName\":\n        return concat([\n            path.call(print, \"left\"),\n            \".\",\n            path.call(print, \"right\")\n        ]);\n\n    case \"TSAsExpression\": {\n        var withParens = n.extra && n.extra.parenthesized === true;\n        parts = [];\n        if (withParens) parts.push(\"(\");\n        parts.push(\n            path.call(print, \"expression\"),\n            fromString(\" as \"),\n            path.call(print, \"typeAnnotation\")\n        );\n        if (withParens) parts.push(\")\");\n\n        return concat(parts);\n    }\n\n    case \"TSNonNullExpression\":\n        return concat([\n            path.call(print, \"expression\"),\n            \"!\"\n        ]);\n\n    case \"TSTypeAnnotation\": {\n        // similar to flow's FunctionTypeAnnotation, this can be\n        // ambiguous: it can be prefixed by => or :\n        // in a type predicate, it takes the for u is U\n        var parent = path.getParentNode(0);\n        var prefix = \": \";\n        var isFunctionType = namedTypes.TSFunctionType.check(parent);\n        if (namedTypes.TSFunctionType.check(parent)) {\n            prefix = \" => \";\n        }\n\n        if (namedTypes.TSTypePredicate.check(parent)) {\n            prefix = \" is \";\n        }\n\n        return concat([\n            prefix,\n            path.call(print, \"typeAnnotation\")\n        ]);\n    }\n\n    case \"TSIndexSignature\":\n        return concat([\n            n.readonly ? \"readonly \" : \"\",\n            \"[\",\n            path.map(print, \"parameters\"),\n            \"]\",\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"TSPropertySignature\":\n        parts.push(\n            printVariance(path, print),\n            n.readonly ? \"readonly \" : \"\"\n        );\n\n        if (n.computed) {\n            parts.push(\n                \"[\",\n                path.call(print, \"key\"),\n                \"]\"\n            );\n        } else {\n            parts.push(path.call(print, \"key\"));\n        }\n\n        parts.push(\n            n.optional ? \"?\" : \"\",\n            path.call(print, \"typeAnnotation\")\n        );\n\n        return concat(parts);\n\n    case \"TSMethodSignature\":\n        if (n.computed) {\n            parts.push(\n                \"[\",\n                path.call(print, \"key\"),\n                \"]\"\n            );\n        } else {\n            parts.push(path.call(print, \"key\"));\n        }\n\n        if (n.optional) {\n            parts.push(\"?\");\n        }\n\n        parts.push(\n            path.call(print, \"typeParameters\"),\n            \"(\",\n            printFunctionParams(path, options, print),\n            \")\",\n            path.call(print, \"typeAnnotation\")\n        );\n\n        return concat(parts);\n\n    case \"TSTypePredicate\":\n        return concat([\n            path.call(print, \"parameterName\"),\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"TSCallSignatureDeclaration\":\n        return concat([\n            path.call(print, \"typeParameters\"),\n            \"(\",\n            printFunctionParams(path, options, print),\n            \")\",\n            path.call(print, \"typeAnnotation\")\n        ]);\n\n    case \"TSConstructSignatureDeclaration\":\n        if (n.typeParameters) {\n            parts.push(\n                \"new\",\n                path.call(print, \"typeParameters\")\n            );\n        } else {\n            parts.push(\"new \");\n        }\n\n        parts.push(\n            \"(\",\n            printFunctionParams(path, options, print),\n            \")\",\n            path.call(print, \"typeAnnotation\")\n        );\n\n        return concat(parts);\n\n    case \"TSTypeAliasDeclaration\":\n        return concat([\n            \"type \",\n            path.call(print, \"id\"),\n            path.call(print, \"typeParameters\"),\n            \" = \",\n            path.call(print, \"typeAnnotation\"),\n            \";\"\n        ]);\n\n    case \"TSTypeParameter\":\n        parts.push(path.call(print, \"name\"));\n\n        // ambiguous because of TSMappedType\n        var parent = path.getParentNode(0);\n        var isInMappedType = namedTypes.TSMappedType.check(parent);\n\n        if (n.constraint) {\n            parts.push(\n                isInMappedType ? \" in \" : \" extends \",\n                path.call(print, \"constraint\")\n            );\n        }\n\n        if (n[\"default\"]) {\n            parts.push(\" = \", path.call(print, \"default\"));\n        }\n\n        return concat(parts);\n\n    case \"TSTypeAssertion\":\n        var withParens = n.extra && n.extra.parenthesized === true;\n        if (withParens) {\n            parts.push(\"(\");\n        }\n\n        parts.push(\n            \"<\",\n            path.call(print, \"typeAnnotation\"),\n            \"> \",\n            path.call(print, \"expression\")\n        );\n\n        if (withParens) {\n            parts.push(\")\");\n        }\n\n        return concat(parts);\n\n    case \"TSTypeParameterDeclaration\":\n    case \"TSTypeParameterInstantiation\":\n        return concat([\n            \"<\",\n            fromString(\", \").join(path.map(print, \"params\")),\n            \">\"\n        ]);\n\n    case \"TSEnumDeclaration\":\n        parts.push(\n            n.declare ? \"declare \" : \"\",\n            n.const ? \"const \" : \"\",\n            \"enum \",\n            path.call(print, \"id\")\n        );\n\n        const memberLines =\n            fromString(\",\\n\").join(path.map(print, \"members\"));\n\n        if (memberLines.isEmpty()) {\n            parts.push(\" {}\");\n        } else {\n            parts.push(\n                \" {\\n\",\n                memberLines.indent(options.tabWidth),\n                \"\\n}\"\n            );\n        }\n\n        return concat(parts);\n\n    case \"TSExpressionWithTypeArguments\":\n        return concat([\n            path.call(print, \"expression\"),\n            path.call(print, \"typeParameters\")\n        ]);\n\n    case \"TSInterfaceBody\":\n        var lines = fromString(\";\\n\").join(path.map(print, \"body\"));\n        if (lines.isEmpty()) {\n            return fromString(\"{}\", options);\n        }\n\n        return concat([\n            \"{\\n\",\n            lines.indent(options.tabWidth), \";\",\n            \"\\n}\",\n        ]);\n\n    case \"TSImportEqualsDeclaration\":\n        if (n.isExport) {\n            parts.push(\"export \");\n        }\n\n        parts.push(\n            \"import \",\n            path.call(print, \"id\"),\n            \" = \",\n            path.call(print, \"moduleReference\")\n        );\n\n        return maybeAddSemicolon(concat(parts));\n\n    case \"TSExternalModuleReference\":\n      return concat([\"require(\", path.call(print, \"expression\"), \")\"]);\n\n    case \"TSModuleDeclaration\": {\n        const parent = path.getParentNode();\n\n        if (parent.type === \"TSModuleDeclaration\") {\n            parts.push(\".\");\n        } else {\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n\n            if (! n.global) {\n                const isExternal = n.id.type === \"StringLiteral\" ||\n                    (n.id.type === \"Literal\" &&\n                     typeof n.id.value === \"string\");\n\n                if (isExternal) {\n                    parts.push(\"module \");\n\n                } else if (n.loc &&\n                           n.loc.lines &&\n                           n.id.loc) {\n                    const prefix = n.loc.lines.sliceString(\n                        n.loc.start,\n                        n.id.loc.start\n                    );\n\n                    // These keywords are fundamentally ambiguous in the\n                    // Babylon parser, and not reflected in the AST, so\n                    // the best we can do is to match the original code,\n                    // when possible.\n                    if (prefix.indexOf(\"module\") >= 0) {\n                        parts.push(\"module \");\n                    } else {\n                        parts.push(\"namespace \");\n                    }\n\n                } else {\n                    parts.push(\"namespace \");\n                }\n            }\n        }\n\n        parts.push(path.call(print, \"id\"));\n\n        if (n.body && n.body.type === \"TSModuleDeclaration\") {\n            parts.push(path.call(print, \"body\"));\n        } else if (n.body) {\n            const bodyLines = path.call(print, \"body\");\n            if (bodyLines.isEmpty()) {\n                parts.push(\" {}\");\n            } else {\n                parts.push(\n                    \" {\\n\",\n                    bodyLines.indent(options.tabWidth),\n                    \"\\n}\"\n                );\n            }\n        }\n\n        return concat(parts);\n    }\n\n    case \"TSModuleBlock\":\n        return path.call(function (bodyPath) {\n            return printStatementSequence(bodyPath, options, print);\n        }, \"body\");\n\n    // Unhandled types below. If encountered, nodes of these types should\n    // be either left alone or desugared into AST types that are fully\n    // supported by the pretty-printer.\n    case \"ClassHeritage\": // TODO\n    case \"ComprehensionBlock\": // TODO\n    case \"ComprehensionExpression\": // TODO\n    case \"Glob\": // TODO\n    case \"GeneratorExpression\": // TODO\n    case \"LetStatement\": // TODO\n    case \"LetExpression\": // TODO\n    case \"GraphExpression\": // TODO\n    case \"GraphIndexExpression\": // TODO\n\n    // XML types that nobody cares about or needs to print.\n    case \"XMLDefaultDeclaration\":\n    case \"XMLAnyName\":\n    case \"XMLQualifiedIdentifier\":\n    case \"XMLFunctionQualifiedIdentifier\":\n    case \"XMLAttributeSelector\":\n    case \"XMLFilterExpression\":\n    case \"XML\":\n    case \"XMLElement\":\n    case \"XMLList\":\n    case \"XMLEscape\":\n    case \"XMLText\":\n    case \"XMLStartTag\":\n    case \"XMLEndTag\":\n    case \"XMLPointTag\":\n    case \"XMLName\":\n    case \"XMLAttribute\":\n    case \"XMLCdata\":\n    case \"XMLComment\":\n    case \"XMLProcessingInstruction\":\n    default:\n        debugger;\n        throw new Error(\"unknown type: \" + JSON.stringify(n.type));\n    }\n\n    return p;\n}\n\nfunction printStatementSequence(path, options, print) {\n    var inClassBody =\n        namedTypes.ClassBody &&\n        namedTypes.ClassBody.check(path.getParentNode());\n\n    var filtered = [];\n    var sawComment = false;\n    var sawStatement = false;\n\n    path.each(function(stmtPath) {\n        var i = stmtPath.getName();\n        var stmt = stmtPath.getValue();\n\n        // Just in case the AST has been modified to contain falsy\n        // \"statements,\" it's safer simply to skip them.\n        if (!stmt) {\n            return;\n        }\n\n        // Skip printing EmptyStatement nodes to avoid leaving stray\n        // semicolons lying around.\n        if (stmt.type === \"EmptyStatement\") {\n            return;\n        }\n\n        if (namedTypes.Comment.check(stmt)) {\n            // The pretty printer allows a dangling Comment node to act as\n            // a Statement when the Comment can't be attached to any other\n            // non-Comment node in the tree.\n            sawComment = true;\n        } else if (namedTypes.Statement.check(stmt)) {\n            sawStatement = true;\n        } else {\n            // When the pretty printer encounters a string instead of an\n            // AST node, it just prints the string. This behavior can be\n            // useful for fine-grained formatting decisions like inserting\n            // blank lines.\n            isString.assert(stmt);\n        }\n\n        // We can't hang onto stmtPath outside of this function, because\n        // it's just a reference to a mutable FastPath object, so we have\n        // to go ahead and print it here.\n        filtered.push({\n            node: stmt,\n            printed: print(stmtPath)\n        });\n    });\n\n    if (sawComment) {\n        assert.strictEqual(\n            sawStatement, false,\n            \"Comments may appear as statements in otherwise empty statement \" +\n                \"lists, but may not coexist with non-Comment nodes.\"\n        );\n    }\n\n    var prevTrailingSpace = null;\n    var len = filtered.length;\n    var parts = [];\n\n    filtered.forEach(function(info, i) {\n        var printed = info.printed;\n        var stmt = info.node;\n        var multiLine = printed.length > 1;\n        var notFirst = i > 0;\n        var notLast = i < len - 1;\n        var leadingSpace;\n        var trailingSpace;\n        var lines = stmt && stmt.loc && stmt.loc.lines;\n        var trueLoc = lines && options.reuseWhitespace &&\n            util.getTrueLoc(stmt, lines);\n\n        if (notFirst) {\n            if (trueLoc) {\n                var beforeStart = lines.skipSpaces(trueLoc.start, true);\n                var beforeStartLine = beforeStart ? beforeStart.line : 1;\n                var leadingGap = trueLoc.start.line - beforeStartLine;\n                leadingSpace = Array(leadingGap + 1).join(\"\\n\");\n            } else {\n                leadingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        } else {\n            leadingSpace = \"\";\n        }\n\n        if (notLast) {\n            if (trueLoc) {\n                var afterEnd = lines.skipSpaces(trueLoc.end);\n                var afterEndLine = afterEnd ? afterEnd.line : lines.length;\n                var trailingGap = afterEndLine - trueLoc.end.line;\n                trailingSpace = Array(trailingGap + 1).join(\"\\n\");\n            } else {\n                trailingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        } else {\n            trailingSpace = \"\";\n        }\n\n        parts.push(\n            maxSpace(prevTrailingSpace, leadingSpace),\n            printed\n        );\n\n        if (notLast) {\n            prevTrailingSpace = trailingSpace;\n        } else if (trailingSpace) {\n            parts.push(trailingSpace);\n        }\n    });\n\n    return concat(parts);\n}\n\nfunction maxSpace(s1, s2) {\n    if (!s1 && !s2) {\n        return fromString(\"\");\n    }\n\n    if (!s1) {\n        return fromString(s2);\n    }\n\n    if (!s2) {\n        return fromString(s1);\n    }\n\n    var spaceLines1 = fromString(s1);\n    var spaceLines2 = fromString(s2);\n\n    if (spaceLines2.length > spaceLines1.length) {\n        return spaceLines2;\n    }\n\n    return spaceLines1;\n}\n\nfunction printMethod(path, options, print) {\n    var node = path.getNode();\n    var kind = node.kind;\n    var parts = [];\n\n    var nodeValue = node.value;\n    if (! namedTypes.FunctionExpression.check(nodeValue)) {\n        nodeValue = node;\n    }\n\n    var access = node.accessibility || node.access;\n    if (typeof access === \"string\") {\n        parts.push(access, \" \");\n    }\n\n    if (node.static) {\n        parts.push(\"static \");\n    }\n\n    if (node.abstract) {\n        parts.push(\"abstract \");\n    }\n\n    if (node.readonly) {\n        parts.push(\"readonly \");\n    }\n\n    if (nodeValue.async) {\n        parts.push(\"async \");\n    }\n\n    if (nodeValue.generator) {\n        parts.push(\"*\");\n    }\n\n    if (kind === \"get\" || kind === \"set\") {\n        parts.push(kind, \" \");\n    }\n\n    var key = path.call(print, \"key\");\n    if (node.computed) {\n        key = concat([\"[\", key, \"]\"]);\n    }\n\n    parts.push(key);\n\n    if (node.optional) {\n        parts.push(\"?\");\n    }\n\n    if (node === nodeValue) {\n        parts.push(\n            path.call(print, \"typeParameters\"),\n            \"(\",\n            printFunctionParams(path, options, print),\n            \")\",\n            path.call(print, \"returnType\")\n        );\n\n        if (node.body) {\n            parts.push(\" \", path.call(print, \"body\"));\n        } else {\n            parts.push(\";\");\n        }\n\n    } else {\n        parts.push(\n            path.call(print, \"value\", \"typeParameters\"),\n            \"(\",\n            path.call(function(valuePath) {\n                return printFunctionParams(valuePath, options, print);\n            }, \"value\"),\n            \")\",\n            path.call(print, \"value\", \"returnType\")\n        );\n\n        if (nodeValue.body) {\n            parts.push(\" \", path.call(print, \"value\", \"body\"));\n        } else {\n            parts.push(\";\");\n        }\n    }\n\n    return concat(parts);\n}\n\nfunction printArgumentsList(path, options, print) {\n    var printed = path.map(print, \"arguments\");\n    var trailingComma = util.isTrailingCommaEnabled(options, \"parameters\");\n\n    var joined = fromString(\", \").join(printed);\n    if (joined.getLineLength(1) > options.wrapColumn) {\n        joined = fromString(\",\\n\").join(printed);\n        return concat([\n            \"(\\n\",\n            joined.indent(options.tabWidth),\n            trailingComma ? \",\\n)\" : \"\\n)\"\n        ]);\n    }\n\n    return concat([\"(\", joined, \")\"]);\n}\n\nfunction printFunctionParams(path, options, print) {\n    var fun = path.getValue();\n\n    if (fun.params) {\n        var params = fun.params;\n        var printed = path.map(print, \"params\");\n    } else if (fun.parameters) {\n        params = fun.parameters;\n        printed = path.map(print, \"parameters\");\n    }\n\n    if (fun.defaults) {\n        path.each(function(defExprPath) {\n            var i = defExprPath.getName();\n            var p = printed[i];\n            if (p && defExprPath.getValue()) {\n                printed[i] = concat([p, \" = \", print(defExprPath)]);\n            }\n        }, \"defaults\");\n    }\n\n    if (fun.rest) {\n        printed.push(concat([\"...\", path.call(print, \"rest\")]));\n    }\n\n    var joined = fromString(\", \").join(printed);\n    if (joined.length > 1 ||\n        joined.getLineLength(1) > options.wrapColumn) {\n        joined = fromString(\",\\n\").join(printed);\n        if (util.isTrailingCommaEnabled(options, \"parameters\") &&\n            !fun.rest &&\n            params[params.length - 1].type !== 'RestElement') {\n            joined = concat([joined, \",\\n\"]);\n        } else {\n            joined = concat([joined, \"\\n\"]);\n        }\n        return concat([\"\\n\", joined.indent(options.tabWidth)]);\n    }\n\n    return joined;\n}\n\nfunction printExportDeclaration(path, options, print) {\n    var decl = path.getValue();\n    var parts = [\"export \"];\n    if (decl.exportKind && decl.exportKind !== \"value\") {\n        parts.push(decl.exportKind + \" \");\n    }\n    var shouldPrintSpaces = options.objectCurlySpacing;\n\n    namedTypes.Declaration.assert(decl);\n\n    if (decl[\"default\"] ||\n        decl.type === \"ExportDefaultDeclaration\") {\n        parts.push(\"default \");\n    }\n\n    if (decl.declaration) {\n        parts.push(path.call(print, \"declaration\"));\n\n    } else if (decl.specifiers &&\n               decl.specifiers.length > 0) {\n\n        if (decl.specifiers.length === 1 &&\n            decl.specifiers[0].type === \"ExportBatchSpecifier\") {\n            parts.push(\"*\");\n        } else {\n            parts.push(\n                shouldPrintSpaces ? \"{ \" : \"{\",\n                fromString(\", \").join(path.map(print, \"specifiers\")),\n                shouldPrintSpaces ? \" }\" : \"}\"\n            );\n        }\n\n        if (decl.source) {\n            parts.push(\" from \", path.call(print, \"source\"));\n        }\n    }\n\n    var lines = concat(parts);\n    if (lastNonSpaceCharacter(lines) !== \";\" &&\n        ! (decl.declaration &&\n           (decl.declaration.type === \"FunctionDeclaration\" ||\n            decl.declaration.type === \"ClassDeclaration\" ||\n            decl.declaration.type === \"TSModuleDeclaration\" ||\n            decl.declaration.type === \"TSInterfaceDeclaration\" ||\n            decl.declaration.type === \"TSEnumDeclaration\"))) {\n        lines = concat([lines, \";\"]);\n    }\n    return lines;\n}\n\nfunction printFlowDeclaration(path, parts) {\n    var parentExportDecl = util.getParentExportDeclaration(path);\n\n    if (parentExportDecl) {\n        assert.strictEqual(\n            parentExportDecl.type,\n            \"DeclareExportDeclaration\"\n        );\n    } else {\n        // If the parent node has type DeclareExportDeclaration, then it\n        // will be responsible for printing the \"declare\" token. Otherwise\n        // it needs to be printed with this non-exported declaration node.\n        parts.unshift(\"declare \");\n    }\n\n    return concat(parts);\n}\n\nfunction printVariance(path, print) {\n    return path.call(function (variancePath) {\n        var value = variancePath.getValue();\n\n        if (value) {\n            if (value === \"plus\") {\n                return fromString(\"+\");\n            }\n\n            if (value === \"minus\") {\n                return fromString(\"-\");\n            }\n\n            return print(variancePath);\n        }\n\n        return fromString(\"\");\n    }, \"variance\");\n}\n\nfunction adjustClause(clause, options) {\n    if (clause.length > 1)\n        return concat([\" \", clause]);\n\n    return concat([\n        \"\\n\",\n        maybeAddSemicolon(clause).indent(options.tabWidth)\n    ]);\n}\n\nfunction lastNonSpaceCharacter(lines) {\n    var pos = lines.lastPos();\n    do {\n        var ch = lines.charAt(pos);\n        if (/\\S/.test(ch))\n            return ch;\n    } while (lines.prevPos(pos));\n}\n\nfunction endsWithBrace(lines) {\n    return lastNonSpaceCharacter(lines) === \"}\";\n}\n\nfunction swapQuotes(str) {\n    return str.replace(/['\"]/g, function(m) {\n        return m === '\"' ? '\\'' : '\"';\n    });\n}\n\nfunction nodeStr(str, options) {\n    isString.assert(str);\n    switch (options.quote) {\n    case \"auto\":\n        var double = JSON.stringify(str);\n        var single = swapQuotes(JSON.stringify(swapQuotes(str)));\n        return double.length > single.length ? single : double;\n    case \"single\":\n        return swapQuotes(JSON.stringify(swapQuotes(str)));\n    case \"double\":\n    default:\n        return JSON.stringify(str);\n    }\n}\n\nfunction maybeAddSemicolon(lines) {\n    var eoc = lastNonSpaceCharacter(lines);\n    if (!eoc || \"\\n};\".indexOf(eoc) < 0)\n        return concat([lines, \";\"]);\n    return lines;\n}\n","var types = require(\"./lib/types\");\nvar parse = require(\"./lib/parser\").parse;\nvar Printer = require(\"./lib/printer\").Printer;\n\nfunction print(node, options) {\n    return new Printer(options).print(node);\n}\n\nfunction prettyPrint(node, options) {\n    return new Printer(options).printGenerically(node);\n}\n\nfunction run(transformer, options) {\n    return runFile(process.argv[2], transformer, options);\n}\n\nfunction runFile(path, transformer, options) {\n    require(\"fs\").readFile(path, \"utf-8\", function(err, code) {\n        if (err) {\n            console.error(err);\n            return;\n        }\n\n        runString(code, transformer, options);\n    });\n}\n\nfunction defaultWriteback(output) {\n    process.stdout.write(output);\n}\n\nfunction runString(code, transformer, options) {\n    var writeback = options && options.writeback || defaultWriteback;\n    transformer(parse(code, options), function(node) {\n        writeback(print(node, options).code);\n    });\n}\n\nObject.defineProperties(exports, {\n    /**\n     * Parse a string of code into an augmented syntax tree suitable for\n     * arbitrary modification and reprinting.\n     */\n    parse: {\n        enumerable: true,\n        value: parse\n    },\n\n    /**\n     * Traverse and potentially modify an abstract syntax tree using a\n     * convenient visitor syntax:\n     *\n     *   recast.visit(ast, {\n     *     names: [],\n     *     visitIdentifier: function(path) {\n     *       var node = path.value;\n     *       this.visitor.names.push(node.name);\n     *       this.traverse(path);\n     *     }\n     *   });\n     */\n    visit: {\n        enumerable: true,\n        value: types.visit\n    },\n\n    /**\n     * Reprint a modified syntax tree using as much of the original source\n     * code as possible.\n     */\n    print: {\n        enumerable: true,\n        value: print\n    },\n\n    /**\n     * Print without attempting to reuse any original source code.\n     */\n    prettyPrint: {\n        enumerable: false,\n        value: prettyPrint\n    },\n\n    /**\n     * Customized version of require(\"ast-types\").\n     */\n    types: {\n        enumerable: false,\n        value: types\n    },\n\n    /**\n     * Convenient command-line interface (see e.g. example/add-braces).\n     */\n    run: {\n        enumerable: false,\n        value: run\n    }\n});\n","import jsx from \"jsx-transform\";\nimport parse5 from \"parse5\";\nimport * as recast from \"recast\";\n\nconst isLineBreakAndZeroOrMoreSpaces = new RegExp(\"^\\\\n\\\\s*$\", \"g\");\n\nconst isLineBreakWithText = new RegExp(\"(\\\\n\\\\s*)|([^\\\\s].+)\", \"g\");\n\nfunction parseAttributes(attrs) {\n  const sorted = [...attrs].sort((a, b) => a.name > b.name);\n\n  return sorted.reduce((result, attr) => {\n    result[attr.name] = attr.value;\n\n    return result;\n  }, {});\n}\n\nfunction parseNodes(nodes) {\n  if (nodes.length === 1) {\n    const [node] = nodes;\n\n    if (\n      node.nodeName === \"#text\" &&\n      !isLineBreakAndZeroOrMoreSpaces.test(node.value)\n    ) {\n      return node.value.replace(\n        isLineBreakWithText,\n        (matches, group1, group2) => {\n          return group2 || \"\";\n        }\n      );\n    }\n  }\n\n  return nodes.reduce((result, node) => {\n    if (\n      node.nodeName === \"#text\" &&\n      isLineBreakAndZeroOrMoreSpaces.test(node.value)\n    ) {\n      return result;\n    }\n\n    if (node.nodeName !== \"#text\") {\n      const array = [node.tagName];\n\n      node.attrs.length && array.push(parseAttributes(node.attrs));\n      node.childNodes.length && array.push(parseNodes(node.childNodes));\n\n      return result.concat([array]);\n    }\n\n    if (!isLineBreakAndZeroOrMoreSpaces.test(node.value)) {\n      return result.concat(node.value);\n    }\n\n    return result;\n  }, []);\n}\n\nconst builders = recast.default.types.builders;\n\nexport default function lmn(domString, mode = \"HTML\") {\n  if (mode === \"JSX\") {\n    const ast = recast.parse(jsx.fromString(domString, { factory: \"h\" }));\n    return hToIJK(ast);\n  }\n\n  const parsedFragment = parse5.parseFragment(domString.trim());\n\n  if (parsedFragment.childNodes.length > 1) {\n    throw new Error(\"More than one element as root.\");\n  }\n\n  const [parsedNodes] = parseNodes(parsedFragment.childNodes);\n\n  return parsedNodes;\n}\n\nconst hToIJK_helper = element => {\n  if (element.type === \"ArrayExpression\") {\n    return builders.arrayExpression(\n      element.elements.map(expression => {\n        if (\n          expression.type === \"CallExpression\" &&\n          expression.callee.name === \"h\"\n        ) {\n          return builders.arrayExpression(expression.arguments);\n        }\n        return expression;\n      })\n    );\n  }\n  return element;\n};\n\nconst hToIJK = ast => {\n  const [body] = ast.program.body;\n\n  if (body.expression) {\n    if (\n      body.expression.type === \"CallExpression\" &&\n      body.expression.callee.name === \"h\"\n    ) {\n      body.expression = builders.arrayExpression(body.expression.arguments);\n      body.expression.elements = body.expression.elements.map(hToIJK_helper);\n    }\n  }\n\n  // return ast;\n  return recast.default.prettyPrint(ast).code;\n};\n","import lmn from \"../../src/main.mjs\";\n\nexport default (input, mode) => {\n  try {\n    return lmn(input, mode);\n  } catch (error) {\n    window.console.log(error);\n    return error.message;\n  }\n};\n","import transform from \"./core/main.mjs\";\n\nexport default {\n  changeMode: () => state => ({ mode: state.mode === \"HTML\" ? \"JSX\" : \"HTML\" }),\n  input: text => state => {\n    if (text === \"\") {\n      return { output: \"\" };\n    }\n\n    const transformed = transform(text, state.mode);\n\n    let output;\n\n    if (state.mode === \"HTML\") {\n      output = JSON.stringify(transformed, null, 2);\n    } else {\n      output = transformed;\n    }\n\n    return { input: text, output };\n  }\n};\n","export default {\n  mode: \"HTML\"\n};\n","const isString = x => typeof x === 'string'\nconst isArray = x => Array.isArray(x)\nconst isObject = x => typeof x === 'object' && !isArray(x)\n\nconst clean = (arr, n) => (\n  n && Array.prototype.push.apply(arr, isString(n[0]) ? [n] : n), arr\n)\n\nconst child = (n, cb) =>\n  n != null ? (isArray(n) ? n.reduce(clean, []).map(cb) : [n + '']) : []\n\nexport const h = (x, y, z) => node =>\n  isString(node)\n    ? node\n    : isObject(node[1])\n      ? {\n          [x]: node[0],\n          [y]: node[1],\n          [z]: child(node[2], h(x, y, z)),\n        }\n      : h(x, y, z)([node[0], {}, node[1]])\n","import \"./main.css\";\n\nexport default ({ actions, state }) => [\n  \"div\",\n  {\n    class: \"main\"\n  },\n  [\n    [\n      \"header\",\n      { class: \"header\" },\n      [\n        [\n          \"h1\",\n          [\n            [\n              \"span\",\n              { onclick: () => actions.changeMode(), tabindex: 0 },\n              state.mode\n            ],\n            \"  to \",\n            [\n              \"a\",\n              {\n                href: \"https://github.com/lukejacksonn/ijk\",\n                title:\n                  \"Transforms arrays into virtual dom trees; a terse alternative to JSX and h\"\n              },\n              \"ijk\"\n            ]\n          ]\n        ]\n      ]\n    ],\n    [\n      \"textarea\",\n      {\n        class: \"input\",\n        oninput: event => actions.input(event.target.value),\n        placeholder: `HTML goes here =)`\n      }\n    ],\n    [\n      \"textarea\",\n      {\n        class: \"output\",\n        value: state.output,\n        placeholder: `ijk comes out here \\\\o/`\n      }\n    ]\n  ]\n];\n","import { h } from \"ijk\";\n\nimport main from \"./views/main.mjs\";\n\nimport \"./main.css\";\n\nexport default (state, actions) =>\n  h(\"nodeName\", \"attributes\", \"children\")([\"div\", [main({ actions, state })]]);\n","import { app } from \"hyperapp\";\n\nimport actions from \"./actions.mjs\";\nimport state from \"./state.mjs\";\nimport view from \"./view.mjs\";\n\napp(state, actions, view, window.document.body);\n"]}